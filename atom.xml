<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>innoc abroad</title>
  
  <subtitle>假如给猪一对翅膀</subtitle>
  <link href="http://innocabroad.github.io/atom.xml" rel="self"/>
  
  <link href="http://innocabroad.github.io/"/>
  <updated>2023-03-14T02:40:19.406Z</updated>
  <id>http://innocabroad.github.io/</id>
  
  <author>
    <name>innocence</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>no type</title>
    <link href="http://innocabroad.github.io/2023/03/14/no-type/"/>
    <id>http://innocabroad.github.io/2023/03/14/no-type/</id>
    <published>2023-03-14T02:40:19.000Z</published>
    <updated>2023-03-14T02:40:19.406Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>pdf绕过编辑限制</title>
    <link href="http://innocabroad.github.io/2023/03/13/pdf-rao-guo-bian-ji-xian-zhi/"/>
    <id>http://innocabroad.github.io/2023/03/13/pdf-rao-guo-bian-ji-xian-zhi/</id>
    <published>2023-03-13T01:14:33.000Z</published>
    <updated>2023-03-13T11:33:52.112Z</updated>
    
    <content type="html"><![CDATA[<p>使用qpdf工具</p><p>1、下载破解工具QPDF</p><p>2、解压文件之后，进入bin目录，打开cmd，执行以下命令即可解密：</p><pre><code>  qpdf --decrypt aaa.pdf bbb.pdf</code></pre><ol><li>安装<br>brew install jpeg-turbo<br>brew install qpdf<br>出现问题<br>Mac问题:Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP. Hide these hints with HOMEBREW</li></ol><p>1.问题描述</p><ul><li>Mac M1芯片在使用homebrew 安装依赖库时，出现如下提示：<br>Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP</li></ul><p>2.解决方法<br>Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.<br>Hide these hints with HOMEBREW_NO_ENV_HINTS (see <code>man brew</code>).</p><p>根据上述语句中的HOMEBREW_NO_ENV_HINTS进行如下操作即可：<br>export HOMEBREW_NO_INSTALL_CLEANUP&#x3D;TRUE</p><p><a href="https://img-blog.csdnimg.cn/5a0ed825ea70489895154e32952a14ed.png">https://img-blog.csdnimg.cn/5a0ed825ea70489895154e32952a14ed.png</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;使用qpdf工具&lt;/p&gt;
&lt;p&gt;1、下载破解工具QPDF&lt;/p&gt;
&lt;p&gt;2、解压文件之后，进入bin目录，打开cmd，执行以下命令即可解密：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  qpdf --decrypt aaa.pdf bbb.pdf
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>在我的mac上怎么才能使用chatgpt</title>
    <link href="http://innocabroad.github.io/2023/02/19/zai-wo-de-mac-shang-zen-me-cai-neng-shi-yong-chatgpt/"/>
    <id>http://innocabroad.github.io/2023/02/19/zai-wo-de-mac-shang-zen-me-cai-neng-shi-yong-chatgpt/</id>
    <published>2023-02-19T12:17:59.000Z</published>
    <updated>2023-02-19T12:25:29.386Z</updated>
    
    <content type="html"><![CDATA[<ol><li>挂代理，美国，英国都可以正常使用</li><li>密码在 火狐浏览器里 使用的是google邮箱</li><li>使用google浏览器打开 <a href="https://chat.openai.com/chat">https://chat.openai.com/chat</a> ，使用匿名模式打开浏览器。显示国家不符合就更换代理啊亲</li><li>chat中出现联系官方客服的话，换ip或者刷新浏览器，最好使用独享ip,可惜我没有钱</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;挂代理，美国，英国都可以正常使用&lt;/li&gt;
&lt;li&gt;密码在 火狐浏览器里 使用的是google邮箱&lt;/li&gt;
&lt;li&gt;使用google浏览器打开 &lt;a href=&quot;https://chat.openai.com/chat&quot;&gt;https://chat.openai</summary>
      
    
    
    
    <category term="chatgpt" scheme="http://innocabroad.github.io/categories/chatgpt/"/>
    
    
    <category term="chatgpt" scheme="http://innocabroad.github.io/tags/chatgpt/"/>
    
  </entry>
  
  <entry>
    <title>测试</title>
    <link href="http://innocabroad.github.io/2023/02/18/ce-shi/"/>
    <id>http://innocabroad.github.io/2023/02/18/ce-shi/</id>
    <published>2023-02-18T06:13:36.000Z</published>
    <updated>2023-02-18T06:13:36.068Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>数据降维--因子分析</title>
    <link href="http://innocabroad.github.io/2022/10/01/shu-ju-jiang-wei-yin-zi-fen-xi/"/>
    <id>http://innocabroad.github.io/2022/10/01/shu-ju-jiang-wei-yin-zi-fen-xi/</id>
    <published>2022-10-01T10:43:47.000Z</published>
    <updated>2022-10-01T10:58:43.331Z</updated>
    
    <content type="html"><![CDATA[<p>参考：<a href="https://www.heywhale.com/mw/project/5e4fc6580e2b66002c1fac1b">https://www.heywhale.com/mw/project/5e4fc6580e2b66002c1fac1b</a></p><h1 id="因子分析-factor-analysis"><a href="#因子分析-factor-analysis" class="headerlink" title="因子分析(factor analysis)"></a>因子分析(factor analysis)</h1><p>可以通过spss进行因子分析<br>是指研究从变量群中提取共性因子的统计技术。 因子分析是简化、分析高维数据的一种统计方法。<br>因子分析又存在两个方向，一个是探索性因子分析（exploratory factor analysis）。另一个是验证性因子分析（confirmatory factor analysis）。</p><p>探索性因子分析是先不假定一堆自变量背后到底有几个因子以及关系，而是我们通过这个方法去寻找因子及关系。</p><p>验证性因子分析是假设一堆自变量背后有几个因子，试图验证这种假设是否正确。</p><p>因子分析有两个核心问题，一是如何构造因子变量，二是如何对因子变量进行命名解释。</p><h2 id="因子分析的一般步骤"><a href="#因子分析的一般步骤" class="headerlink" title="因子分析的一般步骤"></a>因子分析的一般步骤</h2><ol><li><p>将原始数据标准化处理 X</p></li><li><p>计算相关矩阵C</p></li><li><p>计算相关矩阵C的特征值 r 和特征向量 U</p></li></ol><p>4.确定公共因子个数k</p><ol start="5"><li><p>构造初始因子载荷矩阵,其中U为r的特征向量</p></li><li><p>建立因子模型</p></li><li><p>对初始因子载荷矩阵A进行旋转变换，旋转变换是使初始因子载荷矩阵结构简化，关系明确，使得因子变量更具有可解释性，如果初始因子不相关，可以用方差极大正交旋转，如果初始因子间相关，可以用斜交旋转，进过旋转后得到比较理想的新的因子载荷矩阵A’.</p></li><li><p>将因子表示成变量的线性组合，其中的系数可以通过最小二乘法得到.</p></li><li><p>计算因子得分.</p></li></ol><h1 id="参考代码-https-www-heywhale-com-mw-project-5ec1913cfb82740098cfce44"><a href="#参考代码-https-www-heywhale-com-mw-project-5ec1913cfb82740098cfce44" class="headerlink" title="参考代码 https://www.heywhale.com/mw/project/5ec1913cfb82740098cfce44"></a>参考代码 <a href="https://www.heywhale.com/mw/project/5ec1913cfb82740098cfce44">https://www.heywhale.com/mw/project/5ec1913cfb82740098cfce44</a></h1><h2 class="bamboo-h " id="随机森林降维度">随机森林降维度</h2><br/><p>随机森林可以降维度<br>还要用Pearson 相关分析逐一剔除相关性较强的 10 组变量，最后取前 20 个特征作为主要变量。<br><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/%E6%88%AA%E5%B1%8F2022-10-0117.11.37.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/%E6%88%AA%E5%B1%8F2022-10-0117.11.37.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>3.3 数据降维 参考文献<img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/D21101080006.pdf" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/D21101080006.pdf" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>3.3.1 皮尔逊相关分析<br>皮尔逊相关也称为积差相关(或积矩相关)是英国统计学家皮尔逊于 20 世纪提出的 一种计算直线相关的方法。<br>假设有两个变量 X、Y，皮尔逊相关系数则用于度量 X 和 Y 之间的线性相关程度，其 值介于-1 与 1 之间。这种线性相关直观表述为:随着 X 增大，Y 是否同时增大或者减小; 当二者分布在一条直线上时，皮尔逊相关系数等于 1 或-1;两个变量之间没有线性关系时， 皮尔逊相关系数为 0。<br>那么两变量间的皮尔逊相关系数可通过以下公式(1)计算:<br>$\rho(X, Y)&#x3D;\frac{\operatorname{cov}(X, Y)}{\sigma_X \sigma_Y}&#x3D;\frac{E\left[\left(X-\mu_X\right)\left(Y-\mu_Y\right)\right]}{\sqrt{\sum_{i&#x3D;1}^n\left(X_i-\mu_X\right)^2} \sqrt{\sum_{i&#x3D;1}^n\left(Y_i-\mu_Y\right)}}$<br>\begin{equation}<br>\rho(X, Y)&#x3D;\frac{\operatorname{cov}(X, Y)}{\sigma_X \sigma_Y}&#x3D;\frac{E\left[\left(X-\mu_X\right)\left(Y-\mu_Y\right)\right]}{\sqrt{\sum_{i&#x3D;1}^n\left(X_i-\mu_X\right)^2} \sqrt{\sum_{i&#x3D;1}^n\left(Y_i-\mu_Y\right)}}<br>\end{equation}<br>\rho(X, Y)&#x3D;\frac{\operatorname{cov}(X, Y)}{\sigma_X \sigma_Y}&#x3D;\frac{E\left[\left(X-\mu_X\right)\left(Y-\mu_Y\right)\right]}{\sqrt{\sum_{i&#x3D;1}^n\left(X_i-\mu_X\right)^2} \sqrt{\sum_{i&#x3D;1}^n\left(Y_i-\mu_Y\right)}}<br>$\rho(X, Y)&#x3D;\frac{\operatorname{cov}(X, Y)}{\sigma_X \sigma_Y}&#x3D;\frac{E\left[\left(X-\mu_X\right)\left(Y-\mu_Y\right)\right]}{\sqrt{\sum_{i&#x3D;1}^n\left(X_i-\mu_X\right)^2} \sqrt{\sum_{i&#x3D;1}^n\left(Y_i-\mu_Y\right)}}$</p><h2 class="bamboo-h " id="熵值法降维">熵值法降维</h2><br/><p>  熵是热力学的一个物理概念，是系统混乱度(或无序度)的量度。熵越大说明系统越<br>混乱，携带的信息越少，熵越小说明系统越有序，携带的信息越多。根据熵的特性，可以<br>通过计算熵值来表示一个随机系统的无序程度，也可以用熵值来判断一个指标的离散程<br>度。<br>熵值法的一般步骤可以表述为:数据标准化、数据预处理、计算熵值和计算权重。<br>我们采用熵值法降维的方法对附件“Molecular_Descriptor.xlsx”和“ERα_activity.xlsx” 中的特征进行权值计算，结果如下图 3-4 所示:<br>由图示可以看出，特征值的权重逐渐下降，权值是指加权平均数中的每个数的频数， 因此，在 1974 个化合物的 729 个分子描述符信息中，前 30 个特征的权值较大，说明对生 物活性的影响较大，具有一定的代表性，因此，采用 python 语言对熵值法的前 30 个特征 选择进行实现，结果如下图 3-4 所示<br>如上图 3-5 所示，在熵值法降维中，前 30 个对生物活性具有显著影响的分子描述符(即 变量)之间的正相关性较强，普遍呈现绿色(绿色表示正相关性，本身之间的相关性为 1)， 负相关性的表示比较弱，代表性不是很强。另外，熵值法降维缺乏各对特征之间的横向比 较，且各特征的权数随样本的变化而变化，权数依赖于样本，在应用上受到一定的限制。 因此采用随机森林降维法弥补该缺点。</p><h2 class="bamboo-h " id="随机森林降维">随机森林降维</h2><br/><p>参考代码：<a href="https://zhuanlan.zhihu.com/p/416520778?utm_medium=social&amp;utm_oi=629375409599549440">https://zhuanlan.zhihu.com/p/416520778?utm_medium=social&amp;utm_oi=629375409599549440</a><br>随机森林(Random Forest，简称 RF)，是一种新兴起的、高度灵活的、基于树的机 器学习算法，该算法利用多棵树的力量来进行决策。森林中的每棵树并不一样，每棵树都 是被随机创造的，每棵树中的每一个节点都是待选特征的一个随机子集，所有树的输出结 果整合起来就是森林最后的输出结果。<br>随机森林重点是“随机”两个字，它包括两个方面:<br>训练数据的随机选取。即用于训练单棵树的数据应该是随机、有放回的从全部数据中<br>选取和原始数据集相同的数据量。此要求是为了防止每棵树用于训练的数据一致导致训练<br>出来的每棵树都一样，这样就丢失了构建多棵树的意义。<br> 选特征的随机选取。使得森林中的各棵树都能够彼此不同，提示系统的多样性，从<br>而提升分类性能。<br>采用随机森林降维法对附件“Molecular_Descriptor.xlsx”和“ERα_activity.xlsx”中的 特征进行处理，并根据变量对生物活性影响的重要性(贡献率)进行排序，排序后每个特 征贡献率所占百分比如下图 3-6 所示:</p><p>图 3-6 所示，对附件“Molecular_Descriptor.xlsx”和“ERα_activity.xlsx”所给的特 征，进行特征贡献率计算并做好排序，在 1974 个化合物的 729 个分子描述符信息中，前 30 个特征对生物活性的贡献率较大，后面的特征贡献率小于 0.006，影响因子较小。</p><p>用 python 语言对随机森林的前 30 个特征选择与降维进行实现，结果如上图 3-7 所示， 该图较好的呈现出了各特征之间的相关性，绿色部分表示各特征之间的正相关，红色部分 表示各特征之间的负相关，颜色程度越深表示相关性越强，RF 降维法的结果显示相关性分 布比较均匀。</p><h2 class="bamboo-h " id="主成分分析降维">主成分分析降维</h2><br/><h2 class="bamboo-h " id="方案对比">方案对比</h2><br/><p>由图 3-5 和 3-7 的对比，熵值法整体偏正相关，并且该方法在筛选变量过程中和因变 量 pIC50 无关。综合这两点可知熵值法挑选的 30 组特征不具有代表性，而随机森林特征 选择避免了这两个缺点，因此使用随机森林挑选的 30 个特征更具有代表性。在此基础之 上，本文对随机森林的 30 组变量进行相关性分析，逐一删除了图 3-7 中 30 个特征中相关 性大于 0.85 的 10 个对特征中的一个，最终选择出了 20 组特征作为主要变量。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;参考：&lt;a href=&quot;https://www.heywhale.com/mw/project/5e4fc6580e2b66002c1fac1b&quot;&gt;https://www.heywhale.com/mw/project/5e4fc6580e2b66002c1fac1b&lt;/a</summary>
      
    
    
    
    <category term="数学建模" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    
    <category term="数据降维" scheme="http://innocabroad.github.io/tags/%E6%95%B0%E6%8D%AE%E9%99%8D%E7%BB%B4/"/>
    
    <category term="因子分析" scheme="http://innocabroad.github.io/tags/%E5%9B%A0%E5%AD%90%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>算法-问题求解</title>
    <link href="http://innocabroad.github.io/2022/09/30/suan-fa-wen-ti-qiu-jie/"/>
    <id>http://innocabroad.github.io/2022/09/30/suan-fa-wen-ti-qiu-jie/</id>
    <published>2022-09-30T03:13:54.000Z</published>
    <updated>2022-10-02T16:54:29.643Z</updated>
    
    <content type="html"><![CDATA[<h1 class="bamboo-h " id="算法-问题求解">算法-问题求解</h1><br/><p>什么是参数优化？举个例子，对于模型y&#x3D;f(x)&#x3D;ax+b，附件中会给定x和y的值。当然，模型y&#x3D;ax+b不会告诉你，这是自己建立的模型。建立了模型之后，通过数据去拟合，求解参数a和b</p><p>怎么求a和b，这就是关于算法的问题。对于y&#x3D;ax+b这样简单的模型，拟合本质上是优化，我们可以使用各种成熟的优化算法，如：<br>单步长（变步长）搜索法<br>二分搜索法<br>黄金分割搜索法<br>最小二乘法<br>遗传粒子群模拟退火算法</p><p>如何判别是否是优化问题凡事关于最小最大相关或者尽量相关的词汇，一般都是优化问题。收益最大，风险最小，尽量对称，尽量小，尽量大等等另外还有一种最后趋于稳定的问题，一般也是优化问题，例如2019A高压油管压力控制，油压最后稳定在100，优化目标是最后一秒的油压曲线与100的偏差最小</p><p>优化问题的组成部分注意优化问题特别是微分方程问题，一般由5个主要部分构成，它们分别是：优化变量（自变量）优化目标（单目标、多目标）（因变量）控制方程（微分方程模型主体及其他附属方程）边界条件初始条件在论文写作时，我们需要做的是把优化目标、控制方程、约束条件等用数学语言表达出来。需要注意：应该明确写出上面5个部分，如果某些部分没有，应该至少写出优化目标和控制方程</p><p>在写作时，明确写出以xx为优化变量、以xx为控制方程（约束条件）、以xx为优化目标的单目标（多目标）优化模型<img src="https://pic1.zhimg.com/50/v2-c2983963d649e2524dd06be3d4101711_720w.jpg?source=1940ef5c" class="lazyload placeholder" data-srcset="https://pic1.zhimg.com/50/v2-c2983963d649e2524dd06be3d4101711_720w.jpg?source=1940ef5c" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp" data-caption="" data-size="normal" data-rawwidth="1060" data-rawheight="243" data-default-watermark-src="https://pic2.zhimg.com/50/v2-96b125606ec468bc7912a80a574b404e_720w.jpg?source=1940ef5c" class="origin_image zh-lightbox-thumb lazyload placeholder" width="1060" data-original="https://pica.zhimg.com/v2-c2983963d649e2524dd06be3d4101711_r.jpg?source=1940ef5c"/></p><p>下面开始写控制方程以及约束，注意有下面两点。</p><p>第一点、使用大括号把控制方程和约束条件、边界条件写一起。</p><p>第二点、后面需要有变量符号的解释（其中，a为：，b为：…）</p><p>为什么要这么写？原因是这样评委一看就知道所有的东西</p><p>模型的求解部分上面建立完了模型，我们就开始写模型的求解，这部分就是算法了对于一个优化问题，如何选择算法？当然算法不是乱选的，你得体现你的思考与创新比如对于一个参数搜索问题，变步长搜索就比单步长搜索要好，为什么？因为变步长搜索在趋于最优解的时候缩小步长，能够减少运算次数，这就是它的优点。再进一步，二分搜索法比变步长搜索法更好。你用二分，别人用穷举搜索，你的算法就比别人的更优秀。注意，不是越复杂的算法就越好，而是使用简单的算法在最短的时间内解决问题才是最优的算法。</p><p>优化问题：</p><p>线性规划，半定规划、几何规划、非线性规划，整数规划．多目标规划（分层序列法），动态规划：<br>存赔论、代理模型、响应面分析法、列生成算法</p><p>预测模型：</p><p>微分方程，小波分析，回归分析，交色预测，马尔可夫预测，时间序列分析(AR MA ARVA ARIMA, LSTN<br>神经网絡)，混沌模型时间序列预测．支持向量机，神经网络预测（与机器学习部分很多重合）</p><p>动态模型：</p><p>微分方程模型 (ODE、SDE、 DDE、DAE、PDE)．差分方程模型，元胞自动机，排队论，蒙特卡罗随机<br>模拟</p><p>图论模型：</p><p>最短路径，最小生成树，最小费用最大流，指派问題，旅行商问題，VRPIW路径规划，网络流，路径<br>规划算法 (Di jkstra, F1oyd， A<em>， D</em>，RRT<em>， LPA</em>, Dxlite )</p><p>评价模型：</p><p>层次分析法，熵权法，最优贼权法，主成分分析法，主成分回归评价，因子分析，模糊綜合 评价，<br>TOPSIS 法，数据包络分析，秩和比法，交色综合评价法<br>最小一乘主客观一 致賊权评价模型，BP 神经网络綜合评价法</p><p>统计分析模型：</p><p>分布检验，均值T检验，方差分析，协方差分析，相关分析，卡方检验，秩和检验，回归分析，<br>Logistic 回归，聚类分析，判别分析，关联分析 (Apriori 算法）</p><p>现代智能算法：</p><p>(求极值，多目标规划，TSP，车间调度等）模拟退火，遗传算法，粒子群算法，禁忌搜素、免疫算<br>法，鱼群算法，神经网络，蚁群算法</p><p>其他算法：</p><p>二分法、直接搜素法、变范围搜索、单因素优选法0.618 法（黄金分割法）、拉<br>格朗日乘子法、信赖域算法，欧拉法\改进欧拉法，牛顿-拉弗森算法（牛顿迭代法)、抄<br>牛顿法、梯度下降法</p><p>机器学习</p><p>分类问题：</p><p>RNN，逻得回归，决策树，随机森林，ADABOOST、GBDT\XGBoostNLightGBM， 支持向量机，<br>朴素贝叶斯，神经网络</p><p>回归问题：线性回归，LASSO 回归，岭回归，决策树回归，集成学习中回归方法，支持向量回归，<br>高斯混合模型，神经网络</p><p>聚类问题：</p><p>K均值聚类，DBSCAL聚类，以算法</p><h2 class="bamboo-h " id="0-1背包算法">0-1背包算法</h2><br/><p><a href="https://zhuanlan.zhihu.com/p/30959069">0-1背包算法</a></p><p>给定一组多个（n）物品，每种物品都有自己的重量（wi）和价值（vi），在限定的总重量&#x2F;总容量（C）内，选择其中若干个（也即每种物品可以选0个或1个），设计选择方案使得物品的总价值最高。<br>给定正整数</p><h2 class="bamboo-h " id="评价模型-主成分分析">评价模型-主成分分析</h2><br/><p>分析主要原因</p><p>（PCA）PCA是一种降维方法，常用于对高维数据集作降维，它会将一个大的变量集合转化为更少的变量集合，同时保留大的变量集合中的大部分信息。“主成分分析在机器学习内被归类成为降维（Dimension reduction）内特征擷取（Feature extraction）的一种方法，降维就是希望数据的维度数减少，但整体的效能不会差异太多甚至会更好”→其实说法还是很文。</p><ol><li><p>计算标准差<br> 具体一点说就是因为我们后续的结果对数据的方差十分敏感，取值范围较大的维度会比相对较小的维度造成更大的影响（例如一个在1-100之间变化的维度对结果的影响，比一个0-1的更大），会导致一个偏差较大的结果，所以，将数据转化到相似的范围可以预防这个问题。</p></li><li><p>计算协方差矩阵<br> 协方差矩阵是一个P * P的对称矩阵（P是维度的数量）它涵盖了数据集中所有元组对初始值的协方差，例如一个拥有三个变量x,y,z和三个维度的数据集，协方差矩阵将是一个3 * 3的矩阵</p></li><li><p>计算出主成分<br> 主成分是一个新的变量，他是初始变量的线性组合。新的变量之间是不相关的，第一个主成分中包含了初始变量的大部分信息，是初始变量的压缩和提取。</p><ul><li>例如：虽然在一个 10 维的数据集中我们算出了 10 个主成分，但大部分的信息都会被压缩在第一主成分中，剩下的大部分信息又被压缩到第二主成分中</li></ul></li><li><p>怎么计算主成分<br> 有多少个变量就有多少个主成分，对于第一主成分来说沿着对应的坐标轴变化意味着有最大的方差。</p> <p> 你能直接猜测出主成分应该是沿着哪一个方向吗，大致是图中紫色线的方向。（因为它穿过了原点，而且数据映射在这条线上后，有着最大方差（各点与原点距离的均方））</p></li><li><p>PCA的步骤<br> 1）将原始数据按列组成n行m列矩阵X<br> 2）将X的每一行（代表一个属性字段）进行零均值化，即减去这一行的均值<br> 3）求出协方差矩阵<br> 4）求出协方差矩阵的特征值及对应的特征向量<br> 5）将特征向量按对应特征值大小从上到下按行排列成矩阵，取前k行组成矩阵P<br> 6）Y&#x3D;PX即为降维到k维后的数据</p></li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt                 <span class="token comment">#加载matplotlib用于数据的可视化</span><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>decomposition <span class="token keyword">import</span> PCA           <span class="token comment">#加载PCA算法包</span><span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>datasets <span class="token keyword">import</span> load_iris <span class="token comment">#通过鸢尾花数据集，进行主成分分析</span>data<span class="token operator">=</span>load_iris<span class="token punctuation">(</span><span class="token punctuation">)</span>y<span class="token operator">=</span>data<span class="token punctuation">.</span>target<span class="token comment">#这里data为训练所需的数据集，target为数据集对应的分类标签，属于监督学习</span>x<span class="token operator">=</span>data<span class="token punctuation">.</span>datapca<span class="token operator">=</span>PCA<span class="token punctuation">(</span>n_components<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span>     <span class="token comment">#加载PCA算法，设置降维后主成分数目为2</span>reduced_x<span class="token operator">=</span>pca<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token comment">#对样本进行降维</span>red_x<span class="token punctuation">,</span>red_y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span>blue_x<span class="token punctuation">,</span>blue_y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span>green_x<span class="token punctuation">,</span>green_y<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>reduced_x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> y<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>        red_x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>reduced_x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        red_y<span class="token punctuation">.</span>append<span class="token punctuation">(</span>reduced_x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> y<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>        blue_x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>reduced_x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        blue_y<span class="token punctuation">.</span>append<span class="token punctuation">(</span>reduced_x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        green_x<span class="token punctuation">.</span>append<span class="token punctuation">(</span>reduced_x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        green_y<span class="token punctuation">.</span>append<span class="token punctuation">(</span>reduced_x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#可视化</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>red_x<span class="token punctuation">,</span>red_y<span class="token punctuation">,</span>c<span class="token operator">=</span><span class="token string">'r'</span><span class="token punctuation">,</span>marker<span class="token operator">=</span><span class="token string">'x'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>blue_x<span class="token punctuation">,</span>blue_y<span class="token punctuation">,</span>c<span class="token operator">=</span><span class="token string">'b'</span><span class="token punctuation">,</span>marker<span class="token operator">=</span><span class="token string">'D'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>scatter<span class="token punctuation">(</span>green_x<span class="token punctuation">,</span>green_y<span class="token punctuation">,</span>c<span class="token operator">=</span><span class="token string">'g'</span><span class="token punctuation">,</span>marker<span class="token operator">=</span><span class="token string">'.'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># n_components指定降维后的维数</span>pca <span class="token operator">=</span> PCA<span class="token punctuation">(</span>n_components<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>pca<span class="token punctuation">)</span><span class="token comment"># 应用于训练集数据进行PCA降维</span>pca<span class="token punctuation">.</span>fit<span class="token punctuation">(</span>X<span class="token punctuation">)</span><span class="token comment"># 用X来训练PCA模型，同时返回降维后的数据</span>newX <span class="token operator">=</span> pca<span class="token punctuation">.</span>fit_transform<span class="token punctuation">(</span>X<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>newX<span class="token punctuation">)</span><span class="token comment"># 将降维后的数据转换成原始数据，</span>pca_new <span class="token operator">=</span> pca<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>X<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>pca_new<span class="token punctuation">.</span>shape<span class="token punctuation">)</span><span class="token comment"># 输出具有最大方差的成分</span><span class="token keyword">print</span><span class="token punctuation">(</span>pca<span class="token punctuation">.</span>components_<span class="token punctuation">)</span><span class="token comment"># 输出所保留的n个成分各自的方差百分比</span><span class="token keyword">print</span><span class="token punctuation">(</span>pca<span class="token punctuation">.</span>explained_variance_ratio_<span class="token punctuation">)</span><span class="token comment"># 输出所保留的n个成分各自的方差</span><span class="token keyword">print</span><span class="token punctuation">(</span>pca<span class="token punctuation">.</span>explained_variance_<span class="token punctuation">)</span><span class="token comment"># 输出未处理的特征维数</span><span class="token keyword">print</span><span class="token punctuation">(</span>pca<span class="token punctuation">.</span>n_features_<span class="token punctuation">)</span><span class="token comment"># 输出训练集的样本数量</span><span class="token keyword">print</span><span class="token punctuation">(</span>pca<span class="token punctuation">.</span>n_samples_<span class="token punctuation">)</span><span class="token comment"># 输出协方差矩阵</span><span class="token keyword">print</span><span class="token punctuation">(</span>pca<span class="token punctuation">.</span>noise_variance_<span class="token punctuation">)</span><span class="token comment"># 每个特征的奇异值</span><span class="token keyword">print</span><span class="token punctuation">(</span>pca<span class="token punctuation">.</span>ingular_values_<span class="token punctuation">)</span><span class="token comment"># 用生成模型计算数据精度矩阵</span><span class="token keyword">print</span><span class="token punctuation">(</span>pca<span class="token punctuation">.</span>get_precision<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>除了这些输入参数外，有两个PCA类的成员值得关注。第一个是explained_variance_，它代表降维后的各主成分的方差值。方差值越大，则说明越是重要的主成分。第二个是explained_variance_ratio_，它代表降维后的各主成分的方差值占总方差值的比例，这个比例越大，则越是重要的主成分。<br>7. 提取几个主成分最合适<br>    从累计贡献率曲线可以看出提取两个主成分的累计贡献率达到0.9777，提取四个主成分的累计贡献率为0.9948，增加两个主成分累计贡献率只增加0.0171，但同时却增加了模型复杂度，加大计算量，增加运行时间，所以提取二个主成分最为合适。前4个标准化指标的累计贡献率已达到95.35%，估只需考虑前四个主要指标即可</p><ol start="8"><li>参考文章<br><a href="https://www.freesion.com/article/520762211/">https://www.freesion.com/article/520762211/</a><br><a href="https://zhuanlan.zhihu.com/p/170594013">https://zhuanlan.zhihu.com/p/170594013</a><br><a href="https://www.aisoutu.com/a/1510739">https://www.aisoutu.com/a/1510739</a><br><a href="https://www.cnblogs.com/hadoop2015/p/7419087.html">https://www.cnblogs.com/hadoop2015/p/7419087.html</a><br>spss主成分分析<a href="https://zhuanlan.zhihu.com/p/376799094">https://zhuanlan.zhihu.com/p/376799094</a><br>风控模型—WOE与IV指标的深入理解应用（数据权重处理-热力图）<a href="https://zhuanlan.zhihu.com/p/80134853">https://zhuanlan.zhihu.com/p/80134853</a><br>数据预处理 <a href="https://zhuanlan.zhihu.com/p/415705923">https://zhuanlan.zhihu.com/p/415705923</a><br><a href="https://www.heywhale.com/mw/project/5d259740688d36002c57b454">https://www.heywhale.com/mw/project/5d259740688d36002c57b454</a><!-- tab 优点 --></li></ol><p>在建立模型的过程中，分析问题较为全面，综合考虑影响粮食种植面积的直接因素和间接因素，将农业劳动人口、进口量、出口量、农民教育程度、城乡收入差距、家庭负担（消费收入）、农资指数、农机总动力、上年粮食最低收购价、工业生产总值和城市区域面积均纳入影响粮食种植面积的指标体系；运用了多元线性回归模型提高了影响粮食种植面积的数学模型合理性的可信度。<br>在运用多元线性回归模型之前首先用主成分分析法选出较少的新因素代替原来的较多影响因素，简化了后面多元线性回归分析的数据量，并且提高了准确性。</p><!-- endtab --><!-- tab 缺点 --><p>模型中需要考虑的影响主要成分的指标体系较多，只考虑了一部分指标体系，使模型在实际使用中缺乏一定的可信度。<br>选用指标也不全面，使得评价模型结果未能真实反映政策执行效果，结果偏离实际情况较大。</p><!-- endtab --><h2 class="bamboo-h " id="评价模型-机器学习（回归问题）-多元线性回归">评价模型-机器学习（回归问题）-多元线性回归</h2><br/><p><a href="https://blog.csdn.net/qq_43923588/article/details/107672879">https://blog.csdn.net/qq_43923588/article/details/107672879</a></p><ol><li>一元线性回归是一个主要影响因素作为自变量来解释因变量的变化，但在现实问题中，因变量的变化往往受到多个重要因素的影响，这时就需要两个或两个以上的影响因素作为自变量来解释因变量的变化，这便是多元回归，而当多个自变量与因变量之间是线性关系时，所进行的回归分析就是多元线性回归。多元线性回归的一般形式为：</li></ol><p>同一元线性回归一样，我们要在误差平方和最小的情况下，使用最小二乘法求解参数，下面我们通过一个预测房屋租赁价格的实例来透彻理解多元线性回归模型。<br>2. 数据展示<br>在此例中房屋租赁价格为因变量，房屋面积和房屋数量为自变量，由4.1可知，此处我们要建立一个二元线性回归模型，首先构建训练数据集，并对其进行可视化。</p><p>见代码<br>3. 参考资料<br><a href="https://www.heywhale.com/mw/project/5f44c8c2835fe7002d990503">https://www.heywhale.com/mw/project/5f44c8c2835fe7002d990503</a></p><h2 class="bamboo-h " id="随机森林-可以降维度，预测数值">随机森林-可以降维度，预测数值</h2><br/><p><a href="https://blog.csdn.net/qq_43923588/article/details/107672879">https://blog.csdn.net/qq_43923588/article/details/107672879</a></p><p>装袋法中的装袋二字是精髓，顾名思义即将多个模型装入同一个袋子后，让这个袋子作为一个新的模型来实现预测需求，仅此而已。换句话说，即把多个模型组合起来形成一个新的大模型，这个大模型最终给出的预测结果是由这多个小模型综合决定的，决定方式为少数服从多数。</p><ol><li>同一元线性回归一样，我们要在误差平方和最小的情况下，使用最小二乘法求解参数，下面我们通过一个预测房屋租赁价格的实例来透彻理解多元线性回归模型。</li></ol><p>假设有10万条原始数据，用这些数据来做十棵决策树（当然也可以是其他模型），最后这10棵树将被装进了同一个袋子中。这时候取其中一条数据放入这个袋子，便会得出10个预测值(每棵树各一个)，假如其中三棵树给出的预测值为0，剩余的七棵给出的为1，那我们便可知道这个袋子对这个数据的预测结果为 0 的概率是 3&#x2F;10。</p><ul><li><p>问：袋子中的每个模型使用的样本量范围应为多少合适？</p></li><li><p>答：如果是上面的例子，袋子里面有十棵树，源数据总量为 10万 条，则每棵树取用的样本量的最小值为最少是1w个(10w&#x2F;10棵 &#x3D; 1w&#x2F;棵)，因为至少要保证不能浪费样本，但每棵树最多可取用多少样本呢？其实在样本量已知，同一袋子中模型个数为n的情况下，样本的选择比例为1&#x2F;n ~ 0.8最好。每个小模型取用 100% 的样本是绝对没有意义的，那就跟没抽是一样的，这样也就没有体现出装袋，只有每个模型用到的数据都有一定的不同，组合起来后每个的投票（预测结果）也才有意义。</p></li><li><p>问：袋中模型们之间的相关性会影响最后的决策结果吗？</p></li><li><p>答：装袋法思路最重要的一点：袋子中每个模型之间不能相关，越不相关越好，这里的不相关主要体现在用于训练每个模型的样本不一样。其次，每个模型的精度越高越好，这样它的投票才更有价值。</p></li><li><p>PS：训练模型的样本不一样这一点可以理解为总统选举，抽 10 波选民来投票，这 10 波选民的差异性越大越好，这样一来，只有在选民千差万别的情况下你依然脱颖而出，才足以说明你的实力，如果这10波选民中每一波之间的差异性都很小，比如都是本来就偏袒于总统候选人，那投票结果的说服力就会大减。</p></li><li><p>问：上面所说的模型精度高是不是哪怕模型很复杂也可以，如果每个模型的精度高但都过度拟合怎么办？</p></li><li><p>答：在装袋法中，模型是越精确越好，哪怕是过度拟合的也没有关系。因为一个模型要想在训练集上做到越精确越好，而精确程度与模型的复杂度大多是成正比的，所以出现过拟合的情况也是正常且情有可原的。复杂和过度拟合只是对袋子中每个模型而言，因为最后都会被加权，所以整个袋子（整体）并不会出现过度拟合的情况。</p></li></ul><p>最后总结一下：随机森林是集成学习中非常经典的一种方法，基础原理简单，实现优雅，可即学即用。而且随机森林应用十分广泛，并不只是局限于常见的金融领域，只要数据不平衡或者随机缺失严重，都值得尝试。</p><ol start="2"><li>参考：<br><a href="https://www.heywhale.com/mw/notebook/6337f71bdfae02496728f555">https://www.heywhale.com/mw/notebook/6337f71bdfae02496728f555</a></li></ol><h2 class="bamboo-h " id="XGBoost">XGBoost</h2><br/><p>XGBoost的全称是 eXtremeGradient Boosting，2014年2月诞生的专注于梯度提升算法的机器学习函数库，作者为华盛顿大学研究机器学习的大牛——陈天奇。他在研究中深深的体会到现有库的计算速度和精度问题，为此而着手搭建完成 xgboost项目。xgboost问世后，因其优良的学习效果以及高效的训练速度而获得广泛的关注，并在各种算法大赛上大放光彩。</p><p>中文官方文档：<a href="https://xgboost.apachecn.org/#/">https://xgboost.apachecn.org/#/</a><br>原理：<a href="https://www.heywhale.com/mw/project/5dd6316b788b1c002c9822e9">https://www.heywhale.com/mw/project/5dd6316b788b1c002c9822e9</a></p><h2 class="bamboo-h " id="时间序列预测模型">时间序列预测模型</h2><br/><p>ARIMA时间序列预测模型</p><p>中文官方文档：<a href="https://xgboost.apachecn.org/#/">https://xgboost.apachecn.org/#/</a><br>原理：<a href="https://www.heywhale.com/mw/project/5dd6316b788b1c002c9822e9">https://www.heywhale.com/mw/project/5dd6316b788b1c002c9822e9</a></p><p>主客观集成赋权、OPTICS 聚类、XGBoost 集成学习、 Lorenz 曲线、帕累托分析法、lightgbm-Multi logistic、ARMA 模型</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 class=&quot;bamboo-h &quot; id=&quot;算法-问题求解&quot;&gt;算法-问题求解&lt;/h1&gt;&lt;br/&gt;

&lt;p&gt;什么是参数优化？举个例子，对于模型y&amp;#x3D;f(x)&amp;#x3D;ax+b，附件中会给定x和y的值。当然，模型y&amp;#x3D;ax+b不会告诉你，这是自己建立的模型。</summary>
      
    
    
    
    <category term="数据建模" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="遗传算法" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="数据建模" scheme="http://innocabroad.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="python" scheme="http://innocabroad.github.io/tags/python/"/>
    
    <category term="遗传算法" scheme="http://innocabroad.github.io/tags/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>JupyterNotebook介绍、安装及使用教程</title>
    <link href="http://innocabroad.github.io/2022/09/21/jupyternotebook-jie-shao-an-zhuang-ji-shi-yong-jiao-cheng/"/>
    <id>http://innocabroad.github.io/2022/09/21/jupyternotebook-jie-shao-an-zhuang-ji-shi-yong-jiao-cheng/</id>
    <published>2022-09-21T03:51:27.000Z</published>
    <updated>2022-09-21T03:53:50.318Z</updated>
    
    <content type="html"><![CDATA[<p>一、什么是Jupyter Notebook？</p><ol><li>简介</li></ol><p>Jupyter Notebook是基于网页的用于交互计算的应用程序。其可被应用于全过程计算：开发、文档编写、运行代码和展示结果。——Jupyter Notebook官方介绍<br>简而言之，Jupyter Notebook是以网页的形式打开，可以在网页页面中直接编写代码和运行代码，代码的运行结果也会直接在代码块下显示的程序。如在编程过程中需要编写说明文档，可在同一个页面中直接编写，便于作及时的说明和解释。</p><ol start="2"><li>组成部分</li></ol><p>① 网页应用</p><p>网页应用即基于网页形式的、结合了编写说明文档、数学公式、交互计算和其他富媒体形式的工具。简言之，网页应用是可以实现各种功能的工具。</p><p>② 文档</p><p>即Jupyter Notebook中所有交互计算、编写说明文档、数学公式、图片以及其他富媒体形式的输入和输出，都是以文档的形式体现的。</p><p>这些文档是保存为后缀名为.ipynb的JSON格式文件，不仅便于版本控制，也方便与他人共享。</p><p>此外，文档还可以导出为：HTML、LaTeX、PDF等格式。</p><ol start="3"><li>Jupyter Notebook的主要特点</li></ol><p>① 编程时具有语法高亮、缩进、tab补全的功能。</p><p>② 可直接通过浏览器运行代码，同时在代码块下方展示运行结果。</p><p>③ 以富媒体格式展示计算结果。富媒体格式包括：HTML，LaTeX，PNG，SVG等。</p><p>④ 对代码编写说明文档或语句时，支持Markdown语法。</p><p>⑤ 支持使用LaTeX编写数学性说明。</p><p>二、安装Jupyter Notebook</p><ol start="0"><li>先试用，再决定</li></ol><p>如果看了以上对Jupyter Notebook的介绍你还是拿不定主意究竟是否适合你，那么不要担心，你可以先免安装试用体验一下，戳这里，然后再做决定。</p><p>值得注意的是，官方提供的同时试用是有限的，如果你点击链接之后进入的页面如下图所示，那么不要着急，过会儿再试试看吧。</p><p>试用满线<br>如果你足够幸运，那么你将看到如下界面，就可以开始体验啦。</p><p>主界面</p><p>编辑页面</p><ol><li>安装</li></ol><p>① 安装前提</p><p>安装Jupyter Notebook的前提是需要安装了Python（3.3版本及以上，或2.7版本）。</p><p>② 使用Anaconda安装</p><p>如果你是小白，那么建议你通过安装Anaconda来解决Jupyter Notebook的安装问题，因为Anaconda已经自动为你安装了Jupter Notebook及其他工具，还有python中超过180个科学包及其依赖项。</p><p>你可以通过进入Anaconda的官方下载页面自行选择下载；如果你对阅读英文文档感到头痛，或者对安装步骤一无所知，甚至也想快速了解一下什么是Anaconda，那么可以前往我的另一篇文章：</p><p>豆豆：Anaconda介绍、安装及使用教程<br>2423 赞同 · 161 评论文章</p><p>你想要的，都在里面！</p><p>常规来说，安装了Anaconda发行版时已经自动为你安装了Jupyter Notebook的，但如果没有自动安装，那么就在终端（Linux或macOS的“终端”，Windows的“Anaconda Prompt”，以下均简称“终端”）中输入以下命令安装：</p><p>conda install jupyter notebook<br>③ 使用pip命令安装</p><p>如果你是有经验的Python玩家，想要尝试用pip命令来安装Jupyter<br>Notebook，那么请看以下步骤吧！接下来的命令都输入在终端当中的噢！</p><ol><li>把pip升级到最新版本</li></ol><p>Python 3.x<br>pip3 install –upgrade pip<br>Python 2.x<br>pip install –upgrade pip<br>注意：老版本的pip在安装Jupyter Notebook过程中或面临依赖项无法同步安装的问题。因此强烈建议先把pip升级到最新版本。<br>2. 安装Jupyter Notebook</p><p>Python 3.x<br>pip3 install jupyter<br>Python 2.x<br>pip install jupyter<br>三、运行Jupyter Notebook</p><ol start="0"><li>帮助</li></ol><p>如果你有任何jupyter notebook命令的疑问，可以考虑查看官方帮助文档，命令如下：</p><p>jupyter notebook –help<br>或</p><p>jupyter notebook -h</p><ol><li>启动</li></ol><p>① 默认端口启动</p><p>在终端中输入以下命令：</p><p>jupyter notebook<br>执行命令之后，在终端中将会显示一系列notebook的服务器信息，同时浏览器将会自动启动Jupyter Notebook。</p><p>启动过程中终端显示内容如下：</p><p>$ jupyter notebook<br>[I 08:58:24.417 NotebookApp] Serving notebooks from local directory: &#x2F;Users&#x2F;catherine<br>[I 08:58:24.417 NotebookApp] 0 active kernels<br>[I 08:58:24.417 NotebookApp] The Jupyter Notebook is running at: <a href="http://localhost:8888/">http://localhost:8888/</a><br>[I 08:58:24.417 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).<br>注意：之后在Jupyter Notebook的所有操作，都请保持终端不要关闭，因为一旦关闭终端，就会断开与本地服务器的链接，你将无法在Jupyter Notebook中进行其他操作啦。<br>浏览器地址栏中默认地将会显示：<a href="http://localhost:8888。其中，“localhost”指的是本机，“8888”则是端口号。">http://localhost:8888。其中，“localhost”指的是本机，“8888”则是端口号。</a></p><p>URL<br>如果你同时启动了多个Jupyter Notebook，由于默认端口“8888”被占用，因此地址栏中的数字将从“8888”起，每多启动一个Jupyter Notebook数字就加1，如“8889”、“8890”……</p><p>② 指定端口启动</p><p>如果你想自定义端口号来启动Jupyter Notebook，可以在终端中输入以下命令：</p><p>jupyter notebook –port <port_number><br>其中，“<port_number>”是自定义端口号，直接以数字的形式写在命令当中，数字两边不加尖括号“&lt;&gt;”。如：jupyter notebook –port 9999，即在端口号为“9999”的服务器启动Jupyter Notebook。</p><p>③ 启动服务器但不打开浏览器</p><p>如果你只是想启动Jupyter Notebook的服务器但不打算立刻进入到主页面，那么就无需立刻启动浏览器。在终端中输入：</p><p>jupyter notebook –no-browser<br>此时，将会在终端显示启动的服务器信息，并在服务器启动之后，显示出打开浏览器页面的链接。当你需要启动浏览器页面时，只需要复制链接，并粘贴在浏览器的地址栏中，轻按回车变转到了你的Jupyter Notebook页面。</p><p>例图中由于在完成上面内容时我同时启动了多个Jupyter Notebook，因此显示我的“8888”端口号被占用，最终分配给我的是“8889”。</p><ol start="2"><li>主页面</li></ol><p>① 主页面内容</p><p>当执行完启动命令之后，浏览器将会进入到Notebook的主页面，如下图所示。</p><p>默认主页面<br>如果你的主页面里边的文件夹跟我的不同，或者你在疑惑为什么首次启动里边就已经有这么多文件夹，不要担心，这里边的文件夹全都是你的家目录里的目录文件。你可以在终端中执行以下2步来查看：</p><p>① cd 或 cd - 或 cd ~ 或cd &#x2F;Users&#x2F;<user_name></p><p>这个命令将会进入你的家目录。<br>“<user_name>” 是用户名。用户名两边不加尖括号“&lt;&gt;”。<br>② ls</p><p>这个命令将会展示你家目录下的文件。<br>② 设置Jupyter Notebook文件存放位置</p><p>如果你不想把今后在Jupyter Notebook中编写的所有文档都直接保存在家目录下，那你需要修改Jupyter Notebook的文件存放路径。</p><p>⑴ 创建文件夹&#x2F;目录</p><p>Windows用户在想要存放Jupyter Notebook文件的磁盘中新建文件夹并为该文件夹命名；双击进入该文件夹，然后复制地址栏中的路径。<br>Linux&#x2F;macOS用户在想要存放Jupyter Notebook文件的位置创建目录并为目录命名，命令为：mkdir <directory_name>；进入目录，命令为：cd <directory_name>；查看目录的路径，命令为：pwd；复制该路径。<br>注意：“<directory_name>”是自定义的目录名。目录名两边不加尖括号“&lt;&gt;”。<br>⑵ 配置文件路径</p><p>一个便捷获取配置文件所在路径的命令：<br>jupyter notebook –generate-config<br>注意： 这条命令虽然可以用于查看配置文件所在的路径，但主要用途是是否将这个路径下的配置文件替换为默认配置文件。 如果你是第一次查询，那么或许不会出现下图的提示；若文件已经存在或被修改，使用这个命令之后会出现询问“Overwrite &#x2F;Users&#x2F;raxxie&#x2F;.jupyter&#x2F;jupyter_notebook_config.py with default config? [y&#x2F;N]”，即“用默认配置文件覆盖此路径下的文件吗？”，如果按“y”，则完成覆盖，那么之前所做的修改都将失效；如果只是为了查询路径，那么一定要输入“N”。</p><p>配置文件所在路径<br>常规的情况下，Windows和Linux&#x2F;macOS的配置文件所在路径和配置文件名如下所述：</p><p>Windows系统的配置文件路径：C:\Users&lt;user_name&gt;.jupyter<br>Linux&#x2F;macOS系统的配置文件路径：&#x2F;Users&#x2F;<user_name>&#x2F;.jupyter&#x2F; 或 ~&#x2F;.jupyter&#x2F;<br>配置文件名：jupyter_notebook_config.py<br>注意：</p><p>① “<user_name>”为你的用户名。用户名两边不加尖括号“&lt;&gt;”。</p><p>② Windows和Linux&#x2F;macOS系统的配置文件存放路径其实是相同的，只是系统不同，表现形式有所不同而已。</p><p>③ Windows和Linux&#x2F;macOS系统的配置文件也是相同的。文件名以“.py”结尾，是Python的可执行文件。</p><p>④ 如果你不是通过一步到位的方式前往配置文件所在位置，而是一层一层进入文件夹&#x2F;目录的，那么当你进入家目录后，用ls命令会发现找不到“.jupyter”文件夹&#x2F;目录。这是因为凡是以“.”开头的目录都是隐藏文件，你可以通过ls -a命令查看当前位置下所有的隐藏文件。</p><p>⑶ 修改配置文件</p><p>Windows系统的用户可以使用文档编辑工具或IDE打开“jupyter_notebook_config.py”文件并进行编辑。常用的文档编辑工具和IDE有记事本、Notepad++、vim、Sublime<br>Text、PyCharm等。其中，vim是没有图形界面的，是一款学习曲线较为陡峭的编辑器，其他工具在此不做使用说明，因为上手相对简单。通过vim修改配置文件的方法请继续往下阅读。<br>Linux&#x2F;macOS系统的用户建议直接通过终端调用vim来对配置文件进行修改。具体操作步骤如下：<br>⒜ 打开配置文件</p><p>打开终端，输入命令：</p><p>vim ~&#x2F;.jupyter&#x2F;jupyter_notebook_config.py</p><p>命令详解<br>执行上述命令后便进入到配置文件当中了。</p><p>⒝ 查找关键词</p><p>进入配置文件后查找关键词“c.NotebookApp.notebook_dir”。查找方法如下：</p><p>进入配置文件后不要按其他键，用英文半角直接输入&#x2F;c.NotebookApp.notebook_dir，这时搜索的关键词已在文档中高亮显示了，按回车，光标从底部切换到文档正文中被查找关键词的首字母。</p><p>⒞ 编辑配置文件</p><p>按小写i进入编辑模式，底部出现“–INSERT–”说明成功进入编辑模式。使用方向键把光标定位在第二个单引号上（光标定位在哪个字符，就在这个字符前开始输入），把“⑴ 创建文件夹&#x2F;目录”步骤中复制的路径粘贴在此处。</p><p>⒟ 取消注释</p><p>把该行行首的井号（#）删除。因为配置文件是Python的可执行文件，在Python中，井号（#）表示注释，即在编译过程中不会执行该行命令，所以为了使修改生效，需要删除井号（#）。</p><p>⒠ 保存配置文件</p><p>先按esc键，从编辑模式退出，回到命令模式。</p><p>再用英文半角直接输入:wq，回车即成功保存且退出了配置文件。</p><p>注意：</p><p>冒号（:） 一定要有，且也是英文半角。<br>w：保存。<br>q：退出。<br>⒡ 验证</p><p>在终端中输入命令jupyter notebook打开Jupyter Notebook，此时你会看到一个清爽的界面，恭喜！</p><p>配置后主页面<br>⒢ 注意</p><p>以上所有命令均以英文半角格式输入，若有报错，请严格检查这两个条件，英文且半角。<br>这里仅介绍了vim编辑器修改配置文件的方法，没有对vim编辑器的详细使用进行讲解，所以无需了解vim编辑器的具体使用方法，只需要按照上述步骤一定可以顺利完成修改！<br>推荐有时间和经历时学习一下vim编辑器的使用。这款强大的编辑器将会成为你未来工作中的利器。<br>四、Jupyter Notebook的基本使用</p><ol><li>Files页面</li></ol><p>Files页面<br>此时你的界面当中应该还没有“Conda”和“Nbextensions”类目。不要着急，这两个类目将分别在“五、拓展功能”中的“1.关联Jupyter Notebook和conda的环境和包——‘nb_conda’”和“2.Markdown生成目录”中安装。</p><p>Files页面是用于管理和创建文件相关的类目。</p><p>对于现有的文件，可以通过勾选文件的方式，对选中文件进行复制、重命名、移动、下载、查看、编辑和删除的操作。</p><p>同时，也可以根据需要，在“New”下拉列表中选择想要创建文件的环境，进行创建“ipynb”格式的笔记本、“txt”格式的文档、终端或文件夹。如果你创建的环境没有在下拉列表中显示，那么你需要依次前往“五、拓展功能”中的“1.关联Jupyter Notebook和conda的环境和包——‘nb_conda’”和“六、增加内核——‘ipykernel’”中解决该问题。</p><p>① 笔记本的基本操作</p><p>笔记本页面注解图<br>上图展示的是笔记本的基本结构和功能。根据图中的注解已经可以解决绝大多数的使用问题了！</p><p>工具栏的使用如图中的注解一样直观，在此不过多解释。需要特别说明的是“单元格的状态”，有Code，Markdown，Heading，Raw NBconvert。其中，最常用的是前两个，分别是代码状态，Markdown编写状态。Jupyter Notebook已经取消了Heading状态，即标题单元格。取而代之的是Markdown的一级至六级标题。而Raw NBconvert目前极少用到，此处也不做过多讲解。</p><p>菜单栏涵盖了笔记本的所有功能，即便是工具栏的功能，也都可以在菜单栏的类目里找到。然而，并不是所有功能都是常用的，比如Widgets，Navigate。Kernel类目的使用，主要是对内核的操作，比如中断、重启、连接、关闭、切换内核等，由于我们在创建笔记本时已经选择了内核，因此切换内核的操作便于我们在使用笔记本时切换到我们想要的内核环境中去。由于其他的功能相对比较常规，根据图中的注解来尝试使用笔记本的功能已经非常便捷，因此不再做详细讲解。</p><p>② 笔记本重命名的两种方式</p><p>⑴ 笔记本内部重命名</p><p>在使用笔记本时，可以直接在其内部进行重命名。在左上方“Jupyter”的图标旁有程序默认的标题“Untitled”，点击“Untitled”然后在弹出的对话框中输入自拟的标题，点击“Rename”即完成了重命名。</p><p>⑵ 笔记本外部重命名</p><p>若在使用笔记本时忘记了重命名，且已经保存并退出至“Files”界面，则在“Files”界面勾选需要重命名的文件，点击“Rename”然后直接输入自拟的标题即可。</p><p>⑶ 演示</p><p>动图封面<br>笔记本重命名演示图</p><ol start="2"><li>Running页面</li></ol><p>Running页面主要展示的是当前正在运行当中的终端和“ipynb”格式的笔记本。若想要关闭已经打开的终端和“ipynb”格式的笔记本，仅仅关闭其页面是无法彻底退出程序的，需要在Running页面点击其对应的“Shutdown”。更多关闭方法可以查阅“八、关闭和退出”中的“1.关闭笔记本和终端”。</p><p>动图封面<br>Running页面功能演示图</p><ol start="3"><li>Clusters页面</li></ol><p>Clusters tab is now provided by IPython parallel. See ‘IPython parallel’ for<br>installation details.<br>Clusters类目现在已由IPython parallel对接，且由于现阶段使用频率较低，因此在此不做详细说明，想要了解更多可以访问IPython parallel的官方网站。</p><ol start="4"><li>Conda页面</li></ol><p>Conda页面主要是Jupyter Notebook与Conda关联之后对Conda环境和包进行直接操作和管理的页面工具。详细信息请直接查阅“五、拓展功能”中的“1.关联Jupyter Notebook和conda的环境和包——‘nb_conda’”。这是目前使用Jupyter Notebook的必备环节，因此请务必查阅。</p><ol start="5"><li>Nbextensions页面</li></ol><p>Nbextensions页面提供了多个Jupyter Notebook的插件，使其功能更加强大。该页面中主要使用的插件有nb_conda，nb_present，Table of Contents(2)。这些功能我们无需完全掌握，也无需安装所有的扩展功能，根据本文档提供的学习思路，我们只需要安装Talbe of Contents(2)即可，该功能可为Markdown文档提供目录导航，便于我们编写文档。该安装指导请查阅“五、拓展功能”中的“2.Markdown生成目录”。</p><p>Nbextensions页面<br>五、拓展功能</p><ol><li>关联Jupyter Notebook和conda的环境和包——“nb_conda”☆</li></ol><p>① 安装</p><p>conda install nb_conda<br>执行上述命令能够将你conda创建的环境与Jupyter Notebook相关联，便于你在Jupyter Notebook的使用中，在不同的环境下创建笔记本进行工作。</p><p>② 使用</p><p>可以在Conda类目下对conda环境和包进行一系列操作。</p><p>Conda页面注解图<br>可以在笔记本内的“Kernel”类目里的“Change<br>kernel”切换内核。</p><p>切换内核<br>③ 卸载</p><p>canda remove nb_conda<br>执行上述命令即可卸载nb_conda包。</p><ol start="2"><li>Markdown生成目录</li></ol><p>不同于有道云笔记的Markdown编译器，Jupyter Notebook无法为Markdown文档通过特定语法添加目录，因此需要通过安装扩展来实现目录的添加。<br>conda install -c conda-forge jupyter_contrib_nbextensions<br>执行上述命令后，启动Jupyter Notebook，你会发现导航栏多了“Nbextensions”的类目，点击“Nbextensions”，勾选“Table<br>of Contents ⑵”</p><p>Nbextensions页面<br>之后再在Jupyter Notebook中使用Markdown，点击下图的图标即可使用啦。</p><p>目录<br>3. Markdown在文中设置链接并定位</p><p>在使用Markdown编辑文档时，难免会遇到需要在文中设定链接，定位在文档中的其他位置便于查看。因为Markdown可以完美的兼容html语法，因此这种功能可以通过html语法当中“a标签”的索引用法来实现。</p><p>语法格式如下：</p><p><a href="#%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B4%A2%E5%BC%95%E8%AF%8D">添加链接的正文</a><br><a id=自定义索引词>跳转提示</a><br>注意：</p><p>语法格式当中所有的符号均是英文半角。<br>“自定义索引词”最好是英文，较长的词可以用下划线连接。<br>“a标签”出现在想要被跳转到的文章位置，html标签除了单标签外均要符合“有头（<a>）必有尾（</a>）”的原则。头尾之间的“跳转提示”是可有可无的。<br>“a标签”中的“id”值即是为正文中添加链接时设定的“自定义索引值”，这里通过“id”的值实现从正文的链接跳转至指定位置的功能。<br>例：</p><p>动图封面<br>有跳转提示语</p><p>动图封面<br>无跳转提示语</p><ol start="4"><li>加载指定网页源代码</li></ol><p>① 使用场景</p><p>想要在Jupyter Notebook中直接加载指定网站的源代码到笔记本中。</p><p>② 方法</p><p>执行以下命令:</p><p>%load URL<br>其中，URL为指定网站的地址。</p><p>③ 例</p><p>动图封面<br>加载网络代码</p><ol start="5"><li>加载本地Python文件</li></ol><p>① 使用场景</p><p>想在Jupyter Notebook中加载本地的Python文件并执行文件代码。</p><p>② 方法</p><p>执行以下命令：</p><p>%load Python文件的绝对路径<br>③ 注意</p><p>Python文件的后缀为“.py”。<br>“%load”后跟的是Python文件的绝对路径。<br>输入命令后，可以按CTRL 回车来执行命令。第一次执行，是将本地的Python文件内容加载到单元格内。此时，Jupyter Notebook会自动将“%load”命令注释掉（即在前边加井号“#”），以便在执行已加载的文件代码时不重复执行该命令；第二次执行，则是执行已加载文件的代码。<br>④ 例</p><p>动图封面<br>加载本地Python文件</p><ol start="6"><li>直接运行本地Python文件</li></ol><p>① 使用场景</p><p>不想在Jupyter Notebook的单元格中加载本地Python文件，想要直接运行。</p><p>② 方法</p><p>执行命令：</p><p>%run Python文件的绝对路径<br>或</p><p>!python3 Python文件的绝对路径<br>或</p><p>!python Python文件的绝对路径<br>③ 注意</p><p>Python文件的后缀为“.py”。<br>“%run”后跟的是Python文件的绝对路径。<br>“!python3”用于执行Python<br>3.x版本的代码。<br>“!python”用于执行Python<br>2.x版本的代码。<br>“!python3”和“!python”属于 !shell命令 语法的使用，即在Jupyter Notebook中执行shell命令的语法。<br>输入命令后，可以按 control return 来执行命令，执行过程中将不显示本地Python文件的内容，直接显示运行结果。<br>④ 例</p><p>动图封面<br>运行本地Python文件</p><ol start="7"><li>在Jupyter Notebook中获取当前位置</li></ol><p>① 使用场景</p><p>想要在Jupyter Notebook中获取当前所在位置的绝对路径。</p><p>② 方法</p><p>%pwd<br>或</p><p>!pwd<br>③ 注意</p><p>获取的位置是当前Jupyter Notebook中创建的笔记本所在位置，且该位置为绝对路径。<br>“!pwd”属于 !shell命令 语法的使用，即在Jupyter<br>Notebook中执行shell命令的语法。<br>④ 例</p><p>动图封面<br>获取当前位置的绝对路径</p><ol start="8"><li>在Jupyter Notebook使用shell命令</li></ol><p>① 方法一——在笔记本的单元格中</p><p>⑴ 语法</p><p>!shell命令</p><p>在Jupyter Notebook中的笔记本单元格中用英文感叹号“!”后接shell命令即可执行shell命令。<br>⑵ 例</p><p>动图封面<br>Shell命令的使用</p><p>② 方法二——在Jupyter Notebook中新建终端</p><p>⑴ 启动方法</p><p>在Jupyter Notebook主界面，即“File”界面中点击“New”；在“New”下拉框中点击“Terminal”即新建了终端。此时终端位置是在你的家目录，可以通过pwd命令查询当前所在位置的绝对路径。</p><p>⑵ 关闭方法</p><p>在Jupyter Notebook的“Running”界面中的“Terminals”类目中可以看到正在运行的终端，点击后边的“Shutdown”即可关闭终端。</p><p>⑶ 例</p><p>动图封面<br>笔记本中的终端使用</p><ol start="9"><li>隐藏笔记本输入单元格</li></ol><p>① 使用场景</p><p>在Jupyter Notebook的笔记本中无论是编写文档还是编程，都有输入（In []）和输出（Out []）。当我们编写的代码或文档使用的单元格较多时，有时我们只想关注输出的内容而暂时不看输入的内容，这时就需要隐藏输入单元格而只显示输出单元格。</p><p>② 方法一</p><p>⑴ 代码</p><p>from IPython.display import display<br>from IPython.display import HTML<br>import IPython.core.display as di # Example: di.display_html(‘<h3>%s:</h3>‘ % str, raw&#x3D;True)</p><h1 id="这行代码的作用是：当文档作为HTML格式输出时，将会默认隐藏输入单元格。"><a href="#这行代码的作用是：当文档作为HTML格式输出时，将会默认隐藏输入单元格。" class="headerlink" title="这行代码的作用是：当文档作为HTML格式输出时，将会默认隐藏输入单元格。"></a>这行代码的作用是：当文档作为HTML格式输出时，将会默认隐藏输入单元格。</h1><p>di.display_html(‘<script>jQuery(function() {if (jQuery("body.notebook_app").length == 0) { jQuery(".input_area").toggle(); jQuery(".prompt").toggle();}});</script>‘, raw&#x3D;True)</p><h1 id="这行代码将会添加“Toggle-code”按钮来切换“隐藏-x2F-显示”输入单元格。"><a href="#这行代码将会添加“Toggle-code”按钮来切换“隐藏-x2F-显示”输入单元格。" class="headerlink" title="这行代码将会添加“Toggle code”按钮来切换“隐藏&#x2F;显示”输入单元格。"></a>这行代码将会添加“Toggle code”按钮来切换“隐藏&#x2F;显示”输入单元格。</h1><p>di.display_html(‘’’<button onclick="jQuery('.input_area').toggle(); jQuery('.prompt').toggle();">Toggle code</button>‘’’, raw&#x3D;True)<br>在笔记本第一个单元格中输入以上代码，然后执行，即可在该文档中使用“隐藏&#x2F;显示”输入单元格功能。</p><p>缺陷：此方法不能很好的适用于Markdown单元格。<br>⑵ 例</p><p>动图封面<br>方法一：隐藏&#x2F;显示输入单元格</p><p>③ 方法二</p><p>⑴ 代码</p><p>from IPython.display import HTML</p><p>HTML(‘’’<script><br>code_show=true;<br>function code_toggle() {<br>if (code_show){<br>$('div.input').hide();<br>} else {<br>$('div.input').show();<br>}<br>code_show = !code_show<br>}<br>$( document ).ready(code_toggle);<br></script></p><form action="javascript:code_toggle()"><input type="submit" value="Click here to toggle on/off the raw code."></form>''')在笔记本第一个单元格中输入以上代码，然后执行，即可在该文档中使用“隐藏/显示”输入单元格功能。<p>缺陷：此方法不能很好的适用于Markdown单元格。<br>⑵ 例</p><p>动图封面<br>方法二：隐藏&#x2F;显示输入单元格</p><ol start="10"><li>魔术命令</li></ol><p>由于目前暂时用不到过多的魔术命令，因此暂时先参考官网的文档。</p><p>六、增加内核——“ipykernel” ☆</p><ol><li>使用场景</li></ol><p>场景一：同时用不同版本的Python进行工作，在Jupyter Notebook中无法切换，即“New”的下拉菜单中无法使用需要的环境。<br>场景二：创建了不同的虚拟环境（或许具有相同的Python版本但安装的包不同），在Jupyter Notebook中无法切换，即“New”的下拉菜单中无法使用需要的环境。<br>接下来将分别用“命令行模式”和“图形界面模式”来解决以上两个场景的问题。顾名思义，“命令行模式”即在终端中通过执行命令来一步步解决问题；“图形界面模式”则是通过在Jupyter Notebook的网页中通过鼠标点击的方式解决上述问题。</p><p>其中，“图形界面模式”的解决方法相对比较简单快捷，如果对于急于解决问题，不需要知道运行原理的朋友，可以直接进入“3. 解决方法之图形界面模式”来阅读。</p><p>“命令行模式”看似比较复杂，且又划分了使用场景，但通过这种方式来解决问题可以更好的了解其中的工作原理，比如，每进行一步操作对应的命令是什么，而命令的执行是为了达到什么样的目的，这些可能都被封装在图形界面上的一个点击动作来完成了。对于想更深入了解其运作过程的朋友，可以接着向下阅读。</p><ol start="2"><li>解决方法之命令行模式</li></ol><p>① 同时使用不同版本的Python</p><p>⑴ 在Python 3中创建Python 2内核</p><p>⒜ pip安装</p><p>首先安装Python 2的ipykernel包。<br>python2 -m pip install ipykernel<br>再为当前用户安装Python 2的内核（ipykernel）。<br>python2 -m ipykernel install –user<br>注意：“–user”参数的意思是针对当前用户安装，而非系统范围内安装。<br>⒝ conda安装</p><p>首先创建Python版本为2.x且具有ipykernel的新环境，其中“<env_name>”为自定义环境名，环境名两边不加尖括号“&lt;&gt;”。<br>conda create -n <env_name> python&#x3D;2 ipykernel<br>然后切换至新创建的环境。<br>Windows: activate <env_name><br>Linux&#x2F;macOS: source activate <env_name><br>为当前用户安装Python 2的内核（ipykernel）。<br>python2 -m ipykernel install –user<br>注意：“–user”参数的意思是针对当前用户安装，而非系统范围内安装。<br>⑵ 在Python 2中创建Python 3内核</p><p>⒜ pip安装</p><p>首先安装Python 3的ipykernel包。<br>python3 -m pip install ipykernel<br>再为当前用户安装Python 2的内核（ipykernel）。<br>python3 -m ipykernel install –user<br>注意：“–user”参数的意思是针对当前用户安装，而非系统范围内安装。<br>⒝ conda安装</p><p>首先创建Python版本为3.x且具有ipykernel的新环境，其中“<env_name>”为自定义环境名，环境名两边不加尖括号“&lt;&gt;”。<br>conda create -n <env_name> python&#x3D;3 ipykernel<br>然后切换至新创建的环境。<br>Windows: activate <env_name><br>Linux&#x2F;macOS: source activate <env_name><br>为当前用户安装Python 3的内核（ipykernel）。<br>python3 -m ipykernel install –user<br>注意：“–user”参数的意思是针对当前用户安装，而非系统范围内安装。<br>② 为不同环境创建内核</p><p>⑴ 切换至需安装内核的环境</p><p>Windows: activate <env_name><br>Linux&#x2F;macOS: source activate <env_name><br>注意：“<env_name>”是需要安装内核的环境名称，环境名两边不加尖括号“&lt;&gt;”。<br>⑵ 检查该环境是否安装了ipykernel包</p><p>conda list<br>执行上述命令查看当前环境下安装的包，若没有安装ipykernel包，则执行安装命令；否则进行下一步。</p><p>conda install ipykernel<br>⑶ 为当前环境下的当前用户安装Python内核</p><p>若该环境的Python版本为2.x，则执行命令：<br>python2 -m ipykernel install –user –name <env_name> –display-name “<notebook_name>“<br>若该环境的Python版本为3.x，则执行命令：<br>python3 -m ipykernel install –user –name <env_name> –display-name “<notebook_name>“<br>注意:</p><ol><li><p>“<env_name>”为当前环境的环境名称。环境名两边不加尖括号“&lt;&gt;”。</p></li><li><p>“<notebook_name>”为自定义显示在Jupyter Notebook中的名称。名称两边不加尖括号“&lt;&gt;”，但双引号必须加。</p></li><li><p>“–name”参数的值，即“<env_name>”是Jupyter内部使用的，其目录的存放路径为~&#x2F;Library&#x2F;Jupyter&#x2F;kernels&#x2F;。如果定义的名称在该路径已经存在，那么将自动覆盖该名称目录的内容。</p></li><li><p>“–display-name”参数的值是显示在Jupyter Notebook的菜单中的名称。</p></li></ol><p>⑷ 检验</p><p>使用命令jupyter notebook启动Jupyter Notebook；在“Files”下的“New”下拉框中即可找到你在第⑶步中的自定义名称，此时，你便可以尽情地在Jupyter Notebook中切换环境，在不同的环境中创建笔记本进行工作和学习啦！</p><ol start="3"><li>解决方法之图形界面模式</li></ol><p>① 你创建了一个新的环境，但却发现在Jupyter Notebook的“New”中找不到这个环境，无法在该环境中创建笔记本。</p><p>动图封面<br>问题发现</p><p>② 进入Jupyter Notebook → Conda → 在“Conda<br>environment”中点击你要添加ipykernel包的环境 → 左下方搜索框输入“ipykernel”<br>→ 勾选“ipykernel” → 点击搜索框旁的“→”箭头 → 安装完毕 → 右下方框内找到“ipykernel”说明已经安装成功</p><p>动图封面<br>解决方法</p><p>③ 在终端control c关闭Jupyter Notebook的服务器然后重启Jupyter Notebook，在“File”的“New”的下拉列表里就可以找到你的环境啦。</p><p>动图封面<br>验证</p><p>七、Jupyter Notebook快捷键</p><ol><li>Mac与Windows特殊按键对照表</li></ol><p>Mac和Windows特殊按键对照表<br>2. Jupyter Notebook笔记本的两种模式</p><p>① 命令模式</p><p>命令模式将键盘命令与Jupyter Notebook笔记本命令相结合，可以通过键盘不同键的组合运行笔记本的命令。<br>按esc键进入命令模式。<br>命令模式下，单元格边框为灰色，且左侧边框线为蓝色粗线条。</p><p>命令模式<br>② 编辑模式</p><p>编辑模式使用户可以在单元格内编辑代码或文档。<br>按enter或return键进入编辑模式。<br>编辑模式下，单元格边框和左侧边框线均为绿色。</p><p>编辑模式<br>3. 两种模式的快捷键</p><p>① 命令模式</p><p>命令模式快捷键<br>② 编辑模式</p><p>编辑模式快捷键<br>4. 查看和编辑快捷键</p><p>① 查看快捷键</p><p>① 进入Jupyter Notebook主界面“File”中。</p><p>② 在“New”的下拉列表中选择环境创建一个笔记本。</p><p>③ 点击“Help”。</p><p>④ 点击“Keyboard Shortcuts”。</p><p>② 编辑快捷键</p><p>⑴ 方法一</p><p>① 进入Jupyter Notebook主界面“File”中。</p><p>② 在“New”的下拉列表中选择环境创建一个笔记本。</p><p>③ 点击“Help”。</p><p>④ 点击“Keyboard Shortcuts”。</p><p>⑤ 弹出的对话框中“Command Mode (press Esc to enable)”旁点击“Edit<br>Shortcuts”按钮。</p><p>⑵ 方法二</p><p>① 进入Jupyter Notebook主界面“File”中。</p><p>② 在“New”的下拉列表中选择环境创建一个笔记本。</p><p>③ 点击“Help”。</p><p>④ 点击“Edit Keyboard Shortcuts”。</p><p>③ 例</p><p>动图封面<br>查看和编辑快捷键</p><p>八、关闭和退出</p><ol><li>关闭笔记本和终端</li></ol><p>当我们在Jupyter Notebook中创建了终端或笔记本时，将会弹出新的窗口来运行终端或笔记本。当我们使用完毕想要退出终端或笔记本时，仅仅关闭页面是无法结束程序运行的，因此我们需要通过以下步骤将其完全关闭。</p><p>① 方法一</p><p>⑴ 进入“Files”页面。</p><p>⑵ 勾选想要关闭的“ipynb”笔记本。正在运行的笔记本其图标为绿色，且后边标有“Running”的字样；已经关闭的笔记本其图标为灰色。</p><p>⑶ 点击上方的黄色的“Shutdown”按钮。</p><p>⑷ 成功关闭笔记本。</p><p>注意：此方法只能关闭笔记本，无法关闭终端。<br>② 方法二</p><p>⑴ 进入“Running”页面。</p><p>⑵ 第一栏是“Terminals”，即所有正在运行的终端均会在此显示；第二栏是“Notebooks”，即所有正在运行的“ipynb”笔记本均会在此显示。</p><p>⑶ 点击想要关闭的终端或笔记本后黄色“Shutdown”按钮。</p><p>⑷ 成功关闭终端或笔记本。</p><p>注意：此方法可以关闭任何正在运行的终端和笔记本。<br>③ 注意</p><p>⑴ 只有“ipynb”笔记本和终端需要通过上述方法才能使其结束运行。</p><p>⑵<br>“txt”文档，即“New”下拉列表中的“Text<br>File”，以及“Folder”只要关闭程序运行的页面即结束运行，无需通过上述步骤关闭。</p><p>④ 演示</p><p>动图封面<br>关闭笔记本或终端程序</p><ol start="2"><li>退出Jupyter Notebook程序</li></ol><p>如果你想退出Jupyter Notebook程序，仅仅通过关闭网页是无法退出的，因为当你打开Jupyter Notebook时，其实是启动了它的服务器。</p><p>你可以尝试关闭页面，并打开新的浏览器页面，把之前的地址输进地址栏，然后跳转页面，你会发现再次进入了刚才“关闭”的Jupyter Notebook页面。</p><p>如果你忘记了刚才关闭的页面地址，可以在启动Jupyter Notebook的终端中找到地址，复制并粘贴至新的浏览器页面的地址栏，会发现同样能够进入刚才关闭的页面。</p><p>因此，想要彻底退出Jupyter Notebook，需要关闭它的服务器。只需要在它启动的终端上按：</p><p>Mac用户：control c<br>Windows用户：ctrl c<br>然后在终端上会提示：“Shutdown this notebook server (y&#x2F;[n])?”输入y即可关闭服务器，这才是彻底退出了Jupyter Notebook程序。此时，如果你想要通过输入刚才关闭网页的网址进行访问Jupyter Notebook便会看到报错页面。</p><p>九、参考资料</p><p>1.知乎：jupyter notebook 可以做哪些事情？猴子的回答</p><ol start="2"><li><p>Jupyter Notebook官方介绍</p></li><li><p>Anaconda官方下载页面</p></li><li><p>Python·Jupyter Notebook各种使用方法记录</p></li><li><p>Stack Overflow中有关如何隐藏&#x2F;显示输入单元格的问题</p></li><li><p>魔术命令官方文档</p></li><li><p>Jupyter Notebook 的快捷键</p></li><li><p>Jupyter Notebook官方文档</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一、什么是Jupyter Notebook？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;简介&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Jupyter Notebook是基于网页的用于交互计算的应用程序。其可被应用于全过程计算：开发、文档编写、运行代码和展示结果。——Jupyter Notebook官方</summary>
      
    
    
    
    <category term="数据建模方法" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1%E6%96%B9%E6%B3%95/"/>
    
    <category term="神经网络" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1%E6%96%B9%E6%B3%95/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
    <category term="python" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1%E6%96%B9%E6%B3%95/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/python/"/>
    
    <category term="深度学习" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1%E6%96%B9%E6%B3%95/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/python/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="数据建模" scheme="http://innocabroad.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="神经网络" scheme="http://innocabroad.github.io/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
    <category term="python" scheme="http://innocabroad.github.io/tags/python/"/>
    
    <category term="深度学习" scheme="http://innocabroad.github.io/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>texlive更新安装宏包</title>
    <link href="http://innocabroad.github.io/2022/09/18/texlive-geng-xin-an-zhuang-hong-bao/"/>
    <id>http://innocabroad.github.io/2022/09/18/texlive-geng-xin-an-zhuang-hong-bao/</id>
    <published>2022-09-18T05:04:58.000Z</published>
    <updated>2022-09-18T05:40:27.807Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修改-Tex-Live-镜像源"><a href="#修改-Tex-Live-镜像源" class="headerlink" title="修改 Tex Live 镜像源"></a>修改 Tex Live 镜像源</h2><blockquote><p>【参考】<a href="https://developer.aliyun.com/mirror/CTAN">https://developer.aliyun.com/mirror/CTAN</a><br>此处使用阿里云镜像站 CTAN 镜像源临时切换，可以用如下命令：</p></blockquote><h1 id="update-–all-参数可根据需要修改"><a href="#update-–all-参数可根据需要修改" class="headerlink" title="update –all 参数可根据需要修改"></a>update –all 参数可根据需要修改</h1><pre class="line-numbers language-none"><code class="language-none">tlmgr update --all --repository https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;CTAN&#x2F;systems&#x2F;texlive&#x2F;tlnet<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>长期更换，可以使用如下命令：</p><pre class="line-numbers language-none"><code class="language-none">tlmgr option repository https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;CTAN&#x2F;systems&#x2F;texlive&#x2F;tlnet<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装宏包</p><pre class="line-numbers language-none"><code class="language-none">tlmgr install &lt;packagename&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>移除</p><pre class="line-numbers language-none"><code class="language-none">tlmgr remove &lt;packagename&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看所有更新的宏包指令：</p><pre class="line-numbers language-none"><code class="language-none">tlmgr update --list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更新所有需要更新的宏包</p><pre class="line-numbers language-none"><code class="language-none">tlmgr update --self --all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果遇到更新宏包过程中，某一个宏包更新失败，可以使用指令继续更新：</p><pre class="line-numbers language-none"><code class="language-none">tlmgr update --reinstall-forcibly-removed --all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里的tlmgr就相当于Python中的pip，tlmgr是 Tex Live Package Manger</p><p>进阶选手可以选择上述更新清单中自己想更新的宏包进行更新。</p><pre class="line-numbers language-none"><code class="language-none">tlmgr update --usepackage_name<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;修改-Tex-Live-镜像源&quot;&gt;&lt;a href=&quot;#修改-Tex-Live-镜像源&quot; class=&quot;headerlink&quot; title=&quot;修改 Tex Live 镜像源&quot;&gt;&lt;/a&gt;修改 Tex Live 镜像源&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;【参考】&lt;</summary>
      
    
    
    
    <category term="latex" scheme="http://innocabroad.github.io/categories/latex/"/>
    
    
    <category term="latex" scheme="http://innocabroad.github.io/tags/latex/"/>
    
  </entry>
  
  <entry>
    <title>zotero安装的插件</title>
    <link href="http://innocabroad.github.io/2022/09/17/zotero-an-zhuang-de-cha-jian/"/>
    <id>http://innocabroad.github.io/2022/09/17/zotero-an-zhuang-de-cha-jian/</id>
    <published>2022-09-17T15:53:35.000Z</published>
    <updated>2022-09-17T16:44:53.535Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Zotero-Connector-未安装"><a href="#Zotero-Connector-未安装" class="headerlink" title="Zotero Connector(未安装)"></a>Zotero Connector(未安装)</h2><p>这个插件具有强大的文献嗅探和捕获能力。将此插件安装在浏览器上，当你打开某一篇科学文献所在的网页时，点击该插件，文献将会自动下载到你的Zotero客户端中。如果你具有所在网页的文献下载权限，那么该文的PDF文稿也将同时下载到你的本地客户端。</p><h2 id="Jasminum"><a href="#Jasminum" class="headerlink" title="Jasminum"></a>Jasminum</h2><p>如果你经常阅读中文科学文献，并且同时严重依赖中国知网，那么强烈建议你安装此插件。该插件具有以下强大功能:</p><ol><li>拆分或合并 Zotero 中条目作者姓和名</li><li>根据知网上下载的文献文件来抓取引用信息（就是根据文件名）</li><li>添加中文PDF&#x2F;CAJ时，自动拉取知网数据，该功能默认关闭。需要到设置中开启，注意添加的文件名需要含有中文，全英文没有效果（还是根据文件名）</li><li>为知网的学位论文 PDF 添加书签</li><li>更新中文 translators</li><li>拉取文献引用次数，是否核心期刊</li></ol><p><a href="https://github.com/l0o0/jasminum/releases/tag/v0.1.6">https://github.com/l0o0/jasminum/releases/tag/v0.1.6</a></p><h2 id="zotero-shortdoi"><a href="#zotero-shortdoi" class="headerlink" title="zotero-shortdoi"></a>zotero-shortdoi</h2><p>有了这个插件，再也不用粘贴复制复杂的标题。它能自动帮助你更新文献的DOI信息。<br><a href="https://github.com/bwiernik/zotero-shortdoi/releases/tag/v1.4.2">https://github.com/bwiernik/zotero-shortdoi/releases/tag/v1.4.2</a></p><h2 id="Zotfile"><a href="#Zotfile" class="headerlink" title="Zotfile"></a>Zotfile</h2><p>这个插件最强大的功能在于它能实现对文献的自动重命名，移动PDF并将其附加到Zotero项目，该插件还可以帮助你从PDF文件中提取注释。Markdown Here该插件帮助你在做笔记的时候，可以轻松运用Markdown语言，同时可以帮助你直接将文献笔记导出到其他环境中。不过，该软件并没有直接对应的.xpi格式。但是制作起来也十分容易，直接到该官网，下载源文件，压缩、修改文件属性.xpi，然后安装到文献管理软件中即可。<br><a href="https://github.com/jlegewie/zotfile/releases">https://github.com/jlegewie/zotfile/releases</a></p><h2 id="Zotero-Scihub"><a href="#Zotero-Scihub" class="headerlink" title="Zotero Scihub"></a>Zotero Scihub</h2><p>大神级软件的Zotero插件版本，无须多言！该插件支持自动下载具有DOI的项目的PDF。Zotero PDF Translate英文阅读水平一般，但是又离不开英文文献，怎么办？安装这个插件，你立马得到拯救。Zotero-better-notes（更新时间2022-09-16）<br><a href="https://github.com/ethanwillis/zotero-scihub/releases">https://github.com/ethanwillis/zotero-scihub/releases</a></p><h2 id="Zotero-PDF-Translate"><a href="#Zotero-PDF-Translate" class="headerlink" title="Zotero PDF Translate"></a>Zotero PDF Translate</h2><p>英文阅读水平一般，但是又离不开英文文献，怎么办？安装这个插件，你立马得到拯救。<br><a href="https://github.com/windingwind/zotero-pdf-translate/releases">https://github.com/windingwind/zotero-pdf-translate/releases</a></p><h2 id="Zotero-better-notes"><a href="#Zotero-better-notes" class="headerlink" title="Zotero-better-notes"></a>Zotero-better-notes</h2><p>最近发现的无敌级别插件。此插件集合了思维导图等工具。你可以边看文献边管理。个人认为有了它，我们可以放弃使用传统的Excel了。功能太强大，我还在摸索中。<br>使用手册<br><a href="https://github.com/windingwind/zotero-better-notes/blob/master/UserGuideCN.md">https://github.com/windingwind/zotero-better-notes/blob/master/UserGuideCN.md</a><br><a href="https://github.com/windingwind/zotero-better-notes/releases">https://github.com/windingwind/zotero-better-notes/releases</a></p><h2 id="zotero-better-bibtex"><a href="#zotero-better-bibtex" class="headerlink" title="zotero-better-bibtex"></a>zotero-better-bibtex</h2><p>Better BibTeX（BBT）是Zotero和Juris-M的扩展，可以更轻松地管理书目数据，特别是对于使用基于文本的工具链（例如基于LaTeX&#x2F;Markdown）编写文档的人。</p><p><a href="https://github.com/retorquere/zotero-better-bibtex/releases">https://github.com/retorquere/zotero-better-bibtex/releases</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Zotero-Connector-未安装&quot;&gt;&lt;a href=&quot;#Zotero-Connector-未安装&quot; class=&quot;headerlink&quot; title=&quot;Zotero Connector(未安装)&quot;&gt;&lt;/a&gt;Zotero Connector(未安装)&lt;/h2</summary>
      
    
    
    
    <category term="数据建模" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/"/>
    
    
    <category term="数据建模" scheme="http://innocabroad.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>python与神经网络</title>
    <link href="http://innocabroad.github.io/2022/09/17/python-yu-shen-jing-wang-luo/"/>
    <id>http://innocabroad.github.io/2022/09/17/python-yu-shen-jing-wang-luo/</id>
    <published>2022-09-17T07:17:07.000Z</published>
    <updated>2022-09-17T11:27:29.248Z</updated>
    
    <content type="html"><![CDATA[<h1 id="python-pip库-sklearn、torch、tensorflow"><a href="#python-pip库-sklearn、torch、tensorflow" class="headerlink" title="python pip库 sklearn、torch、tensorflow"></a>python pip库 sklearn、torch、tensorflow</h1><p>torch <a href="https://pytorch.org/docs/stable/torch.html">官方文档</a> <a href="https://pytorch.apachecn.org/#/">中文文档</a><br>python torch又称PyTorach，是一个以Python优先的深度学习框架，一个开源的Python机器学习库，用于自然语言处理等应用程序，不仅能够实现强大的GPU加速，同时还支持动态神经网络，这是现在很多主流框架比如Tensorflow等都不支持的。</p><blockquote><p>pip3 install torchvision<br>pip3 install torch</p></blockquote><p>sklearn <a href="https://www.sklearncn.cn/">中文文档</a><br>scikit-learn是基于Python语言的机器学习库，具有：</p><ul><li>简单高效的数据分析工具</li><li>可在多种环境中重复使用</li><li>建立在Numpy，Scipy以及matplotlib等数据科学库之上</li><li>开源且可商用的-基于BSD许可</li></ul><p>tensorflow <a href="https://www.tensorflow.org/">官方文档</a> <a href="https://www.w3cschool.cn/tensorflow_python/.html">中文文档</a><br>TensorFlow由谷歌人工智能团队谷歌大脑（Google Brain）开发和维护，拥有包括TensorFlow Hub、TensorFlow Lite、TensorFlow Research Cloud在内的多个项目以及各类应用程序接口（Application Programming Interface, API） [2]  。自2015年11月9日起，TensorFlow依据阿帕奇授权协议（Apache 2.0 open source license）开放源代码 [2]  。</p><h1 id="torch"><a href="#torch" class="headerlink" title="torch"></a>torch</h1><h2 id="张量"><a href="#张量" class="headerlink" title="张量"></a><a href="https://blog.csdn.net/z240626191s/article/details/124204965">张量</a></h2><p>写个demo就遇到了各种各样的bug</p><ol><li>下载Pytorch的自带数据集时报错&#x3D;urllib.error.URLError: urlopen error [SSL: CERTIFICATE_VERIFY_FAILED]</li></ol><h3 id="错误原因："><a href="#错误原因：" class="headerlink" title="错误原因："></a>错误原因：</h3><p>这是一个SSL证书验证错误，当请求一个https站点，但是证书验证错误时，就会报这样的错误。</p><h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><p>只需在代码中加入如下两行将跳过证书的检查，即可成功访问网页。</p><pre class="line-numbers language-none"><code class="language-none"># 全局取消证书验证import sslssl._create_default_https_context &#x3D; ssl._create_unverified_context<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ol start="2"><li>【PyTorch教程】04-详解torchvision 0.13中的预训练模型加载的更新及报错的解决方法 (2022年最新)<br>加载预训练模型(有重大更新)</li></ol><p>相信最近 (2022年7月) 安装或者更新了 PyTorch 和 torchvision 的同志们可能跑代码时遇到了下面的报错之一：</p><pre class="line-numbers language-none"><code class="language-none">UserWarning: The parameter ‘pretrained’ is deprecated since 0.13 and will be removed in 0.15, please use ‘weights’ instead.UserWarning: Arguments other than a weight enum or None for ‘weights’ are deprecated since 0.13 and will be removed in 0.15. The current behavior is equivalent to passing weights&#x3D;ResNet50_Weights.IMAGENET1K_V1. You can also use weights&#x3D;ResNet50_Weights.DEFAULT to get the most up-to-date weights.Expected type ‘Optional[ResNet50_Weights]’, got ‘str’ instead<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这是因为 torchvision 0.13对预训练模型加载方式作出了重大更新造成的。今天一次性就可以把上面3条Bug全部消灭。</p><ol><li>新老版本写法对比</li></ol><blockquote><p>从 torchvision 0.13开始，加载预训练模型函数的参数从 pretrained &#x3D; True 改为 weights&#x3D;预训练模型参数版本 。且旧版本的写法将在未来的torchvision 0.15版本中被Deprecated 。</p></blockquote><p>举个例子：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> torchvision <span class="token keyword">import</span> models<span class="token comment"># 旧版本的写法，将在未来的torchvision 0.15版本中被Deprecated</span>model_old <span class="token operator">=</span> models<span class="token punctuation">.</span>resnet50<span class="token punctuation">(</span>pretrained<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># deprecated</span>model_old <span class="token operator">=</span> models<span class="token punctuation">.</span>resnet50<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># deprecated</span><span class="token comment"># torchvision 0.13及以后的新版本写法</span>model_new <span class="token operator">=</span> models<span class="token punctuation">.</span>resnet50<span class="token punctuation">(</span>weights<span class="token operator">=</span>models<span class="token punctuation">.</span>ResNet50_Weights<span class="token punctuation">.</span>IMAGENET1K_V1<span class="token punctuation">)</span><span class="token comment"># 没有预训练模型加载</span>model <span class="token operator">=</span> models<span class="token punctuation">.</span>resnet50<span class="token punctuation">(</span>weights<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span>model <span class="token operator">=</span> models<span class="token punctuation">.</span>resnet50<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，第8行代码的 IMAGENET1K_V1 表示的是 ResNet-50 在 ImageNet 数据集上进行预训练的第一个版本的权重参数文件。是一个版本标识符。</p><ol start="2"><li>新写法的好处</li></ol><p>在旧版本的写法 pretrained &#x3D; True 中，对于预训练权重参数我们没有太多选择的余地，一执行起来就要使用默认的预训练权重文件版本。但问题是，现在深度学习的发展日新月异，很快就有性能更强的模型横空出世。</p><p>而使用新版本写法 weights&#x3D;预训练模型参数版本 ，相当于我们掌握了预训练权重参数文件的选择权。我们就可以尽情地使用更准更快更强更新的预训练权重参数文件，帮助我们的研究更上一层楼。</p><p>举个例子：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> torchvision <span class="token keyword">import</span> models<span class="token comment"># 加载精度为76.130%的旧权重参数文件V1</span>model_v1 <span class="token operator">=</span> models<span class="token punctuation">.</span>resnet50<span class="token punctuation">(</span>weights<span class="token operator">=</span>models<span class="token punctuation">.</span>ResNet50_Weights<span class="token punctuation">.</span>IMAGENET1K_V1<span class="token punctuation">)</span><span class="token comment"># 等价写法</span>model_v1 <span class="token operator">=</span> models<span class="token punctuation">.</span>resnet50<span class="token punctuation">(</span>weights<span class="token operator">=</span><span class="token string">"IMAGENET1K_V1"</span><span class="token punctuation">)</span><span class="token comment"># 加载精度为80.858%的新权重参数文件V2</span>model_v2 <span class="token operator">=</span> models<span class="token punctuation">.</span>resnet50<span class="token punctuation">(</span>weights<span class="token operator">=</span>models<span class="token punctuation">.</span>ResNet50_Weights<span class="token punctuation">.</span>IMAGENET1K_V2<span class="token punctuation">)</span><span class="token comment"># 等价写法</span>model_v1 <span class="token operator">=</span> models<span class="token punctuation">.</span>resnet50<span class="token punctuation">(</span>weights<span class="token operator">=</span><span class="token string">"IMAGENET1K_V2"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果你不知道哪个权重文件的版本是最新的，没关系，直接选择默认DEFAULT即可。官方会随着 torchvision 的升级而让 DEFAULT 权重文件版本保持在最新。如下代码所示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> torchvision <span class="token keyword">import</span> models<span class="token comment"># 如果你不知道哪个版本是最新, 直接选择默认DEFAULT即可</span>model_new <span class="token operator">=</span> models<span class="token punctuation">.</span>resnet50<span class="token punctuation">(</span>weights<span class="token operator">=</span>models<span class="token punctuation">.</span>ResNet50_Weights<span class="token punctuation">.</span>DEFAULT<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>在中文模版中没有更新<br>代码应该进行修改</p><blockquote><p>从torchvision加载了经过预训练的 resnet18 模型。 我们创建一个随机数据张量来表示具有 3 个通道的单个图像，高度&amp;宽度为 64，其对应的label初始化为一些随机值。</p></blockquote><h2 id="resnet18模型"><a href="#resnet18模型" class="headerlink" title="resnet18模型"></a><a href="https://blog.csdn.net/Chenzhinan1219/article/details/122042407">resnet18模型</a></h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> torch<span class="token keyword">from</span> torchvision<span class="token punctuation">.</span>models <span class="token keyword">import</span> resnet18<span class="token punctuation">,</span> ResNet18_Weightsmodel <span class="token operator">=</span> resnet18<span class="token punctuation">(</span>weights<span class="token operator">=</span>ResNet18_Weights<span class="token punctuation">.</span>DEFAULT<span class="token punctuation">)</span>data <span class="token operator">=</span> torch<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">)</span>labels <span class="token operator">=</span> torch<span class="token punctuation">.</span>rand<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>prediction <span class="token operator">=</span> model<span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token comment"># forward pass</span>loss <span class="token operator">=</span> <span class="token punctuation">(</span>prediction <span class="token operator">-</span> labels<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#用模型的预测和相应的标签来计算误差</span>loss<span class="token punctuation">.</span>backward<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#  当我们在误差张量上调用.backward()时，开始反向传播. 然后，Autograd 会为每个模型参数计算梯度并将其存储在参数的.grad属性中。</span>optim <span class="token operator">=</span> torch<span class="token punctuation">.</span>optim<span class="token punctuation">.</span>SGD<span class="token punctuation">(</span>model<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> lr<span class="token operator">=</span><span class="token number">1e-2</span><span class="token punctuation">,</span> momentum<span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">)</span><span class="token comment">#接下来，我们加载一个优化器，在这种情况下，SGD的学习率为0.01，动量为0.9。我们在优化器中注册模型的所有参数。</span>optim<span class="token punctuation">.</span>step<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#最后，我们调用.step()启动梯度下降。 优化器通过.grad中存储的梯度来调整每个参数。</span><span class="token keyword">print</span><span class="token punctuation">(</span>optim<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Autograd-的微分"><a href="#Autograd-的微分" class="headerlink" title="Autograd 的微分"></a>Autograd 的微分</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;python-pip库-sklearn、torch、tensorflow&quot;&gt;&lt;a href=&quot;#python-pip库-sklearn、torch、tensorflow&quot; class=&quot;headerlink&quot; title=&quot;python pip库 sklearn、</summary>
      
    
    
    
    <category term="数据建模方法" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1%E6%96%B9%E6%B3%95/"/>
    
    <category term="神经网络" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1%E6%96%B9%E6%B3%95/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
    <category term="python" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1%E6%96%B9%E6%B3%95/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/python/"/>
    
    
    <category term="数据建模" scheme="http://innocabroad.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="神经网络" scheme="http://innocabroad.github.io/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
    <category term="python" scheme="http://innocabroad.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>bp神经网络</title>
    <link href="http://innocabroad.github.io/2022/09/17/bp-shen-jing-wang-luo/"/>
    <id>http://innocabroad.github.io/2022/09/17/bp-shen-jing-wang-luo/</id>
    <published>2022-09-17T06:14:35.000Z</published>
    <updated>2022-09-17T16:40:29.344Z</updated>
    
    <content type="html"><![CDATA[<h1 id="bp神经网络分类"><a href="#bp神经网络分类" class="headerlink" title="bp神经网络分类"></a>bp神经网络分类</h1><h2 id="1、作用"><a href="#1、作用" class="headerlink" title="1、作用"></a>1、作用</h2><p>单层神经元学习能力非常有限，故而添加多个神经元，将神经元分为多层，它们不存在跨层连接，也没有同层连接，每层神经元和下一级神经元完全互连，这样的神经网络被称为“多层前馈网络”。其中，输入层神经元只负责输入，隐层神经元和输出层神经元都包含功能神经元，即包含激活函数。学习的过程即根据训练数据来调节神经元之间的“连接权”，以及功能神经元的阈值。<br>M-P 神经元模型<br>模拟神经元，通过函数将输入的向量转化为输出。<br><img src="https://b3logfile.com/file/2020/07/v27ccb6a3a5ec57607cf837fe0f9b98055720w-92c1c139.jpg?imageView2/2/interlace/1/format/jpg" class="lazyload placeholder" data-srcset="https://b3logfile.com/file/2020/07/v27ccb6a3a5ec57607cf837fe0f9b98055720w-92c1c139.jpg?imageView2/2/interlace/1/format/jpg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>​bp神经网络是一种按误差逆传播算法训练的多层前馈网络，是目前应用最广泛的神经网络模型之一。bp神经网络的学习规则是使用最速下降法，通过反向传播来不断调整网络的权值和阈值，使网络的分类错误率最小。</p><h2 id="2、输入输出描述"><a href="#2、输入输出描述" class="headerlink" title="2、输入输出描述"></a>2、输入输出描述</h2><p>输入：自变量X为1个或1个以上的定类或定量变量，因变量Y为一个定类变量。<br>输出：模型的分类结果和模型分类的评价效果。<br>​</p><h2 id="3、案例示例"><a href="#3、案例示例" class="headerlink" title="3、案例示例"></a>3、案例示例</h2><p>根据红酒的颜色强度，脯氨酸，类黄酮等变量，生成一个能够区分琴酒，雪莉，贝尔摩德三种品种的红酒的bp神经网络。<br>导入数据</p><h1 id="5、案例操作"><a href="#5、案例操作" class="headerlink" title="5、案例操作"></a>5、案例操作</h1><p>Step1：新建分析；<br>Step2：上传数据；<br>Step3：选择对应数据打开后进行预览，确认无误后点击开始分析；<br>step4：选择【bp神经网络分类】；<br>step5：查看对应的数据数据格式，按要求输入【bp神经网络分类】数据;<br>step6：进行参数设置（“更多设置”里的参数在客户端可进行设定）<br>step7：点击【开始分析】，完成全部操作。</p><h1 id="6、输出结果分析"><a href="#6、输出结果分析" class="headerlink" title="6、输出结果分析"></a>6、输出结果分析</h1><div class="row">    <embed src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/bp神经网络分类_种类_苯酚_类黄酮.pdf" width="100%" height="550" type="application/pdf"></div><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 代码复制成功后，可直接在客户端NoteBook模块中粘贴代码并运行。 </span>注意：（<span class="token number">1</span>）以上代码对应的数据为案例数据，可自行修改数据来完成算法运算；（<span class="token number">2</span>）只支持spsspro客户端的notebook上调用；（<span class="token number">3</span>）首次安装客户端后，网络良好的情况下，spsspro算法SDK一般一两分钟内会下载完毕。<span class="token keyword">import</span> numpy<span class="token keyword">import</span> pandas<span class="token keyword">from</span> spsspro<span class="token punctuation">.</span>algorithm <span class="token keyword">import</span> supervised_learning<span class="token comment">#生成案例数据</span>data_x <span class="token operator">=</span> pandas<span class="token punctuation">.</span>DataFrame<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token string">"A"</span><span class="token punctuation">:</span> numpy<span class="token punctuation">.</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span>size<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token string">"B"</span><span class="token punctuation">:</span> numpy<span class="token punctuation">.</span>random<span class="token punctuation">.</span>random<span class="token punctuation">(</span>size<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>data_y <span class="token operator">=</span> pandas<span class="token punctuation">.</span>Series<span class="token punctuation">(</span>data<span class="token operator">=</span>numpy<span class="token punctuation">.</span>random<span class="token punctuation">.</span>choice<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> size<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span> name<span class="token operator">=</span><span class="token string">"C"</span><span class="token punctuation">)</span><span class="token comment">#BP神经网络分类，输入参数详细可以光标放置函数括号内按shift+tab查看，输出结果参考spsspro模板分析报告</span>result <span class="token operator">=</span> supervised_learning<span class="token punctuation">.</span>mlp_classifier<span class="token punctuation">(</span>data_x<span class="token operator">=</span>data_x<span class="token punctuation">,</span> data_y<span class="token operator">=</span>data_y<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;bp神经网络分类&quot;&gt;&lt;a href=&quot;#bp神经网络分类&quot; class=&quot;headerlink&quot; title=&quot;bp神经网络分类&quot;&gt;&lt;/a&gt;bp神经网络分类&lt;/h1&gt;&lt;h2 id=&quot;1、作用&quot;&gt;&lt;a href=&quot;#1、作用&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="数据建模方法" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1%E6%96%B9%E6%B3%95/"/>
    
    <category term="bp神经网络" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1%E6%96%B9%E6%B3%95/bp%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="数据建模方法" scheme="http://innocabroad.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1%E6%96%B9%E6%B3%95/"/>
    
    <category term="bp神经网络" scheme="http://innocabroad.github.io/tags/bp%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>数据预处理tip</title>
    <link href="http://innocabroad.github.io/2022/09/16/shu-ju-yu-chu-li-tip/"/>
    <id>http://innocabroad.github.io/2022/09/16/shu-ju-yu-chu-li-tip/</id>
    <published>2022-09-16T11:53:49.000Z</published>
    <updated>2022-10-02T15:29:38.901Z</updated>
    
    <content type="html"><![CDATA[<p>优秀论文怎么写？？？</p><h2 id="数据分析-amp-预处理"><a href="#数据分析-amp-预处理" class="headerlink" title="数据分析&amp;预处理"></a>数据分析&amp;预处理</h2><p>附件？给出了在多个地点采集得到的?组数据，每组文件包含了在同一地点采集到的多个数据，其中有干扰和无干扰情况下各?组。由于实际测量过程中的误差，本题须对原始记录进行数据提取及预处理操作，并删除掉其中的一些“无用”样本，主要考虑异常、缺失、相同或相似4种情况，再经过<a href="https://baike.baidu.com/item/%E5%8D%A1%E5%B0%94%E6%9B%BC%E6%BB%A4%E6%B3%A2?fromModule=lemma_search-box">卡尔曼滤波</a>用于之后的建模研究。总体的数据处理流程如下图 3-1 所示。</p><pre class="mermaid">A[样本数据] –>B[正则表达式提取] B->C[剔除时间戳缺失样本] C–>D[删除相同样本] D–>E[相似变量选择] E–>F[拉依达准则去除异常值] F–>G[样本确定]</pre><p>总体处理步骤分为 5 步，首先基于原始数据格式，采用正则表达式抓取其中的可用数据，按照每4 行保存成一个样本的保存要求得到原始数据集1;再判断同一时间戳是否采集到了完整的4个锚点测距值，剔除掉其中有缺失和完全重复的样本，得到数据集2;之后分析测量值与校验值等变量的相关性实现关键特征变量的选取，删除不必要的变量列;然后采用拉依达准则(3σ准则)去除误差较大的异常值，得到数据集3;最后以二维表形式展示最终的数据预处理结果。</p><p><a href="https://baike.baidu.com/item/%E6%8B%89%E4%BE%9D%E8%BE%BE%E5%87%86%E5%88%99/5678473">拉依达准则</a></p><blockquote><p>拉依达准则是指先假设一组检测数据只含有随机误差，对其进行计算处理得到标准偏差，按一定概率确定一个区间，认为凡超过这个区间的误差，就不属于随机误差而是粗大误差，含有该误差的数据应予以剔除。这种判别处理原理及方法仅局限于对正态或近似正态分布的样本数据处理，它是以测量次数充分大为前提的，当测量次数少的情形用准则剔除粗大误差是不够可靠的。因此，在测量次数较少的情况下，最好不要选用该准则。</p></blockquote><h2 id="数据处理"><a href="#数据处理" class="headerlink" title="数据处理"></a>数据处理</h2><ol><li>附件1为实际场景下测得的数据，主要包括无干扰的正常数据、有干扰的异常数据以及对应的Tag坐标信息。其中Tag信息为标准的结构化数据格式,不需要再做额外的处理，具体格式如表所示(表 3-1 三维 Tag 坐标数据信息格式)<br>有无干扰下的正常&#x2F;异常样本数据则由结构化数字和非结构化文本共同构成，因此需要进一步的数据提取和处理。其中须重点列出的第24个Tag的正常样本数据和第1个Tag的异常样本数据格式具体如表3-2所示。T表示时间戳，即数据采集的时刻;PR表示4个锚点的ID标号;4 列数据分别对应该锚点的测距值(mm):测距值的校验值:数据序列号:数据编号;每4行为1组代表了UWB采集到的一组完整数据。<blockquote><p>描述数据 数据构成 字母代表含义</p></blockquote></li><li>正则表达式提取数据<br>附件 1 中 648 组样本数据均为如表 3-2 所示的非结构化数据格式，故需设计一种 文本匹配模式以抓取出其中关键的结构化数据，再用于之后数据的处理和建模。本题 采用正则表达式来得到时间戳、锚点标号、对应测距值、对应校验值这 4 列关键数据， 针对每个txt文本进行遍历(正常&#x2F;异常样本分开处理)，若存在以下格式:<pre class="line-numbers language-none"><code class="language-none">Compile &#x3D; r&#39;T:(\w+):RR:0:(\w+):(\w+):(\w+)&#39; <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>则抽取出相应位置的数值形成一条结构化数据，之后将相同时间戳的 4 个锚点测距值 和校验值合并为一个样本数据，再与 Tag 标签信息进行整合，形成初始的正常样本和 异常样本。其中 Compile 表示数据匹配模板，\w+表示匹配单词字符及数字。</li></ol><h2 id="缺失数据的处理"><a href="#缺失数据的处理" class="headerlink" title="缺失数据的处理"></a>缺失数据的处理</h2><p>由于同一时间戳的4个锚点数据才为一组完整的数据，此部分数据处理工作需结合正则表达式提取出来的时间戳标识进行。首先分别遍历正常样本和异常样本txt文件，利用正则表达式匹配出关键数据,再统计样本中每个时间戳的频次，若存在Counter(Ti ) &lt;4<br>则认为该时间戳数据缺失，但由于实际测量得到的数值本身存在着不同程度的误差，再进行补全将可能引入更加复杂的误差，且数据样本足够用来之后的建模工作，故我们不考虑这类缺失数据的补全，直接将该时间戳的数据剔除。(原因)</p><h2 id="相同数据的剔除"><a href="#相同数据的剔除" class="headerlink" title="相同数据的剔除"></a>相同数据的剔除</h2><p>缺失数据处理完后，将同一时间戳的四个锚点数据整合成一个样本，即每个样本对应1个时间戳和8个距离数据，再进行相同数据的剔除。首先因测距值和校验值完全相同，我们将4列校验值全部删除，只将4列测距值作为模型输入;再进行每行样 本的遍历比较，剔除掉相同的样本数据;最后处理得到的测距数据再与对应的Tag坐标信息进行整合形成数据集2。</p><h2 id="异常数据的剔除"><a href="#异常数据的剔除" class="headerlink" title="异常数据的剔除"></a>异常数据的剔除</h2><p>针对正常样本和异常样本中可能存在的异常值，本文选用拉依达准则(又称 3 准 则)对数据集进行检验。假设测量得到 4 个测距值 m1 , m2 , m3 , m4 为等精度测量，可计 算出其算术平均值m以及剩余误差<br>若为该行样本是含有粗大误差的异常值，应予剔除。例如正常样本中第 24 个 Tag 位置 以及第 109 个 Tag 位置数据的剔除情况如下图 3-2、3-3 所示。</p><p>至此，“无用”数据(缺失、相同、相似、异常)的预处理过程完毕。按照上述过程的处理结果如表 3-3 所示，具体数据结果见上传的附件 1-“第一问数据处理”。</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clearclc<span class="token comment">%% 根据拉依达准则对二维数据进行筛选</span>mat<span class="token operator">=</span> <span class="token function">xlsread</span><span class="token punctuation">(</span><span class="token string">'陕西灌流器.xlsx'</span><span class="token punctuation">,</span><span class="token string">'data'</span><span class="token punctuation">,</span><span class="token string">'A2:W55'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%读取数据</span><span class="token comment">% ave_all=[];</span><span class="token comment">% sigma_all=[];</span>sizes<span class="token operator">=</span><span class="token function">size</span><span class="token punctuation">(</span>mat<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token function">sizes</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>        <span class="token function">ave</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">mean</span><span class="token punctuation">(</span><span class="token function">mat</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%mean 求解平均值</span>    <span class="token comment">%ave_all=[ave_all,ave(j)];</span>    <span class="token function">sigma</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">std</span><span class="token punctuation">(</span><span class="token function">mat</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%求解标准差</span>    <span class="token function">sigma</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span>    <span class="token comment">%sigma_all=[sigma_all,sigma(j)];</span>    <span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token function">sizes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token function">mat</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">ave</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">3</span><span class="token operator">*</span><span class="token function">sigma</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%不符合3σ准则,标记这个元素位置</span>            <span class="token function">disp</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'第'</span><span class="token punctuation">,</span><span class="token function">num2str</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'行'</span><span class="token punctuation">,</span><span class="token string">'第'</span><span class="token punctuation">,</span><span class="token function">num2str</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'列,出现不满足拉依达准则的数据，数据id为：'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            data_id<span class="token operator">=</span><span class="token function">mat</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">%%如果以actxserver读取的话,这里可以设置excel中单元格格式</span>            <span class="token function">mat</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">%% 这里用数据中没出现过的-1来替代待剔除的值</span>        <span class="token keyword">else</span>            <span class="token keyword">continue</span><span class="token punctuation">;</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> re<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd<span class="token keyword">from</span> os <span class="token keyword">import</span> listdir<span class="token keyword">from</span> collections <span class="token keyword">import</span> Counter<span class="token keyword">def</span> <span class="token function">missing_data_processing</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">:</span>a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>time <span class="token operator">=</span> re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r'T:(\w+):RR'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>findall<span class="token punctuation">(</span>content<span class="token punctuation">)</span> b <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>Counter<span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> b<span class="token punctuation">:</span><span class="token keyword">if</span> <span class="token punctuation">(</span>Counter<span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span> a<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">109</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">return</span> a<span class="token keyword">def</span> <span class="token function">three_sigmal</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span> n <span class="token operator">=</span> <span class="token number">3</span> <span class="token comment"># n*sigma</span><span class="token keyword">print</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>ymean <span class="token operator">=</span> np<span class="token punctuation">.</span>mean<span class="token punctuation">(</span>data<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>ystd <span class="token operator">=</span> np<span class="token punctuation">.</span>std<span class="token punctuation">(</span>data<span class="token punctuation">,</span> axis<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment"># 标准差 threshold1 = ymean - n * ystd threshold2 = ymean + n * ystd</span>outlier <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment"># 将异常值保存</span>final <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment"># 删除掉异常值后的数据 for i in range(0, len(data)):</span><span class="token comment">#print(np.abs(data[i]-ymean))</span><span class="token keyword">if</span> <span class="token punctuation">(</span>np<span class="token punctuation">.</span><span class="token builtin">abs</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>ymean<span class="token punctuation">)</span> <span class="token operator">></span> n <span class="token operator">*</span> ystd<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">any</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token comment">#</span>outlier<span class="token punctuation">.</span>append<span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span> final<span class="token punctuation">.</span>append<span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">return</span> outliernormal_data_path <span class="token operator">=</span> <span class="token string">'D:/竞赛/数学建模/2021 年 E 题/附件 1:UWB 数据集/正常数据'</span> abnormal_data_path <span class="token operator">=</span> <span class="token string">'D:/竞赛/数学建模/2021 年 E 题/附件 1:UWB 数据集/异常数 据'</span>label_path <span class="token operator">=</span> <span class="token string">'D:/竞赛/数学建模/2021 年 E 题/附件 1:UWB 数据集/Tag 坐标信息.txt'</span> filename1 <span class="token operator">=</span> listdir<span class="token punctuation">(</span>normal_data_path<span class="token punctuation">)</span>filename2 <span class="token operator">=</span> listdir<span class="token punctuation">(</span>abnormal_data_path<span class="token punctuation">)</span><span class="token comment"># 均值</span>filename1<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span><span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> filename2<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span><span class="token builtin">int</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 整合标签数据</span>label <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>label_path<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>line <span class="token operator">=</span> f<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 以行的形式进行读取文件 while line:</span>a <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>b <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token comment"># 这是选取需要读取的位数 label.append(b) # 将其添加在列表之中 line = f.readline()</span>f<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">## 整合正常、异常数据</span>normal_df <span class="token operator">=</span> extract_data<span class="token punctuation">(</span>normal_data_path<span class="token punctuation">,</span>filename1<span class="token punctuation">,</span>label<span class="token punctuation">)</span> abnormal_df <span class="token operator">=</span> extract_data<span class="token punctuation">(</span>abnormal_data_path<span class="token punctuation">,</span>filename2<span class="token punctuation">,</span>label<span class="token punctuation">)</span> <span class="token comment">## 删除重复数据</span>x1 <span class="token operator">=</span> normal_df<span class="token punctuation">.</span>drop_duplicates<span class="token punctuation">(</span><span class="token punctuation">)</span>x2 <span class="token operator">=</span> abnormal_df<span class="token punctuation">.</span>drop_duplicates<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>abnormal_df<span class="token punctuation">[</span><span class="token string">'measure1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>abnormal_df<span class="token punctuation">[</span><span class="token string">'filename'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>x2<span class="token punctuation">[</span><span class="token string">'measure1'</span><span class="token punctuation">]</span><span class="token punctuation">[</span>x2<span class="token punctuation">[</span><span class="token string">'filename'</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><div class="row">    <embed src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/Notebook%20Viewer.pdf" width="100%" height="550" type="application/pdf"></div><h1 id="文章记录"><a href="#文章记录" class="headerlink" title="文章记录"></a>文章记录</h1><ol><li><p>首先对未定量的变量数据进行量化，然后对数据进行 清洗处理，使数据标准化、无量纲并做归一化处理;其次，对数据做 KMO 和 Bartlett 检验，判断是否适合进行因子分析<br><a href="https://blog.csdn.net/weixin_43042683/article/details/123931201">https://blog.csdn.net/weixin_43042683/article/details/123931201</a></p></li><li><p>模型的构建需要符合实际情况且误差控制在一定范围内的、相对准确的相 关距离测量数据作为支撑。但是在实际的实验环境中，在进行数据测量、数据记录、数据 导出等过程中难免会存在一定问题, 使得最终得到的数据 (原始数据) 与希望得到的良好数 据存在一定差距。包括连续或间断性的数值缺失、数值漂移 (偏大或偏小) 等情况。因此, 对不良数据进行科学有效地预处理，对于 UWB 定位模型模型的构建有着决定性意义。</p></li></ol><p>任务一要求对无干扰状态和有干扰状态下采集到的数据进行预处理，目前已知共有 324 个靶点坐标，每个靶点在同一位置上都采集多组数据，以特定的数据格式进行存储。 为了便于后续的处理，我们在数据预处理阶段，首先根据有无干扰因素对数据文件进行分类整合，将其转变成二维矩阵的形式进行存储;然后我们对每个靶点对应的二维数据矩阵<br>进行异常值的检测，其中异常值主要包括主要包括对缺失值、重复值、及离群值三类;最<br>后将异常数据剔除并保存。这样就完成了任务一要求的数据预处理工作。</p><p> <img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/%E6%88%AA%E5%B1%8F%202022-10-0117.06.05.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/%E6%88%AA%E5%B1%8F%202022-10-0117.06.05.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br> <img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/E21100030005.pdf" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/E21100030005.pdf" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br> 3. 在工程实践中，我们得到的数据会存在有缺失值、异常值等，在使用之前需要进行数<br>据预处理。本文在所给附件的基础上做出以下处理:<br>首先对采集的数据进行空缺值判断，经过筛选排查没有空缺值;然后，采用拉依达准 则对数据进行筛选，剔除特征值不在   3 范围内且异常值个数大于 100 的特征，共剔除<br>了 26 个特征，在此基础上对特征值不在   3 范围内且异常值个数不大于 100 的特征进 行最值限幅法处理。限幅的具体方法为:用   3 来代替大于  + 3 的异常值，用   3<br>来代替小于   3 的异常值，做到对附件中的异常数据的限幅;最后对数据进行排查筛选，<br>剔除特征中 0 值比例大于 90%的数据，剔除 344 个特征，剩余 359 个特征，数据预处理完 毕。<br>下图所示 3-2 为数据预处理流程图:</p><p>本文选取了首先剔除 26 个特征中的 6 个做出其箱线图加以说明解释，如图 3-3 所示为 异常数据的箱线图，其数据分布过于分散，箱子被压得很扁，甚至只剩下一条线，同时还 存在很多异常值，故对此类特征进行剔除。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;优秀论文怎么写？？？&lt;/p&gt;
&lt;h2 id=&quot;数据分析-amp-预处理&quot;&gt;&lt;a href=&quot;#数据分析-amp-预处理&quot; class=&quot;headerlink&quot; title=&quot;数据分析&amp;amp;预处理&quot;&gt;&lt;/a&gt;数据分析&amp;amp;预处理&lt;/h2&gt;&lt;p&gt;附件？给出了在多个地点采</summary>
      
    
    
    
    <category term="数学建模" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    
    <category term="数学建模" scheme="http://innocabroad.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>echarts画图教程</title>
    <link href="http://innocabroad.github.io/2022/09/16/echarts-hua-tu-jiao-cheng/"/>
    <id>http://innocabroad.github.io/2022/09/16/echarts-hua-tu-jiao-cheng/</id>
    <published>2022-09-16T11:19:27.000Z</published>
    <updated>2022-09-17T06:29:24.130Z</updated>
    
    <content type="html"><![CDATA[<p>spss pro 智能画图更方便<br><a href="https://www.spsspro.com/prodraw/operation/2666341?name=%E7%BA%A2%E9%85%92%E6%95%B0%E6%8D%AE.xlsx">https://www.spsspro.com/prodraw/operation/2666341?name=红酒数据.xlsx</a><br>直接表格拖入数据即可</p><h1 id="获取安装-echart-amp-jquery"><a href="#获取安装-echart-amp-jquery" class="headerlink" title="获取安装 echart &amp; jquery"></a>获取安装 echart &amp; jquery</h1><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/echarts.js" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/echarts.js" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/jquery-1.9.1.min.js" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/jquery-1.9.1.min.js" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br>新建目录js存放js脚本<br>在项目目录新建一个index.html 文件，内容如下：</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Echarts入门案例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 引入 开发环境的echarts.js --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/echarts.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/jquery-1.9.1.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js/index.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 声明DOM容器对象,为ECharts准备一个具备大小（宽高）的Dom --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">#main</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>400px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>index.js中插入<a href="https://echarts.apache.org/examples/zh/index.html">示例</a>开头结尾要包括</p><pre class="line-numbers language-none"><code class="language-none">$(document).ready(function()&#123;  &#125;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>画图参考<a href="https://echarts.apache.org/examples/zh/index.html#chart-type-line">https://echarts.apache.org/examples/zh/index.html#chart-type-line</a><br>挑选需要的图片读入数据</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;spss pro 智能画图更方便&lt;br&gt;&lt;a href=&quot;https://www.spsspro.com/prodraw/operation/2666341?name=%E7%BA%A2%E9%85%92%E6%95%B0%E6%8D%AE.xlsx&quot;&gt;https://ww</summary>
      
    
    
    
    <category term="echarts" scheme="http://innocabroad.github.io/categories/echarts/"/>
    
    <category term="数学建模" scheme="http://innocabroad.github.io/categories/echarts/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    
    <category term="echarts" scheme="http://innocabroad.github.io/tags/echarts/"/>
    
    <category term="数学建模" scheme="http://innocabroad.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>ios抓包tip</title>
    <link href="http://innocabroad.github.io/2022/09/16/ios-zhua-bao-tip/"/>
    <id>http://innocabroad.github.io/2022/09/16/ios-zhua-bao-tip/</id>
    <published>2022-09-16T08:19:51.000Z</published>
    <updated>2022-09-16T09:51:20.214Z</updated>
    
    <content type="html"><![CDATA[<p>app不走系统代理？如何抓包？</p><blockquote><p>之前遇到了一个问题iphone上的应用抓不到数据包。就是抓不到。<br>最初以为是像微信一样走了其他的协议。觉得这种应用他们也没有必要下这样的功夫这样的成本，肯定还是走的http<br>于是有了这个经历</p></blockquote><h1 id="简而言之，他们不走系统代理"><a href="#简而言之，他们不走系统代理" class="headerlink" title="简而言之，他们不走系统代理"></a>简而言之，他们不走系统代理</h1><p>网络请求代理设置NO_PROXY</p><ul><li>android系统设置的代理并不是强制对所有app生效的</li><li>app可以在网络请求类库中通过自定义代理设置，选择是否要走系统代理</li></ul><h2 id="安卓怎么办呢"><a href="#安卓怎么办呢" class="headerlink" title="安卓怎么办呢"></a>安卓怎么办呢</h2><p>在网上找到了很多安卓的方法<br>不要用手机wifi的地方设置系统代理，那是系统代理不是全局代理<br>既然不走系统代理，那么直接抓系统的包不就可以了吗</p><p>被抓包的APP并不知道自己被套在了第几层</p><ul><li>方案一</li></ul><p>使用proxifier 将模拟器请求直接转发到抓包软件，相当于抓安卓系统的包</p><ul><li>方案二</li></ul><p>同理，使用本地VPN抓包软件，如抓包精灵</p><ul><li>方案三</li></ul><p>justtrustme或者直接okhttp代理方法，使代理设置语句无效</p><p>直接放弃。首先安卓root装证书越来越麻烦，烦，证书都装不上看什么https。其次，我的安卓机没有电呀。用ios挺好。</p><h2 id="iOS怎么办呢"><a href="#iOS怎么办呢" class="headerlink" title="iOS怎么办呢"></a>iOS怎么办呢</h2><p>shadowrocket设置全局代理，好的解决。有个配置要叮嘱一下<br><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/IMG_81AA94E2F3D4-1.jpeg" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/IMG_81AA94E2F3D4-1.jpeg" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br>类型选择http。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>如果这也算提高攻击门槛的话，好吧可能确实有一点点点用处吧</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;app不走系统代理？如何抓包？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;之前遇到了一个问题iphone上的应用抓不到数据包。就是抓不到。&lt;br&gt;最初以为是像微信一样走了其他的协议。觉得这种应用他们也没有必要下这样的功夫这样的成本，肯定还是走的http&lt;br&gt;于是有了这个经历</summary>
      
    
    
    
    <category term="信息安全" scheme="http://innocabroad.github.io/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/"/>
    
    <category term="抓包" scheme="http://innocabroad.github.io/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E6%8A%93%E5%8C%85/"/>
    
    
  </entry>
  
  <entry>
    <title>matlab操作手册</title>
    <link href="http://innocabroad.github.io/2022/09/16/matlab-cao-zuo-shou-ce/"/>
    <id>http://innocabroad.github.io/2022/09/16/matlab-cao-zuo-shou-ce/</id>
    <published>2022-09-16T05:40:42.000Z</published>
    <updated>2022-09-21T02:35:08.732Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>Matlab中的读取使用操作</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">'/Users/innocence/Downloads/data.mat'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>errorbar - 含误差条的线图<br> 此 MATLAB 函数 创建 y 中数据的线图，并在每个数据点处绘制一个垂直误差条。err 中的值确<br> 定数据点上方和下方的每个误差条的长度，因此，总误差条长度是 err 值的两倍。</p></li><li><p>line - 创建基本线条<br> 此 MATLAB 函数 使用向量 x 和 y 中的数据在当前坐标区中绘制线条。如果 x 和 y 中有一个<br> 是矩阵或两者都是矩阵，则 line 将绘制多个线条。与 plot 函数不同，line 会向当前坐标区<br> 添加线条，而不删除其他图形对象或重置坐标区属性。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Matlab中的读取使用操作&lt;/p&gt;
&lt;pre class=&quot;line-numbers language-matlab&quot; data-language=&quot;matlab&quot;&gt;&lt;code class=&quot;language-matlab&quot;&gt;&lt;span class=&quot;t</summary>
      
    
    
    
    <category term="数据建模" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="matlab" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/matlab/"/>
    
    <category term="操作手册" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/matlab/%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/"/>
    
    
    <category term="数据建模" scheme="http://innocabroad.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="matlab" scheme="http://innocabroad.github.io/tags/matlab/"/>
    
    <category term="操作手册" scheme="http://innocabroad.github.io/tags/%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/"/>
    
  </entry>
  
  <entry>
    <title>matlab画图手册（使用PlotPub）</title>
    <link href="http://innocabroad.github.io/2022/09/16/matlab-hua-tu-shou-ce-shi-yong-plotpub/"/>
    <id>http://innocabroad.github.io/2022/09/16/matlab-hua-tu-shou-ce-shi-yong-plotpub/</id>
    <published>2022-09-16T05:14:16.000Z</published>
    <updated>2022-09-21T02:35:14.499Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PlotPub安装"><a href="#PlotPub安装" class="headerlink" title="PlotPub安装"></a>PlotPub安装</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>PlotPub 是一个免费和开放源的MATLAB绘图库，用于生成MATLAB漂亮的，出版质量的图。从名字可以看出，该工具包主要是plot绘制一些曲线。</p><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>下载：<a href="https://github.com/masumhabib/PlotPub">https://github.com/masumhabib/PlotPub</a><br>安装：</p><pre class="line-numbers language-none"><code class="language-none">addpath(&#39;&#x2F;Applications&#x2F;MATLAB_R2021b.app&#x2F;toolbox&#x2F;plotpub&#39;);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>解压后将路径添加到Matlab的环境中即可。<br>去除路径</p><pre class="line-numbers language-none"><code class="language-none">rmpath(&#39;&#x2F;Applications&#x2F;MATLAB_R2021b.app&#x2F;toolbox&#x2F;plotpub&#39;);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="使用手册"><a href="#使用手册" class="headerlink" title="使用手册"></a>使用手册</h3><p><a href="http://masumhabib.com/projects/publication-quality-graphs-matlab/plotpub-v2-0-documentation/">http://masumhabib.com/projects/publication-quality-graphs-matlab/plotpub-v2-0-documentation/</a></p><h2 id="example"><a href="#example" class="headerlink" title="example"></a>example</h2><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear all<span class="token punctuation">;</span><span class="token comment">%% lets plot 3 cycles of 50Hz AC voltage</span>f <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span> <span class="token comment">% frequency</span>Vm <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token comment">% peak</span>phi <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">% phase</span><span class="token comment">% generate the signal</span>t <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">0.0001</span><span class="token operator">:</span><span class="token number">3</span><span class="token operator">/</span>f<span class="token punctuation">]</span><span class="token punctuation">;</span>th <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span><span class="token keyword">pi</span><span class="token operator">*</span>f<span class="token operator">*</span>t<span class="token punctuation">;</span>v <span class="token operator">=</span> Vm<span class="token operator">*</span><span class="token function">sin</span><span class="token punctuation">(</span>th<span class="token operator">+</span>phi<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% plot it</span>figure<span class="token punctuation">;</span><span class="token function">plot</span><span class="token punctuation">(</span>t<span class="token operator">*</span><span class="token number">1E3</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% change settings</span>plt <span class="token operator">=</span> <span class="token function">Plot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% create a Plot object and grab the current figure</span>plt<span class="token punctuation">.</span>XLabel <span class="token operator">=</span> <span class="token string">'Time, t (ms)'</span><span class="token punctuation">;</span> <span class="token comment">% xlabel</span>plt<span class="token punctuation">.</span>YLabel <span class="token operator">=</span> <span class="token string">'Voltage, V (V)'</span><span class="token punctuation">;</span> <span class="token comment">%ylabel</span>plt<span class="token punctuation">.</span>Title <span class="token operator">=</span> <span class="token string">'Voltage as a function of time'</span><span class="token punctuation">;</span> <span class="token comment">% plot title</span><span class="token comment">% Save? comment the following line if you do not want to save</span>plt<span class="token punctuation">.</span>Colors <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token comment">% [red, green, blue]</span>plt<span class="token punctuation">.</span>LineWidth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">% line width</span>plt<span class="token punctuation">.</span>LineStyle <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'--'</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token comment">% line style: '-', ':', '--' etc</span>plt<span class="token punctuation">.</span><span class="token function">export</span><span class="token punctuation">(</span><span class="token string">'plotSimple1.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，f是频率，Vm是峰值电压，t是时间，v是交流电压信号。图非常难看<br><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/%E6%88%AA%E5%B1%8F2022-09-16%2013.52.39.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/%E6%88%AA%E5%B1%8F2022-09-16%2013.52.39.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>加了这个会变好看</p><pre class="line-numbers language-none"><code class="language-none">%% plot nowopt.XLabel &#x3D; &#39;X坐标名称&#39;; % x坐标名字opt.YLabel &#x3D; &#39;y坐标名称&#39;; %yl坐标名字opt.XLim &#x3D; [0, 200]; % X坐标区间opt.YLim &#x3D; [0, 16]; % y坐标区间opt.Colors &#x3D; [1, 0, 0;    0,1,0] % [red, green, blue](线条颜色)opt.LineWidth &#x3D; [2,2]; % 线条宽度opt.LineStyle &#x3D; &#123;&#39;-&#39;, &#39;--&#39;&#125;; % 线条格式 &#39;-&#39;, &#39;:&#39;, &#39;--&#39; etcopt.Legend &#x3D; &#123;&#39;\theta &#x3D; 0^o&#39;, &#39;\theta &#x3D; 45^o&#39;&#125;; % 右上角图例% 保存在文件目录下opt.FileName &#x3D; &#39;plotAxisLimit.jpg&#39;; % 创建plot对象setPlotProp(opt);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">plt <span class="token operator">=</span> <span class="token function">Plot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% create a Plot object and grab the current figure</span>plt<span class="token punctuation">.</span>XLabel <span class="token operator">=</span> <span class="token string">'x名称'</span><span class="token punctuation">;</span> <span class="token comment">% xlabel</span>plt<span class="token punctuation">.</span>YLabel <span class="token operator">=</span> <span class="token string">'y名称'</span><span class="token punctuation">;</span> <span class="token comment">%ylabel</span>plt<span class="token punctuation">.</span>Title <span class="token operator">=</span> <span class="token string">'图标title'</span><span class="token punctuation">;</span> <span class="token comment">% plot title</span><span class="token comment">% Save? comment the following line if you do not want to save</span>plt<span class="token punctuation">.</span>Colors <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">% [red, green, blue](线条颜色)</span>plt<span class="token punctuation">.</span>LineWidth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">% line width</span>plt<span class="token punctuation">.</span>LineStyle <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'--'</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token comment">% line style: '-', ':', '--' etc</span>plt<span class="token punctuation">.</span><span class="token function">export</span><span class="token punctuation">(</span><span class="token string">'1.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 class="bamboo-h " id="二维曲线">二维曲线</h1><br/><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear<span class="token punctuation">;</span>clc<span class="token punctuation">;</span>close all<span class="token punctuation">;</span>x <span class="token operator">=</span> <span class="token function">linspace</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%均匀生成数字1~200，共计100个</span>y1 <span class="token operator">=</span> <span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">%生成函数y=log(x)+1</span>y2 <span class="token operator">=</span> <span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">%生成函数y=log(x)+2</span>figure<span class="token punctuation">;</span><span class="token function">plot</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%作图 y=log(x)+1</span>hold on <span class="token comment">%多图共存在一个窗口上</span><span class="token function">plot</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%%作图 y=log(x)+2，LineWidth指线型的宽度，粗细尺寸2 hold off %关闭多图共存在一个窗口上</span><span class="token function">legend</span><span class="token punctuation">(</span><span class="token string">'y1'</span><span class="token punctuation">,</span> <span class="token string">'y2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%生成图例 y1和y2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/1.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/1.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><h1 class="bamboo-h " id="二维散点图">二维散点图</h1><br/><p>常用来比较理论数据和实验数据的趋势关系;</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear<span class="token punctuation">;</span>clc<span class="token punctuation">;</span>close all<span class="token punctuation">;</span>x <span class="token operator">=</span> <span class="token function">linspace</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%均匀生成数字1~200，共计100个</span>y1 <span class="token operator">=</span> <span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">%生成函数y=log(x)+1</span>figure<span class="token punctuation">;</span>y3 <span class="token operator">=</span> y1 <span class="token operator">+</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0.5</span><span class="token punctuation">;</span><span class="token function">plot</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'Color'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0.21</span><span class="token punctuation">,</span> <span class="token number">0.21</span><span class="token punctuation">,</span> <span class="token number">0.67</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hold on<span class="token comment">% 设置数据点的形状、数据点的填充颜色、数据点的轮廓颜色</span><span class="token function">plot</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y3<span class="token punctuation">,</span> <span class="token string">'o'</span><span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'Color'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0.46</span><span class="token punctuation">,</span> <span class="token number">0.63</span><span class="token punctuation">,</span> <span class="token number">0.90</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'MarkerFaceColor'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0.35</span><span class="token punctuation">,</span> <span class="token number">0.90</span><span class="token punctuation">,</span> <span class="token number">0.89</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'MarkerEdgeColor'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0.18</span><span class="token punctuation">,</span> <span class="token number">0.62</span><span class="token punctuation">,</span> <span class="token number">0.17</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hold offplt <span class="token operator">=</span> <span class="token function">Plot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% create a Plot object and grab the current figure</span>plt <span class="token operator">=</span> <span class="token function">Plot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% create a Plot object and grab the current figure</span>plt<span class="token punctuation">.</span>XLabel <span class="token operator">=</span> <span class="token string">'x名称'</span><span class="token punctuation">;</span> <span class="token comment">% xlabel</span>plt<span class="token punctuation">.</span>YLabel <span class="token operator">=</span> <span class="token string">'y名称'</span><span class="token punctuation">;</span> <span class="token comment">%ylabel</span>plt<span class="token punctuation">.</span>Title <span class="token operator">=</span> <span class="token string">'图标title'</span><span class="token punctuation">;</span> <span class="token comment">% plot title</span><span class="token comment">% Save? comment the following line if you do not want to save</span>plt<span class="token punctuation">.</span>Colors <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">% [red, green, blue](线条颜色)</span>plt<span class="token punctuation">.</span>LineWidth <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">% line width</span>plt<span class="token punctuation">.</span>LineStyle <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'--'</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token comment">% line style: '-', ':', '--' etc</span>plt<span class="token punctuation">.</span><span class="token function">export</span><span class="token punctuation">(</span><span class="token string">'2.png'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/2.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/2.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>MarkerFaceColor用于设置内部填充颜色<br>MarkerEdgeColor用于设置外部边框颜色 </p><h1 class="bamboo-h " id="二维渐变图">二维渐变图</h1><br/><p>用不同的颜色、数据点大小表征不同数值，更加直观;</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">x <span class="token operator">=</span> <span class="token function">linspace</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token operator">*</span><span class="token keyword">pi</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>y <span class="token operator">=</span> <span class="token function">cos</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%随机生成1*200，位于[0,1]的数字 </span>sz <span class="token operator">=</span> <span class="token number">25</span><span class="token punctuation">;</span><span class="token comment">%尺寸为25</span>c <span class="token operator">=</span> <span class="token function">linspace</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token function">length</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">scatter</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>sz<span class="token punctuation">,</span>c<span class="token punctuation">,</span><span class="token string">'filled'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> linspace - 生成线性间距向量<br>    此 MATLAB 函数 返回包含 x1 和 x2 之间的 100 个等间距点的行向量。<br><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/3.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/3.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><ul><li>scatter函数用法</li></ul><ol><li>scatter(x,y) 在向量 x 和 y 指定的位置创建一个包含圆形标记的散点图。</li><li>要绘制一组坐标，请将 x 和 y 指定为等长向量。</li><li>要在同一组坐标区上绘制多组坐标，请将 x 或 y 中的至少一个指定为矩阵。</li><li>scatter(x,y,sz) 指定圆大小。要对所有圆使用相同的大小，请将 sz 指定为标量。 要绘制不同大小的每个圆，请将 sz 指定为向量或矩阵。</li><li>scatter(x,y,sz,c) 指定圆颜色。您可以为所有圆指定一种颜色，也可以更改颜色。 例如，您可以通过将 c 指定为 ‘red’ 来绘制所有红色圆。</li><li>scatter(___,’filled’) 填充圆。可以将 ‘filled’ 选项与前面语法中的任何输入 参数组合一起使用。</li></ol><h1 class="bamboo-h " id="条形图">条形图</h1><br/><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">A<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">60.689</span><span class="token punctuation">;</span><span class="token number">87.714</span><span class="token punctuation">;</span><span class="token number">143.1</span><span class="token punctuation">;</span><span class="token number">267.9515</span><span class="token punctuation">]</span><span class="token punctuation">;</span> C<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">127.5</span><span class="token punctuation">;</span><span class="token number">160.4</span><span class="token punctuation">;</span><span class="token number">231.9</span><span class="token punctuation">;</span><span class="token number">400.2</span><span class="token punctuation">]</span>B<span class="token operator">=</span>C<span class="token operator">-</span>A<span class="token punctuation">;</span>D<span class="token operator">=</span><span class="token punctuation">[</span>A<span class="token punctuation">,</span>B<span class="token punctuation">,</span>C<span class="token punctuation">]</span><span class="token punctuation">;</span>bar1<span class="token operator">=</span><span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token operator">:</span><span class="token number">5</span><span class="token operator">:</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">,</span>A<span class="token punctuation">,</span><span class="token string">'BarWidth'</span><span class="token punctuation">,</span><span class="token number">0.2</span><span class="token punctuation">,</span><span class="token string">'FaceColor'</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hold on<span class="token punctuation">;</span>bar2<span class="token operator">=</span><span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token operator">:</span><span class="token number">5</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">,</span>B<span class="token punctuation">,</span><span class="token string">'BarWidth'</span><span class="token punctuation">,</span><span class="token number">0.2</span><span class="token punctuation">,</span><span class="token string">'FaceColor'</span><span class="token punctuation">,</span><span class="token string">'y'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> hold on<span class="token punctuation">;</span>bar3<span class="token operator">=</span><span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token operator">:</span><span class="token number">5</span><span class="token operator">:</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">,</span>C<span class="token punctuation">,</span><span class="token string">'BarWidth'</span><span class="token punctuation">,</span><span class="token number">0.2</span><span class="token punctuation">,</span><span class="token string">'FaceColor'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'耗时/s'</span><span class="token punctuation">)</span><span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">'GMM阶数'</span><span class="token punctuation">)</span><span class="token function">legend</span><span class="token punctuation">(</span><span class="token string">'训练耗时'</span><span class="token punctuation">,</span><span class="token string">'测试耗时'</span><span class="token punctuation">,</span><span class="token string">'总耗时'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>labelID <span class="token operator">=</span><span class="token punctuation">&#123;</span> <span class="token string">'8阶'</span><span class="token punctuation">,</span><span class="token string">'16阶'</span><span class="token punctuation">,</span><span class="token string">'32阶'</span><span class="token punctuation">,</span><span class="token string">'64阶'</span><span class="token punctuation">&#125;</span><span class="token function">set</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span><span class="token string">'XTick'</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token operator">:</span><span class="token number">5</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">set</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span><span class="token string">'XTickLabel'</span><span class="token punctuation">,</span>labelID<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/4.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/4.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p> bar - 条形图<br>    此 MATLAB 函数 创建一个条形图，y 中的每个元素对应一个条形。如果 y 是 m×n 矩阵，则<br>    bar 创建每组包含 n 个条形的 m 个组。<br> set - 设置图形对象属性<br>    此 MATLAB 函数 为 H 标识的对象指定其 Name 属性的值。使用时须用单引号将属性名引起<br>    来，例如，set(H,’Color’,’red’)。如果 H 是对象的向量，则 set 会为所有对象设置属<br>    性。如果 H 为空（即 []），set 不执行任何操作，但不返回错误或警告。</p><h1 class="bamboo-h " id="填充图">填充图</h1><br/><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">x <span class="token operator">=</span> <span class="token number">0.4</span><span class="token operator">:</span><span class="token number">0.1</span><span class="token operator">:</span><span class="token number">2</span><span class="token operator">*</span><span class="token keyword">pi</span><span class="token punctuation">;</span>y1 <span class="token operator">=</span> <span class="token function">sin</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>y2 <span class="token operator">=</span> <span class="token function">sin</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% 确定 y1 和 y2 的上下边界 </span>maxY <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">[</span>y1<span class="token punctuation">;</span> y2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>minY <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">[</span>y1<span class="token punctuation">;</span> y2<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% 确定填充多边形，按照顺时针方向来确定点 </span><span class="token comment">% fliplr 实现左右翻转</span>xFill <span class="token operator">=</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span> <span class="token function">fliplr</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>yFill <span class="token operator">=</span> <span class="token punctuation">[</span>maxY<span class="token punctuation">,</span> <span class="token function">fliplr</span><span class="token punctuation">(</span>minY<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>figure<span class="token function">fill</span><span class="token punctuation">(</span>xFill<span class="token punctuation">,</span> yFill<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0.21</span><span class="token punctuation">,</span> <span class="token number">0.21</span><span class="token punctuation">,</span> <span class="token number">0.67</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hold on<span class="token comment">% 绘制轮廓线</span><span class="token function">plot</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> <span class="token string">'k'</span><span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token function">plot</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> <span class="token string">'k'</span><span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>hold off<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/5.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/5.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p> fliplr - 将数组从左向右翻转<br>    此 MATLAB 函数 返回 A，围绕垂直轴按左右方向翻转其各列。</p><h1 class="bamboo-h " id="多Y轴图">多Y轴图</h1><br/><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">figure<span class="token punctuation">;</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">'accidents.mat'</span><span class="token punctuation">,</span><span class="token string">'hwydata'</span><span class="token punctuation">)</span>ind <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">51</span><span class="token punctuation">;</span>drivers <span class="token operator">=</span> <span class="token function">hwydata</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>yyaxis left<span class="token function">scatter</span><span class="token punctuation">(</span>ind<span class="token punctuation">,</span> drivers<span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'Highway Data'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">'States'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'Licensed Drivers (thousands)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>pop <span class="token operator">=</span> <span class="token function">hwydata</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>yyaxis right<span class="token function">scatter</span><span class="token punctuation">(</span>ind<span class="token punctuation">,</span> pop<span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'Vehicle Miles Traveled (millions)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/%E6%88%AA%E5%B1%8F2022-09-16%2015.39.22.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/%E6%88%AA%E5%B1%8F2022-09-16%2015.39.22.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><h1 class="bamboo-h " id="二维场图">二维场图</h1><br/><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">meshgrid</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">0.1</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token operator">:</span><span class="token number">0.1</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>u<span class="token operator">=</span>x<span class="token punctuation">;</span>v<span class="token operator">=</span><span class="token operator">-</span>y<span class="token punctuation">;</span>startx <span class="token operator">=</span> <span class="token number">0.1</span><span class="token operator">:</span><span class="token number">0.1</span><span class="token operator">:</span><span class="token number">0.9</span><span class="token punctuation">;</span>starty <span class="token operator">=</span> <span class="token function">ones</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span>startx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% 需要获取所有流线的属性</span>figure<span class="token punctuation">;</span><span class="token function">quiver</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> u<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%该函数使用箭头来直观的显示矢量场。该调用格式表示通过在(x, y)指定的位置绘制 小箭头来表示以该点为起点的向量(u,v)</span><span class="token function">streamline</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> u<span class="token punctuation">,</span> v<span class="token punctuation">,</span> startx<span class="token punctuation">,</span> starty<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/6.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/6.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p> meshgrid - 二维和三维网格<br>    此 MATLAB 函数 基于向量 x 和 y 中包含的坐标返回二维网格坐标。X 是一个矩阵，每一行是<br>    x 的一个副本；Y 也是一个矩阵，每一列是 y 的一个副本。坐标 X 和 Y 表示的网格有<br>    length(y) 个行和 length(x) 个列。</p><p> quiver - 箭头图或向量图<br>    此 MATLAB 函数 在由 X 和 Y 指定的笛卡尔坐标上绘制具有定向分量 U 和 V 的箭头。例<br>    如，第一个箭头源于点 X(1) 和 Y(1)，按 U(1) 水平延伸，按 V(1) 垂直延伸。默认情况<br>    下，quiver 函数缩放箭头长度，使其不重叠。</p><p> streamline - 根据二维或三维向量数据绘制流线图<br>    此 MATLAB 函数 根据三维向量数据 U、V 和 W 绘制流线图。</p><h1 class="bamboo-h " id="三维曲线图">三维曲线图</h1><br/><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">figure<span class="token punctuation">;</span>t <span class="token operator">=</span> <span class="token number">0</span><span class="token operator">:</span><span class="token keyword">pi</span><span class="token operator">/</span><span class="token number">20</span><span class="token operator">:</span><span class="token number">10</span><span class="token operator">*</span><span class="token keyword">pi</span><span class="token punctuation">;</span>xt <span class="token operator">=</span> <span class="token function">sin</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>yt <span class="token operator">=</span> <span class="token function">cos</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">plot3</span><span class="token punctuation">(</span>xt<span class="token punctuation">,</span> yt<span class="token punctuation">,</span> t<span class="token punctuation">,</span> <span class="token string">'-o'</span><span class="token punctuation">,</span> <span class="token string">'Color'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'MarkerSize'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/7.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/7.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><h1 class="bamboo-h " id="三维条形图">三维条形图</h1><br/><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">figure<span class="token punctuation">;</span> x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">20</span><span class="token operator">:</span><span class="token number">10</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">;</span> y<span class="token operator">=</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">;</span> <span class="token comment">% 随便生成的 5 组数据，也就是目标图上的 5 条曲线数据</span> z <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">z</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">10</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">linspace</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">z</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">10</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">linspace</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">z</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">10</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">linspace</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">z</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token operator">:</span><span class="token number">10</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">linspace</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">z</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token operator">:</span><span class="token number">2</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">linspace</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span> fori<span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">5</span> <span class="token comment">% x 方向每条曲线都是一个值，重复 y 的长度这么多次</span> xx <span class="token operator">=</span> <span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">ones</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% z 方向的值，每次取一条</span> zz <span class="token operator">=</span> <span class="token function">z</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> <span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% plot3 在 xyz 空间绘制曲线，保证 x y z 长度一致即可</span> <span class="token function">plot3</span><span class="token punctuation">(</span>xx<span class="token punctuation">,</span> y<span class="token punctuation">,</span> zz<span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> hold on <span class="token keyword">end</span> hold off <span class="token function">legend</span><span class="token punctuation">(</span><span class="token string">'line1'</span><span class="token punctuation">,</span> <span class="token string">'line2'</span><span class="token punctuation">,</span> <span class="token string">'line3'</span><span class="token punctuation">,</span> <span class="token string">'line4'</span><span class="token punctuation">,</span> <span class="token string">'line5'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/8.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/8.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><h1 class="bamboo-h " id="三维散点图">三维散点图</h1><br/><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear<span class="token punctuation">;</span>clc<span class="token punctuation">;</span>close all<span class="token punctuation">;</span>figure<span class="token punctuation">;</span><span class="token punctuation">[</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">,</span>Z<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">sphere</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">;</span>x <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0.5</span><span class="token operator">*</span><span class="token function">X</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token number">0.75</span><span class="token operator">*</span><span class="token function">X</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">X</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>y <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0.5</span><span class="token operator">*</span><span class="token function">Y</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token number">0.75</span><span class="token operator">*</span><span class="token function">Y</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">Y</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>z <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0.5</span><span class="token operator">*</span><span class="token function">Z</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token number">0.75</span><span class="token operator">*</span><span class="token function">Z</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">Z</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>S <span class="token operator">=</span> <span class="token function">repmat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token function">numel</span><span class="token punctuation">(</span>X<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> C <span class="token operator">=</span> <span class="token function">repmat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">numel</span><span class="token punctuation">(</span>X<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> s<span class="token operator">=</span><span class="token function">S</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>c<span class="token operator">=</span><span class="token function">C</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>h <span class="token operator">=</span> <span class="token function">scatter3</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span> s<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>h<span class="token punctuation">.</span>MarkerFaceColor <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span> <span class="token number">0.5</span> <span class="token number">0.5</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/9.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/9.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p> repmat - 重复数组副本<br>    此 MATLAB 函数 返回一个数组，该数组在其行维度和列维度包含 A 的 n 个副本。A 为矩阵<br>    时，B 大小为 size(A)*n。</p><p> scatter3 - 三维散点图<br>    此 MATLAB 函数 在向量 X、Y 和 Z 指定的位置显示圆圈。</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear<span class="token punctuation">;</span>clc<span class="token punctuation">;</span>close all<span class="token punctuation">;</span>x <span class="token operator">=</span> <span class="token function">linspace</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span> y1 <span class="token operator">=</span> <span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>y2 <span class="token operator">=</span> <span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>y3 <span class="token operator">=</span> y1 <span class="token operator">+</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">0.5</span><span class="token punctuation">;</span> figure<span class="token punctuation">;</span><span class="token function">scatter3</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> y3<span class="token punctuation">,</span> x<span class="token punctuation">,</span> x<span class="token punctuation">,</span> <span class="token string">'filled'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/10.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/10.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p> linspace - 生成线性间距向量<br>    此 MATLAB 函数 返回包含 x1 和 x2 之间的 100 个等间距点的行向量。</p><h1 class="bamboo-h " id="三维伪彩图">三维伪彩图</h1><br/><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">peaks</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">;</span>plot1 <span class="token operator">=</span> <span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">surf</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">colormap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% 获取第一幅图的 colormap，默认为 parula  </span>plot2 <span class="token operator">=</span> <span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">surf</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% 下面设置的是第二幅图的颜色</span><span class="token function">colormap</span><span class="token punctuation">(</span>hot<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/12.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/12.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p> colormap - 查看并设置当前颜色图<br>    此 MATLAB 函数 将当前图窗的颜色图设置为预定义的颜色图之一。如果您为图窗设置了颜色<br>    图，图窗中的坐标区和图将使用相同的颜色图。新颜色图的长度（颜色数）与当前颜色图相同。当您<br>    使用此语法时，不能为颜色图指定自定义长度。有关颜色图的详细信息，请参阅什么是颜色图？。</p><p> subplot - 在各个分块位置创建坐标区<br>    此 MATLAB 函数 将当前图窗划分为 m×n 网格，并在 p 指定的位置创建坐标区。MATLAB 按行<br>    号对子图位置进行编号。第一个子图是第一行的第一列，第二个子图是第一行的第二列，依此类<br>    推。如果指定的位置已存在坐标区，则此命令会将该坐标区设为当前坐标区。</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token comment">% 一个坐标轴</span>figure<span class="token punctuation">;</span>h1 <span class="token operator">=</span> <span class="token function">surf</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">;</span>hold onh2 <span class="token operator">=</span> <span class="token function">surf</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span> hold off<span class="token function">colormap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/13.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/13.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><h1 class="bamboo-h " id="裁剪伪彩图">裁剪伪彩图</h1><br/><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear<span class="token punctuation">;</span>clc<span class="token punctuation">;</span>close all<span class="token punctuation">;</span>figure<span class="token punctuation">;</span>n<span class="token operator">=</span><span class="token number">300</span><span class="token punctuation">;</span><span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">peaks</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token function">surf</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">;</span>shading interp<span class="token function">view</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>n    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>n        <span class="token keyword">if</span> <span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">2</span><span class="token operator">*</span><span class="token function">y</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token operator">></span><span class="token number">6</span><span class="token operator">&amp;&amp;</span><span class="token number">2</span><span class="token operator">*</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token operator">+</span><span class="token function">y</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token operator">&lt;</span><span class="token number">6</span>            <span class="token function">z</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span> <span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">NaN</span><span class="token punctuation">;</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token function">surf</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">;</span>shading interp<span class="token function">view</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token function">surf</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">;</span>shading interp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/14.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/14.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p> peaks - peaks 函数<br>    此 MATLAB 函数 返回在一个 49×49 网格上计算的 peaks 函数的 z 坐标。</p><p> surf - 曲面图<br>    此 MATLAB 函数 创建一个三维曲面图，它是一个具有实色边和实色面的三维曲面。该函数将矩阵<br>    Z 中的值绘制为由 X 和 Y 定义的 x-y 平面中的网格上方的高度。曲面的颜色根据 Z 指定的高<br>    度而变化。</p><p> shading - 设置颜色着色属性<br>    此 MATLAB 函数 每个网格线段和面具有恒定颜色，该颜色由该线段的端点或该面的角边处具有最<br>    小索引的颜色值确定。</p><p> view - 相机视线<br>    此 MATLAB 函数 为当前坐标区设置相机视线的方位角和仰角。</p><h1 class="bamboo-h " id="等高线图">等高线图</h1><br/><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear<span class="token punctuation">;</span>clc<span class="token punctuation">;</span>close all<span class="token punctuation">;</span>figure<span class="token punctuation">;</span><span class="token punctuation">[</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">]</span> <span class="token operator">=</span> peaks<span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">contour</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">contour</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">,</span> <span class="token string">'--'</span><span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>v <span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">contour</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">,</span> v<span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token operator">:</span><span class="token number">0.2</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">;</span>y <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token operator">:</span><span class="token number">0.2</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">[</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">meshgrid</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>Z <span class="token operator">=</span> X<span class="token operator">.*</span><span class="token function">exp</span><span class="token punctuation">(</span><span class="token operator">-</span>X<span class="token operator">.^</span><span class="token number">2</span><span class="token operator">-</span>Y<span class="token operator">.^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">contour</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">,</span> <span class="token string">'ShowText'</span><span class="token punctuation">,</span><span class="token string">'on'</span><span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/15.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/15.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p> contour - 矩阵的等高线图<br>    此 MATLAB 函数 创建一个包含矩阵 Z 的等值线的等高线图，其中 Z 包含 x-y 平面上的高度<br>    值。MATLAB 会自动选择要显示的等高线。Z 的列和行索引分别是平面中的 x 和 y 坐标。<br> figure - 创建图窗窗口<br>    此 MATLAB 函数 使用默认属性值创建一个新的图窗窗口。生成的图窗为当前图窗。<br> meshgrid - 二维和三维网格<br>    此 MATLAB 函数 基于向量 x 和 y 中包含的坐标返回二维网格坐标。X 是一个矩阵，每一行是<br>    x 的一个副本；Y 也是一个矩阵，每一列是 y 的一个副本。坐标 X 和 Y 表示的网格有<br>    length(y) 个行和 length(x) 个列。</p><h1 class="bamboo-h " id="三维等高线图">三维等高线图</h1><br/><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear<span class="token punctuation">;</span>clc<span class="token punctuation">;</span>close all<span class="token punctuation">;</span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token string">'Position'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">900</span><span class="token punctuation">,</span> <span class="token number">400</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">sphere</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">contour3</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">[</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">meshgrid</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token operator">:</span><span class="token number">0.25</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Z <span class="token operator">=</span> X<span class="token operator">.*</span><span class="token function">exp</span><span class="token punctuation">(</span><span class="token operator">-</span>X<span class="token operator">.^</span><span class="token number">2</span><span class="token operator">-</span>Y<span class="token operator">.^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">contour3</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">0.2</span> <span class="token operator">-</span><span class="token number">0.1</span> <span class="token number">0.1</span> <span class="token number">0.2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'ShowText'</span><span class="token punctuation">,</span> <span class="token string">'on'</span><span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">[</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">]</span> <span class="token operator">=</span> peaks<span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">contour3</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/17.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/17.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><h1 class="bamboo-h " id="等高线填充图">等高线填充图</h1><br/><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear<span class="token punctuation">;</span>clc<span class="token punctuation">;</span>close all<span class="token punctuation">;</span>figure<span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">peaks</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">contourf</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">contourf</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">,</span><span class="token string">'--'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% 限定范围</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">contourf</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'ShowText'</span><span class="token punctuation">,</span> <span class="token string">'on'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">contourf</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/16.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/16.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p> contourf - 填充的二维等高线图<br>    此 MATLAB 函数 创建一个包含矩阵 Z 的等值线的填充等高线图，其中 Z 包含 x-y 平面上的高<br>    度值。MATLAB 会自动选择要显示的等高线。Z 的列和行索引分别是平面中的 x 和 y 坐标。</p><h1 class="bamboo-h " id="三维矢量场图">三维矢量场图</h1><br/><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear<span class="token punctuation">;</span>clc<span class="token punctuation">;</span>close all<span class="token punctuation">;</span>figure<span class="token punctuation">;</span><span class="token punctuation">[</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">peaks</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% 矢量场，曲面法线</span><span class="token punctuation">[</span>U<span class="token punctuation">,</span> V<span class="token punctuation">,</span> W<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">surfnorm</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% 箭头长度、颜色</span><span class="token function">quiver3</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">,</span> Z<span class="token punctuation">,</span> U<span class="token punctuation">,</span> V<span class="token punctuation">,</span> W<span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  hold on<span class="token function">surf</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">,</span>Z<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">xlim</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ylim</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3.2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>shading interphold off<span class="token function">view</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/18.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/18.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><h1 class="bamboo-h " id="伪彩图+投影图">伪彩图+投影图</h1><br/><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear<span class="token punctuation">;</span>clc<span class="token punctuation">;</span>close all<span class="token punctuation">;</span>clear<span class="token punctuation">;</span>clc<span class="token punctuation">;</span>close all<span class="token punctuation">;</span>x <span class="token operator">=</span> <span class="token function">linspace</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>y <span class="token operator">=</span> <span class="token function">linspace</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">meshgrid</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>Z <span class="token operator">=</span> <span class="token function">peaks</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span> Y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">Z</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>z1 <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>Z<span class="token punctuation">)</span><span class="token punctuation">;</span>z2 <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span>Z<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>figure<span class="token punctuation">;</span><span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">plot</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> z1<span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">plot</span><span class="token punctuation">(</span>z2<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">subplot</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">surf</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> Z<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">xlim</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">ylim</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">view</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span>shading interp<span class="token comment">%平滑图像</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/19.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/19.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><h1 class="bamboo-h " id="热图">热图</h1><br/><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear<span class="token punctuation">;</span>clc<span class="token punctuation">;</span>close all<span class="token punctuation">;</span>clear<span class="token punctuation">;</span>clc<span class="token punctuation">;</span>z <span class="token operator">=</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">z</span><span class="token punctuation">(</span>z<span class="token operator">>=</span><span class="token number">0.0</span><span class="token operator">&amp;</span>z<span class="token operator">&lt;</span><span class="token number">0.6</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">;</span><span class="token function">z</span><span class="token punctuation">(</span>z<span class="token operator">>=</span><span class="token number">0.6</span><span class="token operator">&amp;</span>z<span class="token operator">&lt;</span><span class="token number">0.8</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0.7</span><span class="token punctuation">;</span><span class="token function">z</span><span class="token punctuation">(</span>z<span class="token operator">>=</span><span class="token number">0.8</span><span class="token operator">&amp;</span>z<span class="token operator">&lt;=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0.9</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">30</span>    <span class="token function">z</span><span class="token punctuation">(</span><span class="token function">randi</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">end</span><span class="token punctuation">,</span> <span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> nan<span class="token punctuation">;</span><span class="token keyword">end</span> <span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">31</span><span class="token operator">:</span><span class="token number">50</span>    <span class="token function">z</span><span class="token punctuation">(</span><span class="token number">30</span> <span class="token operator">+</span> <span class="token function">randi</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">end</span><span class="token punctuation">,</span> <span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> nan<span class="token punctuation">;</span><span class="token keyword">end</span><span class="token function">z</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token operator">:</span><span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token operator">:</span><span class="token number">45</span><span class="token punctuation">)</span> <span class="token operator">=</span> nan<span class="token punctuation">;</span>figure<span class="token punctuation">;</span><span class="token comment">% ax = surf(z);</span>ax <span class="token operator">=</span> <span class="token function">pcolor</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">view</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ax<span class="token punctuation">.</span>EdgeColor <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">1</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/20.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/20.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><h1 class="bamboo-h " id="热力图">热力图</h1><br/><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clearX<span class="token operator">=</span><span class="token function">randn</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Y<span class="token operator">=</span><span class="token function">randn</span><span class="token punctuation">(</span><span class="token number">8000</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Xmin<span class="token operator">=</span><span class="token function">min</span><span class="token punctuation">(</span>X<span class="token punctuation">)</span><span class="token punctuation">;</span>Xmax<span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>X<span class="token punctuation">)</span><span class="token punctuation">;</span>Ymin<span class="token operator">=</span><span class="token function">min</span><span class="token punctuation">(</span>Y<span class="token punctuation">)</span><span class="token punctuation">;</span>Ymax<span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>Y<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% t=[0:0.001:1].^1.0;</span><span class="token comment">% X=0.5*(t).*cos(618*pi*t)+0.5;</span><span class="token comment">% Y=0.5*(t).*sin(618*pi*t)+0.5;</span><span class="token comment">% Xmin=0;Xmax=1;Ymin=0;Ymax=1;</span><span class="token comment">%加密划分区间</span>Nx<span class="token operator">=</span><span class="token number">500</span><span class="token punctuation">;</span>Ny<span class="token operator">=</span><span class="token number">500</span><span class="token punctuation">;</span>Xedge<span class="token operator">=</span><span class="token function">linspace</span><span class="token punctuation">(</span>Xmin<span class="token punctuation">,</span>Xmax<span class="token punctuation">,</span>Nx<span class="token punctuation">)</span><span class="token punctuation">;</span>Yedge<span class="token operator">=</span><span class="token function">linspace</span><span class="token punctuation">(</span>Ymin<span class="token punctuation">,</span>Ymax<span class="token punctuation">,</span>Ny<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%N的xy定义是转置的</span><span class="token punctuation">[</span>N<span class="token punctuation">,</span><span class="token operator">~</span><span class="token punctuation">,</span><span class="token operator">~</span><span class="token punctuation">,</span>binX<span class="token punctuation">,</span>binY<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">histcounts2</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token keyword">inf</span><span class="token punctuation">,</span><span class="token function">Xedge</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">inf</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token keyword">inf</span><span class="token punctuation">,</span><span class="token function">Yedge</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">inf</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>XedgeM<span class="token operator">=</span><span class="token function">movsum</span><span class="token punctuation">(</span>Xedge<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>YedgeM<span class="token operator">=</span><span class="token function">movsum</span><span class="token punctuation">(</span>Yedge<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">[</span>Xedgemesh<span class="token punctuation">,</span>Yedgemesh<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">meshgrid</span><span class="token punctuation">(</span><span class="token function">XedgeM</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">YedgeM</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%绘制pcolor图</span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token function">pcolor</span><span class="token punctuation">(</span>Xedgemesh<span class="token punctuation">,</span>Yedgemesh<span class="token punctuation">,</span>N<span class="token operator">'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>shading interp<span class="token comment">%滤波平滑</span><span class="token comment">%h=ones(round(Nx/20));</span><span class="token comment">%h=fspecial('disk',round(Nx/40));</span>h <span class="token operator">=</span> <span class="token function">fspecial</span><span class="token punctuation">(</span><span class="token string">'gaussian'</span><span class="token punctuation">,</span><span class="token function">round</span><span class="token punctuation">(</span>Nx<span class="token operator">/</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%最终选用高斯滤波</span>N2<span class="token operator">=</span><span class="token function">imfilter</span><span class="token punctuation">(</span>N<span class="token punctuation">,</span>h<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token function">pcolor</span><span class="token punctuation">(</span>Xedgemesh<span class="token punctuation">,</span>Yedgemesh<span class="token punctuation">,</span>N2<span class="token operator">'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>shading interpind <span class="token operator">=</span> <span class="token function">sub2ind</span><span class="token punctuation">(</span><span class="token function">size</span><span class="token punctuation">(</span>N2<span class="token punctuation">)</span><span class="token punctuation">,</span>binX<span class="token punctuation">,</span>binY<span class="token punctuation">)</span><span class="token punctuation">;</span>col <span class="token operator">=</span> <span class="token function">N2</span><span class="token punctuation">(</span>ind<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token function">scatter</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span>Y<span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span>col<span class="token punctuation">,</span><span class="token string">'filled'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://www.freesion.com/article/46711092993/">热力图</a></p><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/21.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/21.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/22.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/22.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p> <img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/23.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/23.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p>heatmap - 创建热图<br>    此 MATLAB 函数 基于表 tbl 创建一个热图。xvar 输入参数指示沿 x 轴显示的表变量。yvar<br>    输入参数指示沿 y 轴显示的表变量。默认颜色基于计数聚合，这种方法计算每对 x 和 y 值一起<br>    出现在表中的总次数。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;PlotPub安装&quot;&gt;&lt;a href=&quot;#PlotPub安装&quot; class=&quot;headerlink&quot; title=&quot;PlotPub安装&quot;&gt;&lt;/a&gt;PlotPub安装&lt;/h1&gt;&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="数据建模" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="matlab" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/matlab/"/>
    
    <category term="画图" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/matlab/%E7%94%BB%E5%9B%BE/"/>
    
    
    <category term="数据建模" scheme="http://innocabroad.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="matlab" scheme="http://innocabroad.github.io/tags/matlab/"/>
    
    <category term="画图" scheme="http://innocabroad.github.io/tags/%E7%94%BB%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>数学建模思路</title>
    <link href="http://innocabroad.github.io/2022/09/16/shu-xue-jian-mo-si-lu/"/>
    <id>http://innocabroad.github.io/2022/09/16/shu-xue-jian-mo-si-lu/</id>
    <published>2022-09-16T02:35:58.000Z</published>
    <updated>2022-09-21T02:35:33.839Z</updated>
    
    <content type="html"><![CDATA[<h1 class="bamboo-h " id="问题拆解思路框架">问题拆解思路框架</h1><br/><h2 id="Matlab-origin基础"><a href="#Matlab-origin基础" class="headerlink" title="Matlab origin基础"></a>Matlab origin基础</h2><p>画图上手很快</p><p>关键词，用了什么算法，用了什么算法写什么算法。</p><p>知网上搜相关论文，用论文提取共同的点，在共同的点分析。</p><p>图很精美，但是要高级，图经过精心雕琢。学术，科研感。（总结，整理一篇matlab画图工具箱）</p><h2 id="解题思路框架"><a href="#解题思路框架" class="headerlink" title="解题思路框架"></a>解题思路框架</h2><ol><li>针对问题分析与拆解，得出解题思路框架</li><li>建模过程中风险因果思路分析<br>展示内容</li><li>公式字母的表达（格式统一）<br>word完成paper要看上去和谐。保证所有公式字母字体大小合适排版正确。<blockquote><p>word 公式排版tip</p></blockquote></li></ol><h1 class="bamboo-h " id="常用统计方法在建模过程中的运用">常用统计方法在建模过程中的运用</h1><br/><h2 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h2><ol><li><p>数据的预处理</p><p>遇到问题的数据不会很完美，对象是有缺点的，如果不直接去掉，就改造缺点</p><ul><li><p>不良数据</p><ul><li><p>有些以月为单位，有些以天为单位，有些以年为单位。粗暴直接删除（给个理由删除）</p></li><li><p>有洞就补，线性插值，拉格朗日插值，随机森林差值等。 很多方法去补充。有些数据不能补充，预测问题可以补充。</p><ul><li><input disabled="" type="checkbox"> 下篇博客整理</li></ul></li></ul></li><li><p>不平衡数据</p><ul><li><p>欠采样。发病人数一定是占总人数比较少的，交通事故的数量和整个一天的车流量是不平衡的。少的那一方是需要研究的对象，有的数据不平衡率就达到%95，这样的数据去做模型，但是实际是无效的数据。</p><ul><li>如何预处理？</li></ul></li><li><p>过采样。变量的个数大于样本量，对所有变量直接进行筛选。变量取值分布特别小（方差）特别小的时候，直接删除，没有替太多的信息量。通过什么方式去，保留有代表的数据。</p></li><li><p>SMOTE </p></li><li><p>简单的相关性分析，做一个<u>皮尔森相关性分析pearson</u>，<u>Sperman秩相关系数</u>,<u>余弦相似度计算</u></p></li></ul></li><li><p>确定建模对象（高维或大于样本量的）</p><ul><li><p>相关度分析</p><ul><li><input disabled="" type="checkbox"> 相关度分析博客</li></ul></li><li><p>关联度分析</p><ul><li>灰色</li></ul></li><li><p><a href="https://blog.csdn.net/loser_k/article/details/124454794">PCA降维</a></p></li><li><p>因子分析。把变量转化为因子。</p><ul><li>先分类再聚类，聚类之后再pca。通常建模的问题不会太简单，本身变量特别多的时候，一定是要对变量所处的类别去进行分类。如，关于人的变量归于一类，关于宏观的归于一类，有些来自外部环境归于一。300*300 的热力图 热力图是什么，怎么划。</li></ul></li></ul></li></ul><p>用好，把重要的变量保留下来。变量是有相关性的。只要方法是合理的叙述是清楚的结果明确的，都是对的。表述删除的原因，为什么删除，为什么用插补，为什么不用线性，给一个理由，为什么用相关性分析，为什么用pca。不需要原理，但是要说出来为什么要用。</p></li></ol><h2 id="离散模型"><a href="#离散模型" class="headerlink" title="离散模型"></a>离散模型</h2><ul><li>定性因变量（阳性-阴性，发病-不发病的变量）是<u>离散变量？</u>的定性变量<ul><li>0-1因变量<ul><li>logistic回归，SVM，DT可以作为切入点（<a href="https://www.baidu.com/link?url=-b7NhWvmw_zFNd9a1Qnh3UVJRmq93EiyFFAA7qs3PBQ_IJNJQ2BgH5vdn5lX9F-P2UNrpPzlQplGYH7yw-Skm-DcwoHIN1Q3sIB-brQwpQ7&wd=&eqid=9542541300008dba000000066323ec85">集成学习</a>）用的好不好看结果，看准确率。回潮矩阵的结果。</li></ul></li><li>多分类（0-1-2-3）因变量<ul><li>多分类logistic回归，（偏）比例优势模型 Priority-Model </li><li></li></ul></li></ul></li><li>离散型因变量<ul><li>发病的人数，死亡的人数，交通事故发生的个数，快递的量，双11快递的分布数量</li><li>poisson回归、负二项回归</li><li>hurdel model,tobit model 搜搜搜</li></ul></li></ul><h2 id="连续模型"><a href="#连续模型" class="headerlink" title="连续模型"></a>连续模型</h2><p>针对连续的模型。eg，发病时间长度，17天隔离，14天就可以。对</p><ul><li><p>线性回归 y &#x3D; ——</p><ul><li>变量的标准化（变量选择，降维），归一化，标准化，lasso</li><li>变量变换：ln，Box-cox变化，对变量进行组合，比值作为增速，变量是可解释的</li><li>PCA慎用变量组合（主成分就不是变量了，对模型的解读是吃力的，主成分的取值和变量的取值是两回事的，如果用了就要对主成分的原始变量进行解释）</li><li>样本聚类or变量聚类</li></ul></li><li><p>非线性回归 （可加模型，半参数模型，变系数模型）</p><ul><li>charge boost不如半参数回归模型</li></ul></li><li><p>关于模型结构（A影响B，B影响C，其实是A影响C）</p><ul><li><p>中介效应模型（A影响B，B影响C，其实是A影响C）</p></li><li><p>SEM（分层数据 不同省份作为区域，不同省份内的人的发病和治疗反应时间，分一个层级结构。进行分层）层分的越多，代码越复杂。在建模过程中加入到思考的过程中</p><ul><li><p>random effect model</p></li><li><p>random parameter model</p></li></ul></li></ul><p>在建模过程中加入到思考的过程中，不要用卷积网络cnn或者是gbdt梯度决策树<a href="https://blog.csdn.net/beiye_/article/details/123444653?spm=1001.2014.3001.5501">参考文献</a>。这是没有内容的文章，没有意义。<br>把所有的数据做一个分层，省份作为一个小组，每个省份都是一个模型，但是在数据的结构上进行了层次的划分，面板数据。</p><ul><li>时空相关<ul><li>car模型</li></ul></li></ul></li></ul><p>对数据结构要有一个深入的诊断。要分层处理数据。</p><h2 id="机器学习模型"><a href="#机器学习模型" class="headerlink" title="机器学习模型"></a>机器学习模型</h2><ul><li><p>包括但不限于神经网络、集成学习、深度学习（matlab神经网络，调包调参）</p><ol><li>模型训练和测试样本的比例，样本的划分要随机（要早论文中说我的样本随机）</li><li>调整参数的过程（要调整参数，写出参数）</li></ol><ul><li>列出最终的模型参数，以BP神经网络为例、权值、偏置、激活函数等参数，可依据这些参数再<br>现BP模型</li></ul><ol start="3"><li>训练和测试样本的相对误差结果展示</li></ol><ul><li>注意过拟合问题（两个数据都要展示，数据要真实）</li></ul></li></ul><h4 id="优化，综合评估"><a href="#优化，综合评估" class="headerlink" title="优化，综合评估"></a>优化，综合评估</h4><ul><li><p>包括但不限于遗传算法、粒子群算法、模拟退火算法等</p><ol><li><p>约束条件</p></li><li><p>调整参数的过程</p></li><li><p>基于实际意义的优化结果合理性</p></li></ol></li><li><p>评估指标构建</p><ol><li>单一赋权法，综合赋权法</li><li>评估指标的合理性解释</li></ol></li></ul><h1 class="bamboo-h " id="关于检验（why）">关于检验（why）</h1><br/><p>不论用什么分析方式，用什么模型。所有的结论，都要对合理性进行描述，为什么要这么描述，模型使用的合理性要论证。为什么用线性回归。不能说因为跑出来的mse数值很小p-value数值很小就可以。<br>任何一个模型，哪怕是线性模型也是有一定的假定和假设的。在假设中规避掉。<br>模型的合理性，数据敏感度分析<br>要去了解，如果我用了方差分析，数据需要有哪些要求，这个要求我的数据满足不满足，你要做验证。用了那就要验证。假定验证是不通过，那么怎么去弥补不足，怎么纠正改进，使得变得合情合理。<br>数学建模的目的是要投入生产的。是否可以实践，有合理性。<br>给一定的篇幅去对结果进行描述，我的模型的合理性，可以有落地性。我对模型有检验，我的模型可以被检验</p><h3 id="数据预处理的合理性描述（删除变量）"><a href="#数据预处理的合理性描述（删除变量）" class="headerlink" title="数据预处理的合理性描述（删除变量）"></a>数据预处理的合理性描述（删除变量）</h3><h3 id="模型使用合理性描述（模型使用的合理性要论证）"><a href="#模型使用合理性描述（模型使用的合理性要论证）" class="headerlink" title="模型使用合理性描述（模型使用的合理性要论证）"></a>模型使用合理性描述（模型使用的合理性要论证）</h3><h3 id="结果合理性论证"><a href="#结果合理性论证" class="headerlink" title="结果合理性论证"></a>结果合理性论证</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 class=&quot;bamboo-h &quot; id=&quot;问题拆解思路框架&quot;&gt;问题拆解思路框架&lt;/h1&gt;&lt;br/&gt;

&lt;h2 id=&quot;Matlab-origin基础&quot;&gt;&lt;a href=&quot;#Matlab-origin基础&quot; class=&quot;headerlink&quot; title=&quot;Matlab</summary>
      
    
    
    
    <category term="数据建模" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/"/>
    
    
    <category term="数据建模" scheme="http://innocabroad.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>数学建模模版思路</title>
    <link href="http://innocabroad.github.io/2022/09/16/shu-xue-jian-mo-mo-ban-si-lu/"/>
    <id>http://innocabroad.github.io/2022/09/16/shu-xue-jian-mo-mo-ban-si-lu/</id>
    <published>2022-09-16T02:35:58.000Z</published>
    <updated>2022-09-21T02:35:38.993Z</updated>
    
    <content type="html"><![CDATA[<h1 class="bamboo-h " id="问题拆解思路框架">问题拆解思路框架</h1><br/><h2 id="Matlab-origin基础"><a href="#Matlab-origin基础" class="headerlink" title="Matlab origin基础"></a>Matlab origin基础</h2><p>画图上手很快</p><p>关键词，用了什么算法，用了什么算法写什么算法。</p><p>知网上搜相关论文，用论文提取共同的点，在共同的点分析。</p><p>图很精美，但是要高级，图经过精心雕琢。学术，科研感。（总结，整理一篇matlab画图工具箱）</p><h2 id="解题思路框架"><a href="#解题思路框架" class="headerlink" title="解题思路框架"></a>解题思路框架</h2><ol><li>针对问题分析与拆解，得出解题思路框架</li><li>建模过程中风险因果思路分析<br>展示内容</li><li>公式字母的表达（格式统一）<br>word完成paper要看上去和谐。保证所有公式字母字体大小合适排版正确。<blockquote><p>word 公式排版tip</p></blockquote></li></ol><h1 class="bamboo-h " id="常用统计方法在建模过程中的运用">常用统计方法在建模过程中的运用</h1><br/><h2 id="数据预处理"><a href="#数据预处理" class="headerlink" title="数据预处理"></a>数据预处理</h2><ol><li><p>数据的预处理</p><p>遇到问题的数据不会很完美，对象是有缺点的，如果不直接去掉，就改造缺点</p><ul><li><p>不良数据</p><ul><li><p>有些以月为单位，有些以天为单位，有些以年为单位。粗暴直接删除（给个理由删除）</p></li><li><p>有洞就补，线性插值，拉格朗日插值，随机森林差值等。 很多方法去补充。有些数据不能补充，预测问题可以补充。</p><ul><li><input disabled="" type="checkbox"> 下篇博客整理</li></ul></li></ul></li><li><p>不平衡数据</p><ul><li><p>欠采样。发病人数一定是占总人数比较少的，交通事故的数量和整个一天的车流量是不平衡的。少的那一方是需要研究的对象，有的数据不平衡率就达到%95，这样的数据去做模型，但是实际是无效的数据。</p><ul><li>如何预处理？</li></ul></li><li><p>过采样。变量的个数大于样本量，对所有变量直接进行筛选。变量取值分布特别小（方差）特别小的时候，直接删除，没有替太多的信息量。通过什么方式去，保留有代表的数据。</p></li><li><p>SMOTE </p></li><li><p>简单的相关性分析，做一个<u>皮尔森相关性分析pearson</u>，<u>Sperman秩相关系数</u>,<u>余弦相似度计算</u></p></li></ul></li><li><p>确定建模对象（高维或大于样本量的）</p><ul><li><p>相关度分析</p><ul><li><input disabled="" type="checkbox"> 相关度分析博客</li></ul></li><li><p>关联度分析</p><ul><li>灰色</li></ul></li><li><p><a href="https://blog.csdn.net/loser_k/article/details/124454794">PCA降维</a></p></li><li><p>因子分析。把变量转化为因子。</p><ul><li>先分类再聚类，聚类之后再pca。通常建模的问题不会太简单，本身变量特别多的时候，一定是要对变量所处的类别去进行分类。如，关于人的变量归于一类，关于宏观的归于一类，有些来自外部环境归于一。300*300 的热力图 热力图是什么，怎么划。</li></ul></li></ul></li></ul><p>用好，把重要的变量保留下来。变量是有相关性的。只要方法是合理的叙述是清楚的结果明确的，都是对的。表述删除的原因，为什么删除，为什么用插补，为什么不用线性，给一个理由，为什么用相关性分析，为什么用pca。不需要原理，但是要说出来为什么要用。</p></li></ol><h2 id="离散模型"><a href="#离散模型" class="headerlink" title="离散模型"></a>离散模型</h2><ul><li>定性因变量（阳性-阴性，发病-不发病的变量）是<u>离散变量？</u>的定性变量<ul><li>0-1因变量<ul><li>logistic回归，SVM，DT可以作为切入点（<a href="https://www.baidu.com/link?url=-b7NhWvmw_zFNd9a1Qnh3UVJRmq93EiyFFAA7qs3PBQ_IJNJQ2BgH5vdn5lX9F-P2UNrpPzlQplGYH7yw-Skm-DcwoHIN1Q3sIB-brQwpQ7&wd=&eqid=9542541300008dba000000066323ec85">集成学习</a>）用的好不好看结果，看准确率。回潮矩阵的结果。</li></ul></li><li>多分类（0-1-2-3）因变量<ul><li>多分类logistic回归，（偏）比例优势模型 Priority-Model </li><li></li></ul></li></ul></li><li>离散型因变量<ul><li>发病的人数，死亡的人数，交通事故发生的个数，快递的量，双11快递的分布数量</li><li>poisson回归、负二项回归</li><li>hurdel model,tobit model 搜搜搜</li></ul></li></ul><h2 id="连续模型"><a href="#连续模型" class="headerlink" title="连续模型"></a>连续模型</h2><p>针对连续的模型。eg，发病时间长度，17天隔离，14天就可以。对</p><ul><li><p>线性回归 y &#x3D; ——</p><ul><li>变量的标准化（变量选择，降维），归一化，标准化，lasso</li><li>变量变换：ln，Box-cox变化，对变量进行组合，比值作为增速，变量是可解释的</li><li>PCA慎用变量组合（主成分就不是变量了，对模型的解读是吃力的，主成分的取值和变量的取值是两回事的，如果用了就要对主成分的原始变量进行解释）</li><li>样本聚类or变量聚类</li></ul></li><li><p>非线性回归 （可加模型，半参数模型，变系数模型）</p><ul><li>charge boost不如半参数回归模型</li></ul></li><li><p>关于模型结构（A影响B，B影响C，其实是A影响C）</p><ul><li><p>中介效应模型（A影响B，B影响C，其实是A影响C）</p></li><li><p>SEM（分层数据 不同省份作为区域，不同省份内的人的发病和治疗反应时间，分一个层级结构。进行分层）层分的越多，代码越复杂。在建模过程中加入到思考的过程中</p><ul><li><p>random effect model</p></li><li><p>random parameter model</p></li></ul></li></ul><p>在建模过程中加入到思考的过程中，不要用卷积网络cnn或者是gbdt梯度决策树<a href="https://blog.csdn.net/beiye_/article/details/123444653?spm=1001.2014.3001.5501">参考文献</a>。这是没有内容的文章，没有意义。<br>把所有的数据做一个分层，省份作为一个小组，每个省份都是一个模型，但是在数据的结构上进行了层次的划分，面板数据。</p><ul><li>时空相关<ul><li>car模型</li></ul></li></ul></li></ul><p>对数据结构要有一个深入的诊断。要分层处理数据。</p><h2 id="机器学习模型"><a href="#机器学习模型" class="headerlink" title="机器学习模型"></a>机器学习模型</h2><ul><li><p>包括但不限于神经网络、集成学习、深度学习（matlab神经网络，调包调参）</p><ol><li>模型训练和测试样本的比例，样本的划分要随机（要早论文中说我的样本随机）</li><li>调整参数的过程（要调整参数，写出参数）</li></ol><ul><li>列出最终的模型参数，以BP神经网络为例、权值、偏置、激活函数等参数，可依据这些参数再<br>现BP模型</li></ul><ol start="3"><li>训练和测试样本的相对误差结果展示</li></ol><ul><li>注意过拟合问题（两个数据都要展示，数据要真实）</li></ul></li></ul><h4 id="优化，综合评估"><a href="#优化，综合评估" class="headerlink" title="优化，综合评估"></a>优化，综合评估</h4><ul><li><p>包括但不限于遗传算法、粒子群算法、模拟退火算法等</p><ol><li><p>约束条件</p></li><li><p>调整参数的过程</p></li><li><p>基于实际意义的优化结果合理性</p></li></ol></li><li><p>评估指标构建</p><ol><li>单一赋权法，综合赋权法</li><li>评估指标的合理性解释</li></ol></li></ul><h1 class="bamboo-h " id="关于检验（why）">关于检验（why）</h1><br/><p>不论用什么分析方式，用什么模型。所有的结论，都要对合理性进行描述，为什么要这么描述，模型使用的合理性要论证。为什么用线性回归。不能说因为跑出来的mse数值很小p-value数值很小就可以。<br>任何一个模型，哪怕是线性模型也是有一定的假定和假设的。在假设中规避掉。<br>模型的合理性，数据敏感度分析<br>要去了解，如果我用了方差分析，数据需要有哪些要求，这个要求我的数据满足不满足，你要做验证。用了那就要验证。假定验证是不通过，那么怎么去弥补不足，怎么纠正改进，使得变得合情合理。<br>数学建模的目的是要投入生产的。是否可以实践，有合理性。<br>给一定的篇幅去对结果进行描述，我的模型的合理性，可以有落地性。我对模型有检验，我的模型可以被检验</p><h3 id="数据预处理的合理性描述（删除变量）"><a href="#数据预处理的合理性描述（删除变量）" class="headerlink" title="数据预处理的合理性描述（删除变量）"></a>数据预处理的合理性描述（删除变量）</h3><h3 id="模型使用合理性描述（模型使用的合理性要论证）"><a href="#模型使用合理性描述（模型使用的合理性要论证）" class="headerlink" title="模型使用合理性描述（模型使用的合理性要论证）"></a>模型使用合理性描述（模型使用的合理性要论证）</h3><h3 id="结果合理性论证"><a href="#结果合理性论证" class="headerlink" title="结果合理性论证"></a>结果合理性论证</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 class=&quot;bamboo-h &quot; id=&quot;问题拆解思路框架&quot;&gt;问题拆解思路框架&lt;/h1&gt;&lt;br/&gt;

&lt;h2 id=&quot;Matlab-origin基础&quot;&gt;&lt;a href=&quot;#Matlab-origin基础&quot; class=&quot;headerlink&quot; title=&quot;Matlab</summary>
      
    
    
    
    <category term="数据建模" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/"/>
    
    
    <category term="数据建模" scheme="http://innocabroad.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>遗传算法matlab工具箱</title>
    <link href="http://innocabroad.github.io/2022/09/15/yi-chuan-suan-fa-matlab-gong-ju-xiang/"/>
    <id>http://innocabroad.github.io/2022/09/15/yi-chuan-suan-fa-matlab-gong-ju-xiang/</id>
    <published>2022-09-15T09:49:59.000Z</published>
    <updated>2022-09-16T06:16:21.552Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>遗传算法是现代优化算法之一，为方便使用Matlab提供了遗传算法工具箱，可以方便我们解决一般的优化问题。</p><p><a href="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/%E6%88%AA%E5%B1%8F2022-09-15%2017.54.27.png">https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/截屏2022-09-15%2017.54.27.png</a></p><p>谢菲尔德遗传工具箱的使用<br>安装<a href="https://github.com/UoS-CODeM/GA-Toolbox.git">遗传工具箱</a></p><ol><li><p>先下载谢菲尔德遗传工具箱包，把里面文件夹gatbx复制到matlab安装包toolbox文件夹下，粘贴ok</p></li><li><p>找到主页点击设置路径，找到matlab安装包toolbox文件夹下的文件夹gatbx<br><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/%E6%88%AA%E5%B1%8F2022-09-15%2019.02.42.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/%E6%88%AA%E5%B1%8F2022-09-15%2019.02.42.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/%E6%88%AA%E5%B1%8F2022-09-15%2019.03.49.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/%E6%88%AA%E5%B1%8F2022-09-15%2019.03.49.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p></li><li><p>可以使用函数ver查看gatbx工具箱的名字、发行版本等</p><pre class="line-numbers language-none"><code class="language-none">v &#x3D; ver(&#39;gatbx&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/%E6%88%AA%E5%B1%8F2022-09-15%2019.06.14.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/%E6%88%AA%E5%B1%8F2022-09-15%2019.06.14.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p></li></ol><h2 class="bamboo-h-b" id="案例一 简单一元函数的优化" style="color:!important">案例一 简单一元函数的优化</h2><div></div><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/2ba7adf475e9481e94d1dec1680287de.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/2ba7adf475e9481e94d1dec1680287de.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clcclear allclose all<span class="token comment">%% 画出函数图</span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hold on<span class="token punctuation">;</span>lb<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>ub<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">%函数自变量范围【1,2】</span><span class="token function">ezplot</span><span class="token punctuation">(</span><span class="token string">'sin(10*pi*X)/X'</span><span class="token punctuation">,</span><span class="token punctuation">[</span>lb<span class="token punctuation">,</span>ub<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">%画出函数曲线</span><span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">'自变量/X'</span><span class="token punctuation">)</span><span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'函数值/Y'</span><span class="token punctuation">)</span><span class="token comment">%% 定义遗传算法参数</span>NIND<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">;</span>        <span class="token comment">%个体数目</span>MAXGEN<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span>      <span class="token comment">%最大遗传代数</span>PRECI<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span>       <span class="token comment">%变量的二进制位数</span>GGAP<span class="token operator">=</span><span class="token number">0.95</span><span class="token punctuation">;</span>      <span class="token comment">%代沟</span>px<span class="token operator">=</span><span class="token number">0.7</span><span class="token punctuation">;</span>         <span class="token comment">%交叉概率</span>pm<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">;</span>        <span class="token comment">%变异概率</span>trace<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>MAXGEN<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment">%寻优结果的初始值</span>FieldD<span class="token operator">=</span><span class="token punctuation">[</span>PRECI<span class="token punctuation">;</span>lb<span class="token punctuation">;</span>ub<span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                      <span class="token comment">%区域描述器</span>Chrom<span class="token operator">=</span><span class="token function">crtbp</span><span class="token punctuation">(</span>NIND<span class="token punctuation">,</span>PRECI<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">%创建任意离散随机种群                    </span><span class="token comment">%% 优化</span>gen<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>                                  <span class="token comment">%代计数器</span>X<span class="token operator">=</span><span class="token function">bs2rv</span><span class="token punctuation">(</span>Chrom<span class="token punctuation">,</span>FieldD<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment">%计算初始种群的十进制转换</span>ObjV<span class="token operator">=</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">*</span><span class="token keyword">pi</span><span class="token operator">*</span>X<span class="token punctuation">)</span><span class="token operator">./</span>X<span class="token punctuation">;</span>        <span class="token comment">%计算目标函数值</span><span class="token keyword">while</span> gen<span class="token operator">&lt;</span>MAXGEN   FitnV<span class="token operator">=</span><span class="token function">ranking</span><span class="token punctuation">(</span>ObjV<span class="token punctuation">)</span><span class="token punctuation">;</span>                               <span class="token comment">%分配适应度值，估算适应度</span>   SelCh<span class="token operator">=</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">'sus'</span><span class="token punctuation">,</span>Chrom<span class="token punctuation">,</span>FitnV<span class="token punctuation">,</span>GGAP<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment">%选择</span>   SelCh<span class="token operator">=</span><span class="token function">recombin</span><span class="token punctuation">(</span><span class="token string">'xovsp'</span><span class="token punctuation">,</span>SelCh<span class="token punctuation">,</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment">%重组</span>   SelCh<span class="token operator">=</span><span class="token function">mut</span><span class="token punctuation">(</span>SelCh<span class="token punctuation">,</span>pm<span class="token punctuation">)</span><span class="token punctuation">;</span>                               <span class="token comment">%变异</span>   X<span class="token operator">=</span><span class="token function">bs2rv</span><span class="token punctuation">(</span>SelCh<span class="token punctuation">,</span>FieldD<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment">%子代个体的十进制转换</span>   ObjVSel<span class="token operator">=</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">*</span><span class="token keyword">pi</span><span class="token operator">*</span>X<span class="token punctuation">)</span><span class="token operator">./</span>X<span class="token punctuation">;</span>             <span class="token comment">%计算子代的目标函数值</span>   <span class="token punctuation">[</span>Chrom<span class="token punctuation">,</span>ObjV<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">reins</span><span class="token punctuation">(</span>Chrom<span class="token punctuation">,</span>SelCh<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>ObjV<span class="token punctuation">,</span>ObjVSel<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%重插入子代到父代，得到新种群</span>   X<span class="token operator">=</span><span class="token function">bs2rv</span><span class="token punctuation">(</span>Chrom<span class="token punctuation">,</span>FieldD<span class="token punctuation">)</span><span class="token punctuation">;</span>   gen<span class="token operator">=</span>gen<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>                                             <span class="token comment">%代计数器增加</span>   <span class="token comment">%获取每代的最优解及其序号，Y为最优解,I为个体的序号</span>   <span class="token punctuation">[</span>Y<span class="token punctuation">,</span>I<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">min</span><span class="token punctuation">(</span>ObjV<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">trace</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>gen<span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">X</span><span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment">%记下每代的最优值</span>   <span class="token function">trace</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>gen<span class="token punctuation">)</span><span class="token operator">=</span>Y<span class="token punctuation">;</span>                               <span class="token comment">%记下每代的最优值</span><span class="token keyword">end</span><span class="token function">plot</span><span class="token punctuation">(</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'bo'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment">%画出每代的最优点</span>grid on<span class="token punctuation">;</span><span class="token function">plot</span><span class="token punctuation">(</span>X<span class="token punctuation">,</span>ObjV<span class="token punctuation">,</span><span class="token string">'b*'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">%画出最后一代的种群</span>hold off<span class="token comment">%% 画进化图</span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">plot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span>MAXGEN<span class="token punctuation">,</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>grid on<span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">'遗传代数'</span><span class="token punctuation">)</span><span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'解的变化'</span><span class="token punctuation">)</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'进化过程'</span><span class="token punctuation">)</span>bestY<span class="token operator">=</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token keyword">end</span><span class="token punctuation">)</span><span class="token punctuation">;</span>bestX<span class="token operator">=</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">end</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'最优解:\nX='</span><span class="token punctuation">,</span><span class="token function">num2str</span><span class="token punctuation">(</span>bestX<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'\nY='</span><span class="token punctuation">,</span><span class="token function">num2str</span><span class="token punctuation">(</span>bestY<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'\n'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 运行后会输出两张图，左图为目标函数图，图二为进化图<br><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/%E6%88%AA%E5%B1%8F2022-09-15%2019.09.17.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/%E6%88%AA%E5%B1%8F2022-09-15%2019.09.17.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><blockquote><p>最优解:<br>X&#x3D;1.1491<br>Y&#x3D;-0.8699</p></blockquote><h2 class="bamboo-h-b" id="案例二 多元函数优化" style="color:!important">案例二 多元函数优化</h2><div></div><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/82d8566fce5340c5948d7632d4c8c2ad.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/82d8566fce5340c5948d7632d4c8c2ad.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"><br> 遗传算法优化程序代码：</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clcclear allclose all<span class="token comment">%% 画出函数图</span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>lbx<span class="token operator">=</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span>ubx<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">%函数自变量x范围【-2,2】</span>lby<span class="token operator">=</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span>uby<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">%函数自变量y范围【-2,2】</span><span class="token function">ezmesh</span><span class="token punctuation">(</span><span class="token string">'y*sin(2*pi*x)+x*cos(2*pi*y)'</span><span class="token punctuation">,</span><span class="token punctuation">[</span>lbx<span class="token punctuation">,</span>ubx<span class="token punctuation">,</span>lby<span class="token punctuation">,</span>uby<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">%画出函数曲线</span>hold on<span class="token punctuation">;</span><span class="token comment">%% 定义遗传算法参数</span>NIND<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">;</span>        <span class="token comment">%个体数目</span>MAXGEN<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">;</span>      <span class="token comment">%最大遗传代数</span>PRECI<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">;</span>       <span class="token comment">%变量的二进制位数</span>GGAP<span class="token operator">=</span><span class="token number">0.95</span><span class="token punctuation">;</span>      <span class="token comment">%代沟</span>px<span class="token operator">=</span><span class="token number">0.7</span><span class="token punctuation">;</span>         <span class="token comment">%交叉概率</span>pm<span class="token operator">=</span><span class="token number">0.01</span><span class="token punctuation">;</span>        <span class="token comment">%变异概率</span>trace<span class="token operator">=</span><span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>MAXGEN<span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment">%寻优结果的初始值</span>FieldD<span class="token operator">=</span><span class="token punctuation">[</span>PRECI PRECI<span class="token punctuation">;</span>lbx lby<span class="token punctuation">;</span>ubx uby<span class="token punctuation">;</span><span class="token number">1</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token number">0</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token number">1</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token number">1</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                      <span class="token comment">%区域描述器</span>Chrom<span class="token operator">=</span><span class="token function">crtbp</span><span class="token punctuation">(</span>NIND<span class="token punctuation">,</span>PRECI<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                      <span class="token comment">%初始种群</span><span class="token comment">%% 优化</span>gen<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>                                  <span class="token comment">%代计数器</span>XY<span class="token operator">=</span><span class="token function">bs2rv</span><span class="token punctuation">(</span>Chrom<span class="token punctuation">,</span>FieldD<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment">%计算初始种群的十进制转换</span>X<span class="token operator">=</span><span class="token function">XY</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Y<span class="token operator">=</span><span class="token function">XY</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ObjV<span class="token operator">=</span>Y<span class="token operator">.*</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span><span class="token keyword">pi</span><span class="token operator">*</span>X<span class="token punctuation">)</span><span class="token operator">+</span>X<span class="token operator">.*</span><span class="token function">cos</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span><span class="token keyword">pi</span><span class="token operator">*</span>Y<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">%计算目标函数值</span><span class="token keyword">while</span> gen<span class="token operator">&lt;</span>MAXGEN   FitnV<span class="token operator">=</span><span class="token function">ranking</span><span class="token punctuation">(</span><span class="token operator">-</span>ObjV<span class="token punctuation">)</span><span class="token punctuation">;</span>                              <span class="token comment">%分配适应度值</span>   SelCh<span class="token operator">=</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">'sus'</span><span class="token punctuation">,</span>Chrom<span class="token punctuation">,</span>FitnV<span class="token punctuation">,</span>GGAP<span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token comment">%选择</span>   SelCh<span class="token operator">=</span><span class="token function">recombin</span><span class="token punctuation">(</span><span class="token string">'xovsp'</span><span class="token punctuation">,</span>SelCh<span class="token punctuation">,</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token comment">%重组</span>   SelCh<span class="token operator">=</span><span class="token function">mut</span><span class="token punctuation">(</span>SelCh<span class="token punctuation">,</span>pm<span class="token punctuation">)</span><span class="token punctuation">;</span>                               <span class="token comment">%变异</span>   XY<span class="token operator">=</span><span class="token function">bs2rv</span><span class="token punctuation">(</span>SelCh<span class="token punctuation">,</span>FieldD<span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment">%子代个体的十进制转换</span>   X<span class="token operator">=</span><span class="token function">XY</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Y<span class="token operator">=</span><span class="token function">XY</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   ObjVSel<span class="token operator">=</span>Y<span class="token operator">.*</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span><span class="token keyword">pi</span><span class="token operator">*</span>X<span class="token punctuation">)</span><span class="token operator">+</span>X<span class="token operator">.*</span><span class="token function">cos</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span><span class="token keyword">pi</span><span class="token operator">*</span>Y<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment">%计算子代的目标函数值</span>   <span class="token punctuation">[</span>Chrom<span class="token punctuation">,</span>ObjV<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">reins</span><span class="token punctuation">(</span>Chrom<span class="token punctuation">,</span>SelCh<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>ObjV<span class="token punctuation">,</span>ObjVSel<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%重插入子代到父代，得到新种群</span>   XY<span class="token operator">=</span><span class="token function">bs2rv</span><span class="token punctuation">(</span>Chrom<span class="token punctuation">,</span>FieldD<span class="token punctuation">)</span><span class="token punctuation">;</span>   gen<span class="token operator">=</span>gen<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>                                             <span class="token comment">%代计数器增加</span>   <span class="token comment">%获取每代的最优解及其序号，Y为最优解,I为个体的序号</span>   <span class="token punctuation">[</span>Y<span class="token punctuation">,</span>I<span class="token punctuation">]</span><span class="token operator">=</span><span class="token function">max</span><span class="token punctuation">(</span>ObjV<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">trace</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>gen<span class="token punctuation">)</span><span class="token operator">=</span><span class="token function">XY</span><span class="token punctuation">(</span>I<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token comment">%记下每代的最优值</span>   <span class="token function">trace</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>gen<span class="token punctuation">)</span><span class="token operator">=</span>Y<span class="token punctuation">;</span>                               <span class="token comment">%记下每代的最优值</span><span class="token keyword">end</span><span class="token function">plot3</span><span class="token punctuation">(</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'bo'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                            <span class="token comment">%画出每代的最优点</span>grid on<span class="token punctuation">;</span><span class="token function">plot3</span><span class="token punctuation">(</span><span class="token function">XY</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">XY</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ObjV<span class="token punctuation">,</span><span class="token string">'bo'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">%画出最后一代的种群</span>hold off<span class="token comment">%% 画进化图</span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">plot</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span>MAXGEN<span class="token punctuation">,</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>grid on<span class="token function">xlabel</span><span class="token punctuation">(</span><span class="token string">'遗传代数'</span><span class="token punctuation">)</span><span class="token function">ylabel</span><span class="token punctuation">(</span><span class="token string">'解的变化'</span><span class="token punctuation">)</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">'进化过程'</span><span class="token punctuation">)</span>bestZ<span class="token operator">=</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token keyword">end</span><span class="token punctuation">)</span><span class="token punctuation">;</span>bestX<span class="token operator">=</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">end</span><span class="token punctuation">)</span><span class="token punctuation">;</span>bestY<span class="token operator">=</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token keyword">end</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'最优解:\nX='</span><span class="token punctuation">,</span><span class="token function">num2str</span><span class="token punctuation">(</span>bestX<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'\nY='</span><span class="token punctuation">,</span><span class="token function">num2str</span><span class="token punctuation">(</span>bestY<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'\nZ='</span><span class="token punctuation">,</span><span class="token function">num2str</span><span class="token punctuation">(</span>bestZ<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'\n'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> 结果展示</p><p><img src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/%E6%88%AA%E5%B1%8F2022-09-15%2019.12.31.png" class="lazyload placeholder" data-srcset="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/%E6%88%AA%E5%B1%8F2022-09-15%2019.12.31.png" srcset="https://pic1.zhimg.com/v2-cd38920285d125be80b3eb504052c550_b.webp"></p><p> 遗传算法工具箱提供了一种求解非线性、多模型、多目标、等复杂系统优化问题的通用框架，它不依赖问题的具体领域，对问题的种类具有很强的鲁棒性，所以它广泛应用于各个科学领域。</p><blockquote><p>最优解:<br>X&#x3D;-1.7665<br>Y&#x3D;1.5151<br>Z&#x3D;3.2655</p></blockquote><embed src="https://cdn.jsdelivr.net/gh/innocabroad/imageRepository/img/《遗传算法及其matlab实现》.pdf" type="application/pdf" width=100% height=500><p>查看pdf1</p><h1 id="优秀论文介绍"><a href="#优秀论文介绍" class="headerlink" title="优秀论文介绍"></a>优秀论文介绍</h1><p>遗传算法是 Holland 教授于 1962 年提出的模拟自然界遗传机制和生物进化论 而成的一种并行随机搜索最优化方法。它的基本思想是把生物界“优胜劣汰”的进化原理引入优化参数形成的编码串联群体中，按照所选的适应度函数并通过遗传中的选择、交叉和变异对个体进行筛选，使适应度好的个体被保留，适应度 差的个体被淘汰，新的群体既继承上一代的信息，又优于上一代。这样反复循环，直至满足条件。它的基本步骤如下:</p><ol><li>随机初始化种群;</li><li>计算种群适应度，从中找出最优个体;</li><li>依次进行选择操作、交叉操作和变异操作;</li><li>重复验算，达到预定的进化代数时为止。</li><li>遗传算法是模拟自然界生物进化过程与机制求解极值问题的一类自组织、自适应人工智能技术，其基本思想是模拟自然界遗传机制和生物进化论而形成的一种过程搜索最优解的算法，具有坚实的生物学基础。遗传算法提供了一种求解复 杂系统优化问题的通用框架，具有广泛的应用价值。</li></ol><h1 id="遗传算法的优缺点"><a href="#遗传算法的优缺点" class="headerlink" title="遗传算法的优缺点"></a>遗传算法的优缺点</h1><p>2.1 遗传算法的优点</p><ol><li>如果处理得当，可以在优化问题中得到全局最优解</li><li>比较容易实现并行化计算</li><li>遗传算法以结果为导向，最关注的两个点，一是编码与解码，一是适应度函数。它需要的背景知识少，也不需要太关注过程。所以应用范围非常广，可以解决非线性、不连续的问题，甚至有些无法清晰知道过程的问题，也可以解决。<br>总之就是原理简单，功效强大。<br>2.2 遗传算法的缺点</li><li>遗传算法非常依赖适应度函数，可以说适应度函数直接确定了结果的走向，而这个函数需要使用者自行提供，而且还没有标准，需根据实现问题总结出来</li><li>群体大小选择不当，或者选择压设置不对，都可能会过早收敛，错过全局最优解，只能达到局部最优解</li><li>因为遗传算法并不太关注过程，所以计算过程中的参数稍有不同可能会得到不同结果。这些参数包括群体大小、交换频率、突变频率等。</li><li>当染色体过长(即基因数过多)时，需要重组的片段更多，导致群体规模非常大，使计算时间急剧增加</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;遗传算法是现代优化算法之一，为方便使用Matlab提供了遗传算法工具箱，可以方便我们解决一般的优化问题。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;h</summary>
      
    
    
    
    <category term="数据建模" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="遗传算法" scheme="http://innocabroad.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="数据建模" scheme="http://innocabroad.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="matlab" scheme="http://innocabroad.github.io/tags/matlab/"/>
    
    <category term="遗传算法" scheme="http://innocabroad.github.io/tags/%E9%81%97%E4%BC%A0%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>hexo流程图插件mermaid</title>
    <link href="http://innocabroad.github.io/2022/09/15/hexo-liu-cheng-tu-cha-jian-mermaid/"/>
    <id>http://innocabroad.github.io/2022/09/15/hexo-liu-cheng-tu-cha-jian-mermaid/</id>
    <published>2022-09-15T09:00:05.000Z</published>
    <updated>2022-09-15T11:14:19.106Z</updated>
    
    <content type="html"><![CDATA[<h2 class="bamboo-h " id="npm安装hexo对应插件">npm安装hexo对应插件</h2><br/><pre class="line-numbers language-none"><code class="language-none">npm i hexo-filter-mermaid-diagrams<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 class="bamboo-h " id="配置hexo">配置hexo</h2><br/><p>什么配置不配置，主要是要npm一切</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-filter-mermaid-diagramsnpm install --save hexo-filter-flowchart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 class=&quot;bamboo-h &quot; id=&quot;npm安装hexo对应插件&quot;&gt;npm安装hexo对应插件&lt;/h2&gt;&lt;br/&gt;
&lt;pre class=&quot;line-numbers language-none&quot;&gt;&lt;code class=&quot;language-none&quot;&gt;npm i h</summary>
      
    
    
    
    <category term="功能教程" scheme="http://innocabroad.github.io/categories/%E5%8A%9F%E8%83%BD%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="hexo" scheme="http://innocabroad.github.io/tags/hexo/"/>
    
    <category term="mermaid" scheme="http://innocabroad.github.io/tags/mermaid/"/>
    
  </entry>
  
</feed>
